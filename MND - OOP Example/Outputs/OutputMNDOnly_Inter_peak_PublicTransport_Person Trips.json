{"py/object": "matrix_class_v2.MatrixStack", "_name": "OutputMNDOnly", "_vehicle_type": "PublicTransport", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"json://501": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 501, "_targets": {"json://501": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://502": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 502, "_targets": {"json://502": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://504": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 504, "_targets": {"json://504": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://505": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 505, "_targets": {"json://505": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://506": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 506, "_targets": {"json://506": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://509": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 509, "_targets": {"json://509": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://511": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 511, "_targets": {"json://511": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://512": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 512, "_targets": {"json://512": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://513": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 513, "_targets": {"json://513": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://514": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 514, "_targets": {"json://514": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://515": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 515, "_targets": {"json://515": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://516": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 516, "_targets": {"json://516": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://517": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 517, "_targets": {"json://517": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://519": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 519, "_targets": {"json://519": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://520": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 520, "_targets": {"json://520": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://521": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 521, "_targets": {"json://521": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://523": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 523, "_targets": {"json://523": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://524": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 524, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://525": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 525, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://526": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 526, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://527": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 527, "_targets": {"json://527": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://528": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 528, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://531": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 531, "_targets": {"json://531": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://532": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 532, "_targets": {"json://532": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://533": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 533, "_targets": {"json://533": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://534": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 534, "_targets": {"json://534": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://535": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 535, "_targets": {"json://535": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://536": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 536, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://537": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 537, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://538": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 538, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://539": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 539, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://540": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 540, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://541": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 541, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://542": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 542, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://543": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 543, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://544": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 544, "_targets": {"json://544": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://545": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 545, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://546": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 546, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://547": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 547, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://548": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 548, "_targets": {"json://548": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://551": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 551, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://562": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 562, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://566": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 566, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://567": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 567, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://570": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 570, "_targets": {"json://570": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://571": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 571, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://572": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 572, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://573": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 573, "_targets": {"json://573": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://601": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 601, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://602": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 602, "_targets": {"json://602": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://603": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 603, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://604": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 604, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://605": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 605, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://606": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 606, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://607": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 607, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://608": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 608, "_targets": {"json://608": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://609": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 609, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://610": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 610, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5001": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5001, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5002": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5002, "_targets": {"json://5002": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5003": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5003, "_targets": {"json://5003": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5004": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5004, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5005": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5005, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7105265186923027}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2894734813076974}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5006": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5006, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6336305213085214}, "json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3663694786914786}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5007": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5007, "_targets": {"json://5007": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5008": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5008, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5009": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5009, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.12574033987473257}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8742596601252675}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5010": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5010, "_targets": {"json://5010": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5011": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5011, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5012": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5012, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5013": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5013, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5014": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5014, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5015": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5015, "_targets": {"json://5015": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5016": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5016, "_targets": {"json://5019": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.23915238262142025}, "json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7608476173785798}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5017": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5017, "_targets": {"json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5018": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5018, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5019": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5019, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7224258444377175}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5020": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5020, "_targets": {"json://5020": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5021": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5021, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5022": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5022, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5023": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5023, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16270700178727196}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8372929982127281}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5024": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5024, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5025": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5025, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5924220607039576}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.40757793929604236}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5026": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5026, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5027": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5027, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5028": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5028, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8675205867701657}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13247941322983423}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5029": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5029, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5147106005829688}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.48528939941703114}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5030": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5030, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.38833292989011636}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6116670701098836}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5031": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5031, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9863284020535221}, "json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.013671597946477902}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5032": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5032, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5033": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5033, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5034": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5034, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5035": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5035, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5036": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5036, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5037": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5037, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5038": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5038, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5039": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5039, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5040": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5040, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5041": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5041, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5042": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5042, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5043": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5043, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5045": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5045, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5046": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5046, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5047": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5047, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5048": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5048, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5049": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5049, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5050": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5050, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5051": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5051, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5052": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5052, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5053": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5053, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5054": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5054, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5055": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5055, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5056": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5056, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5065": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5065, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5067": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5067, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06201399661995637}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9379860033800437}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5068": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5068, "_targets": {"json://5068": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5069": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5069, "_targets": {"json://5069": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5070": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5070, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5100": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5100, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5101": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5101, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5102": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5102, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5103": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5103, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5104": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5104, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5105": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5105, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5106": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5106, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5107": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5107, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.29235456942551624}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7076454305744838}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5108": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5108, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5109": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5109, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5110": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5110, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7387638702178395}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.26123612978216043}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5111": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5111, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2515912022033352}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7484087977966648}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5112": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5112, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5115": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5115, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.22736056963670478}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7726394303632952}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5116": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5116, "_targets": {"json://5116": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5117": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5117, "_targets": {"json://5139": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.28054378071849867}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7194562192815013}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5118": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5118, "_targets": {"json://5118": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5119": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5119, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5120": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5120, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5121": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5121, "_targets": {"json://5121": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5122": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5122, "_targets": {"json://5122": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5124": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5124, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4437572194572055}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5125": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5125, "_targets": {"json://5124": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13644820554642537}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8635517944535747}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5126": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5126, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5127": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5127, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5128": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5128, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.028333630736165107}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9716663692638349}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5129": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5129, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11436485547237808}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8856351445276219}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5130": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5130, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.29984251486319297}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7001574851368071}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5131": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5131, "_targets": {"json://5131": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5132": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5132, "_targets": {"json://5132": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5133": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5133, "_targets": {"json://5133": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5134": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5134, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.32382409830106296}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.676175901698937}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5135": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5135, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08645655874211541}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9135434412578846}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5136": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5136, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.239089678008408}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5137": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5137, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5138": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5138, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5139": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5139, "_targets": {"json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5140": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5140, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5141": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5141, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2216693993246311}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.778330600675369}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5142": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5142, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.026609684324048147}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9733903156759518}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5143": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5143, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0716213365076186}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9283786634923814}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9001": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9001, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9002": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9002, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9003": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9003, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9004": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9004, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9005": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9005, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9006": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9006, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9007": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9007, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9008": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9008, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9009": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9009, "_targets": {"json://9009": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}}}, "_zones": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "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", "txt": false, "meta": {"dtypes": {"index": "int64", "mnd_zone": "int64", "x_coord": "int64", "y_coord": "int64", "area_ref": "object", "sector": "int64", "msoa": "object", "district": "object", "Urban city and town": "int64", "Rural village": "int64", "Rural hamlets and isolated dwellings": "int64", "Rural town and fringe": "int64", "Rural village in a sparse setting": "int64", "Rural hamlets and isolated dwellings in a sparse setting": "int64", "Rural town and fringe in a sparse setting": "int64", "urbanrural": "object", "cordon_inner": "object", "cordon_outer": "object", "Internal": "bool"}, "index": "{\"py/object\": \"pandas.core.indexes.numeric.Int64Index\", \"comp\": true, \"values\": \"eJwtk8FtRSEQA1tJATnYsMCnlij9txE8m4ulp7VXMPj9LPn7a2lEKrIiO3KfOFNn6hmJxbE4Fp9IfEORmEd8I74R34hvxDc+T2YsM/tmfDO+Gd+Mb8Y38WVpZWklUUlUEpVEJVFJVBKVxIpvx7cz2BmcLDgZnAzOW7Bz3537bvFZkRXZkRP5RN4JtrNAjagZJfQUVM2qYSX49IPm8OosAAVBgVAwFBAFRYFRJgtNgVOjn4YsWAVXAVaQFWgFWw2ykyygBWmBWrAWsAVtgVvwFsAFcYFc1Z0gC3BBXCAXzFWkFikeQIvUIrW6UGQX2d3tYsNmw2YDD2W1UjloG9qGtqFtaBvahrb/e0q269p97Zp2T7uoEDaEDWGPrjd+2Bq2hq1ha9gatoatYevZfwUnhK1ha9gatoatYWvYGraGrcP20q5Luy7turTr0q5Luy7turTr6f39AzjkrWM=\", \"txt\": false, \"meta\": {\"dtype\": \"int64\", \"name\": \"reference\"}}", "column_level_names": [null], "header": [0]}}, "_source_file": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["C:\\", "Users", "UKTMB001", "Documents", "Python Scripts", "MND", "ZoningTemplate_Model_v2.xlsx"]}]}, "_source_sheet": "zones"}, "_time_period": "Inter_peak", "_value_type": "Person Trips", "_levels": {"json://1": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 1, "_purpose": "Commuting", "_time_period": "Inter_peak", "_vehicle_type": "PublicTransport", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: Commuting\nlevel: 1\nzone_count: 168\nmatrix_sum: 45.66666666666667\ninterzonal_sum: 43.046232382989565\nintrazonal_sum: 2.6204342836771066\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Commuting\n    level: 1\n    zone_count: 168\n    matrix_sum: 28.83333333333333\n    interzonal_sum: 27.273707625023444\n    intrazonal_sum: 1.5596257083098855\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: IB_HBW\n        level: 1\n        zone_count: 168\n        matrix_sum: 28.83333333333333\n        interzonal_sum: 27.273707625023444\n        intrazonal_sum: 1.5596257083098855\n        Comments:\n        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: IB_HBW\n            level: 1\n            zone_count: 168\n            matrix_sum: 28.83333333333333\n            interzonal_sum: 28.629303271931317\n            intrazonal_sum: 0.2040300614020109\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: IB_HBW\n                level: 1\n                zone_count: 168\n                matrix_sum: 28.83333333333333\n                interzonal_sum: 28.629303271931317\n                intrazonal_sum: 0.2040300614020109\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: IB_HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 28.83333333333333\n                    interzonal_sum: 28.629303271931317\n                    intrazonal_sum: 0.2040300614020109\n                    Comments:\n                    Created by disaggregate_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBW\n                        level: 1\n                        zone_count: 120\n                        matrix_sum: 28.83333333333333\n                        interzonal_sum: 28.66666666666666\n                        intrazonal_sum: 0.16666666666666666\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBW\n                            level: 1\n                            zone_count: 120\n                            matrix_sum: 28.83333333333333\n                            interzonal_sum: 28.66666666666666\n                            intrazonal_sum: 0.16666666666666666\n                            Comments:\n                            Created by operation <built-in function mul> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBW\n                                level: 1\n                                zone_count: 120\n                                matrix_sum: 173.0\n                                interzonal_sum: 172.0\n                                intrazonal_sum: 1.0\n                                Comments:\n                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Rail.csv\n                                MND Raw Data\n                                \n                            ]\n                            <built-in function mul>\n                            [\n                                0.16666666666666666\n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: OB_HBW\n    level: 2\n    zone_count: 168\n    matrix_sum: 16.833333333333332\n    interzonal_sum: 15.77252475796611\n    intrazonal_sum: 1.0608085753672216\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: OB_HBW\n        level: 2\n        zone_count: 168\n        matrix_sum: 16.833333333333332\n        interzonal_sum: 15.77252475796611\n        intrazonal_sum: 1.0608085753672216\n        Comments:\n        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: OB_HBW\n            level: 2\n            zone_count: 168\n            matrix_sum: 16.833333333333332\n            interzonal_sum: 16.333333333333332\n            intrazonal_sum: 0.5\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: OB_HBW\n                level: 2\n                zone_count: 168\n                matrix_sum: 16.833333333333332\n                interzonal_sum: 16.333333333333332\n                intrazonal_sum: 0.5\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBW\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 16.833333333333332\n                    interzonal_sum: 16.333333333333332\n                    intrazonal_sum: 0.5\n                    Comments:\n                    Created by disaggregate_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBW\n                        level: 2\n                        zone_count: 120\n                        matrix_sum: 16.833333333333332\n                        interzonal_sum: 16.833333333333332\n                        intrazonal_sum: 0.0\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBW\n                            level: 2\n                            zone_count: 120\n                            matrix_sum: 16.833333333333332\n                            interzonal_sum: 16.833333333333332\n                            intrazonal_sum: 0.0\n                            Comments:\n                            Created by operation <built-in function mul> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBW\n                                level: 2\n                                zone_count: 120\n                                matrix_sum: 101.0\n                                interzonal_sum: 101.0\n                                intrazonal_sum: 0.0\n                                Comments:\n                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Rail.csv\n                                MND Raw Data\n                                \n                            ]\n                            <built-in function mul>\n                            [\n                                0.16666666666666666\n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Bus\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: Commuting\nlevel: 1\nzone_count: 168\nmatrix_sum: 382.11672405736897\ninterzonal_sum: 226.9477589425382\nintrazonal_sum: 155.16896511483077\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Bus\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Commuting\n    level: 1\n    zone_count: 168\n    matrix_sum: 382.11672405736897\n    interzonal_sum: 226.9477589425382\n    intrazonal_sum: 155.16896511483077\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Bus\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Commuting\n        level: 1\n        zone_count: 168\n        matrix_sum: 255.80298389647942\n        interzonal_sum: 154.3061848561523\n        intrazonal_sum: 101.49679904032712\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Bus\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: IB_HBW\n            level: 1\n            zone_count: 168\n            matrix_sum: 255.80298389647942\n            interzonal_sum: 154.3061848561523\n            intrazonal_sum: 101.49679904032712\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Bus\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: IB_HBW\n                level: 1\n                zone_count: 168\n                matrix_sum: 255.80298389647942\n                interzonal_sum: 154.3061848561523\n                intrazonal_sum: 101.49679904032712\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Road\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: IB_HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 6139.333333333334\n                    interzonal_sum: 5147.136433007419\n                    intrazonal_sum: 992.1969003259146\n                    Comments:\n                    Created by disaggregate_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Road\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBW\n                        level: 1\n                        zone_count: 120\n                        matrix_sum: 6139.333333333333\n                        interzonal_sum: 6005.666666666666\n                        intrazonal_sum: 133.66666666666666\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Road\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBW\n                            level: 1\n                            zone_count: 120\n                            matrix_sum: 6139.333333333333\n                            interzonal_sum: 6005.666666666666\n                            intrazonal_sum: 133.66666666666666\n                            Comments:\n                            Created by operation <built-in function mul> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: Road\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBW\n                                level: 1\n                                zone_count: 120\n                                matrix_sum: 36836.0\n                                interzonal_sum: 36034.0\n                                intrazonal_sum: 802.0\n                                Comments:\n                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Road.csv\n                                MND Raw Data\n                                \n                            ]\n                            <built-in function mul>\n                            [\n                                0.16666666666666666\n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    Matrix Object\n                    vehicle_type: Bus\n                    value_type: proportions\n                    time_period: Inter_peak\n                    purpose: IB_HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 8260.958439148859\n                    interzonal_sum: 8205.069364713183\n                    intrazonal_sum: 55.88907443567507\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Bus\n                        value_type: proportions\n                        time_period: Inter_peak\n                        purpose: IB_HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 8260.958439148859\n                        interzonal_sum: 8205.069364713183\n                        intrazonal_sum: 55.88907443567507\n                        Comments:\n                        Created by generate_proportion_matrix operation on the following matrices:\n                        [\n                            Matrix Object\n                            vehicle_type: Bus\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBW\n                            level: 1\n                            zone_count: 168\n                            matrix_sum: 617.5941578025438\n                            interzonal_sum: 364.2108118323465\n                            intrazonal_sum: 253.38334597019733\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Bus\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBW\n                                level: 1\n                                zone_count: 168\n                                matrix_sum: 617.5941578025438\n                                interzonal_sum: 364.2108118323465\n                                intrazonal_sum: 253.38334597019733\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: Bus\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: HBW\n                                    level: 1\n                                    zone_count: 168\n                                    matrix_sum: 937.2388699999999\n                                    interzonal_sum: 552.7133399999999\n                                    intrazonal_sum: 384.52553\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Bus\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: HBW\n                                        level: 1\n                                        zone_count: 168\n                                        matrix_sum: 937.2388699999999\n                                        interzonal_sum: 552.7133399999999\n                                        intrazonal_sum: 384.52553\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                        Matrix Object\n                                        vehicle_type: Bus\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: HBW\n                                        level: 1\n                                        zone_count: 168\n                                        matrix_sum: 937.2388699999999\n                                        interzonal_sum: 552.7133399999999\n                                        intrazonal_sum: 384.52553\n                                        \n                                    ]\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    0.6589506448900736\n                                ]\n                                \n                            ]\n                            \n                        ]\n                        [\n                            Matrix Object\n                            vehicle_type: Road\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBW\n                            level: 1\n                            zone_count: 168\n                            matrix_sum: 6139.333333333334\n                            interzonal_sum: 5147.136433007419\n                            intrazonal_sum: 992.1969003259146\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Road\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBW\n                                level: 1\n                                zone_count: 168\n                                matrix_sum: 6139.333333333334\n                                interzonal_sum: 5147.136433007419\n                                intrazonal_sum: 992.1969003259146\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Road\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBW\n                                    level: 1\n                                    zone_count: 120\n                                    matrix_sum: 6139.333333333333\n                                    interzonal_sum: 6005.666666666666\n                                    intrazonal_sum: 133.66666666666666\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Road\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBW\n                                        level: 1\n                                        zone_count: 120\n                                        matrix_sum: 6139.333333333333\n                                        interzonal_sum: 6005.666666666666\n                                        intrazonal_sum: 133.66666666666666\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Road\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBW\n                                            level: 1\n                                            zone_count: 120\n                                            matrix_sum: 36836.0\n                                            interzonal_sum: 36034.0\n                                            intrazonal_sum: 802.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Road.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            0.16666666666666666\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Bus\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: OB_HBW\n        level: 2\n        zone_count: 168\n        matrix_sum: 126.3137401608896\n        interzonal_sum: 72.64157408638596\n        intrazonal_sum: 53.67216607450364\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Bus\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: OB_HBW\n            level: 2\n            zone_count: 168\n            matrix_sum: 126.3137401608896\n            interzonal_sum: 72.64157408638596\n            intrazonal_sum: 53.67216607450364\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Bus\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: OB_HBW\n                level: 2\n                zone_count: 168\n                matrix_sum: 126.3137401608896\n                interzonal_sum: 72.64157408638596\n                intrazonal_sum: 53.67216607450364\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Road\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBW\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 3177.5\n                    interzonal_sum: 2606.7013184764573\n                    intrazonal_sum: 570.7986815235428\n                    Comments:\n                    Created by disaggregate_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Road\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBW\n                        level: 2\n                        zone_count: 120\n                        matrix_sum: 3177.5\n                        interzonal_sum: 3106.5\n                        intrazonal_sum: 71.0\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Road\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBW\n                            level: 2\n                            zone_count: 120\n                            matrix_sum: 3177.5\n                            interzonal_sum: 3106.5\n                            intrazonal_sum: 71.0\n                            Comments:\n                            Created by operation <built-in function mul> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: Road\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBW\n                                level: 2\n                                zone_count: 120\n                                matrix_sum: 19065.0\n                                interzonal_sum: 18639.0\n                                intrazonal_sum: 426.0\n                                Comments:\n                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Road.csv\n                                MND Raw Data\n                                \n                            ]\n                            <built-in function mul>\n                            [\n                                0.16666666666666666\n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    Matrix Object\n                    vehicle_type: Bus\n                    value_type: proportions\n                    time_period: Inter_peak\n                    purpose: OB_HBW\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 8465.316909985935\n                    interzonal_sum: 8407.860834832878\n                    intrazonal_sum: 57.456075153057526\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Bus\n                        value_type: proportions\n                        time_period: Inter_peak\n                        purpose: OB_HBW\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 8465.316909985935\n                        interzonal_sum: 8407.860834832878\n                        intrazonal_sum: 57.456075153057526\n                        Comments:\n                        Created by generate_proportion_matrix operation on the following matrices:\n                        [\n                            Matrix Object\n                            vehicle_type: Bus\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBW\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 319.64471219745616\n                            interzonal_sum: 188.5025281676535\n                            intrazonal_sum: 131.14218402980265\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Bus\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBW\n                                level: 2\n                                zone_count: 168\n                                matrix_sum: 319.64471219745616\n                                interzonal_sum: 188.5025281676535\n                                intrazonal_sum: 131.14218402980265\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: Bus\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: HBW\n                                    level: 1\n                                    zone_count: 168\n                                    matrix_sum: 937.2388699999999\n                                    interzonal_sum: 552.7133399999999\n                                    intrazonal_sum: 384.52553\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Bus\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: HBW\n                                        level: 1\n                                        zone_count: 168\n                                        matrix_sum: 937.2388699999999\n                                        interzonal_sum: 552.7133399999999\n                                        intrazonal_sum: 384.52553\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                        Matrix Object\n                                        vehicle_type: Bus\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: HBW\n                                        level: 1\n                                        zone_count: 168\n                                        matrix_sum: 937.2388699999999\n                                        interzonal_sum: 552.7133399999999\n                                        intrazonal_sum: 384.52553\n                                        \n                                    ]\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    0.3410493551099264\n                                ]\n                                \n                            ]\n                            \n                        ]\n                        [\n                            Matrix Object\n                            vehicle_type: Road\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBW\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 3177.5\n                            interzonal_sum: 2606.7013184764573\n                            intrazonal_sum: 570.7986815235428\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Road\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBW\n                                level: 2\n                                zone_count: 168\n                                matrix_sum: 3177.5\n                                interzonal_sum: 2606.7013184764573\n                                intrazonal_sum: 570.7986815235428\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Road\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBW\n                                    level: 2\n                                    zone_count: 120\n                                    matrix_sum: 3177.5\n                                    interzonal_sum: 3106.5\n                                    intrazonal_sum: 71.0\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Road\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBW\n                                        level: 2\n                                        zone_count: 120\n                                        matrix_sum: 3177.5\n                                        interzonal_sum: 3106.5\n                                        intrazonal_sum: 71.0\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Road\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBW\n                                            level: 2\n                                            zone_count: 120\n                                            matrix_sum: 19065.0\n                                            interzonal_sum: 18639.0\n                                            intrazonal_sum: 426.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Road.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            0.16666666666666666\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://2": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 2, "_purpose": "Employers Business", "_time_period": "Inter_peak", "_vehicle_type": "PublicTransport", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: Employers Business\nlevel: 2\nzone_count: 168\nmatrix_sum: 98.75364910044465\ninterzonal_sum: 95.8315599615114\nintrazonal_sum: 2.922089138933241\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Employers Business\n    level: 3\n    zone_count: 168\n    matrix_sum: 43.75364910044465\n    interzonal_sum: 42.13038247932409\n    intrazonal_sum: 1.6232666211205546\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Employers Business\n        level: 3\n        zone_count: 168\n        matrix_sum: 21.54551471108961\n        interzonal_sum: 20.924003797638598\n        intrazonal_sum: 0.6215109134510111\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: IB_HBEmp\n            level: 3\n            zone_count: 168\n            matrix_sum: 21.54551471108961\n            interzonal_sum: 20.924003797638598\n            intrazonal_sum: 0.6215109134510111\n            Comments:\n            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: IB_HBEmp\n                level: 3\n                zone_count: 168\n                matrix_sum: 21.545514711089606\n                interzonal_sum: 21.23240812799026\n                intrazonal_sum: 0.31310658309934547\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: IB_HBEmp\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 21.545514711089606\n                    interzonal_sum: 21.23240812799026\n                    intrazonal_sum: 0.31310658309934547\n                    Comments:\n                    Created by furness_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 157.16666666666666\n                        interzonal_sum: 155.75512940409635\n                        intrazonal_sum: 1.411537262570307\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 157.16666666666666\n                            interzonal_sum: 155.75512940409635\n                            intrazonal_sum: 1.411537262570307\n                            Comments:\n                            Created by disaggregate_matrix operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBO\n                                level: 3\n                                zone_count: 120\n                                matrix_sum: 157.16666666666663\n                                interzonal_sum: 156.3333333333333\n                                intrazonal_sum: 0.8333333333333333\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 120\n                                    matrix_sum: 157.16666666666663\n                                    interzonal_sum: 156.3333333333333\n                                    intrazonal_sum: 0.8333333333333333\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 120\n                                        matrix_sum: 943.0\n                                        interzonal_sum: 938.0\n                                        intrazonal_sum: 5.0\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                        MND Raw Data\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.16666666666666666\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    Convergence Information:\n                    1: count: 168, col_pass: 16, row_pass: 26\n                    2: count: 168, col_pass: 7, row_pass: 27\n                    3: count: 168, col_pass: 24, row_pass: 30\n                    4: count: 168, col_pass: 28, row_pass: 38\n                    5: count: 168, col_pass: 50, row_pass: 121\n                    6: count: 168, col_pass: 168, row_pass: 168\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: OB_HBEmp\n        level: 4\n        zone_count: 168\n        matrix_sum: 22.208134389355035\n        interzonal_sum: 21.206378681685493\n        intrazonal_sum: 1.0017557076695436\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: OB_HBEmp\n            level: 4\n            zone_count: 168\n            matrix_sum: 22.208134389355035\n            interzonal_sum: 21.206378681685493\n            intrazonal_sum: 1.0017557076695436\n            Comments:\n            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: OB_HBEmp\n                level: 4\n                zone_count: 168\n                matrix_sum: 22.20813438935504\n                interzonal_sum: 21.915930182929074\n                intrazonal_sum: 0.29220420642596434\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBEmp\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 22.20813438935504\n                    interzonal_sum: 21.915930182929074\n                    intrazonal_sum: 0.29220420642596434\n                    Comments:\n                    Created by furness_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBO\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 155.33333333333334\n                        interzonal_sum: 154.010461458477\n                        intrazonal_sum: 1.3228718748563326\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBO\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 155.33333333333334\n                            interzonal_sum: 154.010461458477\n                            intrazonal_sum: 1.3228718748563326\n                            Comments:\n                            Created by disaggregate_matrix operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBO\n                                level: 4\n                                zone_count: 120\n                                matrix_sum: 155.33333333333331\n                                interzonal_sum: 154.66666666666666\n                                intrazonal_sum: 0.6666666666666666\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 120\n                                    matrix_sum: 155.33333333333331\n                                    interzonal_sum: 154.66666666666666\n                                    intrazonal_sum: 0.6666666666666666\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 120\n                                        matrix_sum: 932.0\n                                        interzonal_sum: 928.0\n                                        intrazonal_sum: 4.0\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                        MND Raw Data\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.16666666666666666\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    Convergence Information:\n                    1: count: 168, col_pass: 31, row_pass: 5\n                    2: count: 168, col_pass: 26, row_pass: 24\n                    3: count: 168, col_pass: 46, row_pass: 25\n                    4: count: 168, col_pass: 47, row_pass: 29\n                    5: count: 168, col_pass: 64, row_pass: 45\n                    6: count: 168, col_pass: 106, row_pass: 167\n                    7: count: 168, col_pass: 168, row_pass: 168\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: NHBW\n    level: 7\n    zone_count: 168\n    matrix_sum: 55.0\n    interzonal_sum: 53.70117748218731\n    intrazonal_sum: 1.2988225178126864\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: NHBW\n        level: 7\n        zone_count: 168\n        matrix_sum: 55.0\n        interzonal_sum: 53.70117748218731\n        intrazonal_sum: 1.2988225178126864\n        Comments:\n        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBW\n            level: 7\n            zone_count: 168\n            matrix_sum: 54.99999999999999\n            interzonal_sum: 54.59816107740889\n            intrazonal_sum: 0.4018389225911059\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBW\n                level: 7\n                zone_count: 168\n                matrix_sum: 54.99999999999999\n                interzonal_sum: 54.59816107740889\n                intrazonal_sum: 0.4018389225911059\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 54.99999999999999\n                    interzonal_sum: 54.59816107740889\n                    intrazonal_sum: 0.4018389225911059\n                    Comments:\n                    Created by disaggregate_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 5\n                        zone_count: 120\n                        matrix_sum: 54.99999999999999\n                        interzonal_sum: 54.49999999999999\n                        intrazonal_sum: 0.5\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBW\n                            level: 5\n                            zone_count: 120\n                            matrix_sum: 54.99999999999999\n                            interzonal_sum: 54.49999999999999\n                            intrazonal_sum: 0.5\n                            Comments:\n                            Created by operation <built-in function mul> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBW\n                                level: 5\n                                zone_count: 120\n                                matrix_sum: 330.0\n                                interzonal_sum: 327.0\n                                intrazonal_sum: 3.0\n                                Comments:\n                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Rail.csv\n                                MND Raw Data\n                                \n                            ]\n                            <built-in function mul>\n                            [\n                                0.16666666666666666\n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Bus\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: Employers Business\nlevel: 2\nzone_count: 168\nmatrix_sum: 58.16830826322408\ninterzonal_sum: 33.920940504773284\nintrazonal_sum: 24.247367758450796\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Bus\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Employers Business\n    level: 2\n    zone_count: 168\n    matrix_sum: 58.16830826322408\n    interzonal_sum: 33.920940504773284\n    intrazonal_sum: 24.247367758450796\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Bus\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Employers Business\n        level: 3\n        zone_count: 168\n        matrix_sum: 23.306321087446513\n        interzonal_sum: 11.302463072250056\n        intrazonal_sum: 12.003858015196457\n        Comments:\n        Created by operation <built-in function add> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Bus\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Employers Business\n            level: 3\n            zone_count: 168\n            matrix_sum: 12.314484542797198\n            interzonal_sum: 6.066890230505099\n            intrazonal_sum: 6.247594312292098\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Bus\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: IB_HBEmp\n                level: 3\n                zone_count: 168\n                matrix_sum: 12.314484542797198\n                interzonal_sum: 6.066890230505099\n                intrazonal_sum: 6.247594312292098\n                Comments:\n                Created by furness_matrix operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Bus\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: IB_HBO\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 1497.96881443317\n                    interzonal_sum: 713.0383448250082\n                    intrazonal_sum: 784.930469608162\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Bus\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 1497.96881443317\n                        interzonal_sum: 713.0383448250082\n                        intrazonal_sum: 784.930469608162\n                        Comments:\n                        Created by operation <built-in function mul> (reverse: False) on\n                        [\n                            Matrix Object\n                            vehicle_type: Road\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 18644.166666666664\n                            interzonal_sum: 15586.982047541609\n                            intrazonal_sum: 3057.1846191250543\n                            Comments:\n                            Created by disaggregate_matrix operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Road\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBO\n                                level: 3\n                                zone_count: 120\n                                matrix_sum: 18644.166666666664\n                                interzonal_sum: 18218.333333333332\n                                intrazonal_sum: 425.83333333333337\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Road\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 120\n                                    matrix_sum: 18644.166666666664\n                                    interzonal_sum: 18218.333333333332\n                                    intrazonal_sum: 425.83333333333337\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Road\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 120\n                                        matrix_sum: 111865.0\n                                        interzonal_sum: 109310.0\n                                        intrazonal_sum: 2555.0\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                        MND Raw Data\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.16666666666666666\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        <built-in function mul>\n                        [\n                            Matrix Object\n                            vehicle_type: Bus\n                            value_type: proportions\n                            time_period: Inter_peak\n                            purpose: IB_HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 8318.085576882724\n                            interzonal_sum: 8286.158078316914\n                            intrazonal_sum: 31.927498565810748\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Bus\n                                value_type: proportions\n                                time_period: Inter_peak\n                                purpose: IB_HBO\n                                level: 3\n                                zone_count: 168\n                                matrix_sum: 8318.085576882724\n                                interzonal_sum: 8286.158078316914\n                                intrazonal_sum: 31.927498565810748\n                                Comments:\n                                Created by generate_proportion_matrix operation on the following matrices:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Bus\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 4798.478509209596\n                                    interzonal_sum: 2233.4337989913206\n                                    intrazonal_sum: 2565.0447102182757\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Bus\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 4798.478509209596\n                                        interzonal_sum: 2233.4337989913206\n                                        intrazonal_sum: 2565.0447102182757\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Bus\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: HBO\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 9232.433079999999\n                                            interzonal_sum: 4297.201299999999\n                                            intrazonal_sum: 4935.23178\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Bus\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: HBO\n                                                level: 3\n                                                zone_count: 168\n                                                matrix_sum: 9232.433079999999\n                                                interzonal_sum: 4297.201299999999\n                                                intrazonal_sum: 4935.23178\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                Matrix Object\n                                                vehicle_type: Bus\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: HBO\n                                                level: 3\n                                                zone_count: 168\n                                                matrix_sum: 9232.433079999999\n                                                interzonal_sum: 4297.201299999999\n                                                intrazonal_sum: 4935.23178\n                                                \n                                            ]\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            0.5197414882545346\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                [\n                                    Matrix Object\n                                    vehicle_type: Road\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 18644.166666666664\n                                    interzonal_sum: 15586.982047541609\n                                    intrazonal_sum: 3057.1846191250543\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Road\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 18644.166666666664\n                                        interzonal_sum: 15586.982047541609\n                                        intrazonal_sum: 3057.1846191250543\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Road\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 120\n                                            matrix_sum: 18644.166666666664\n                                            interzonal_sum: 18218.333333333332\n                                            intrazonal_sum: 425.83333333333337\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Road\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 18644.166666666664\n                                                interzonal_sum: 18218.333333333332\n                                                intrazonal_sum: 425.83333333333337\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Road\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 111865.0\n                                                    interzonal_sum: 109310.0\n                                                    intrazonal_sum: 2555.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    0.16666666666666666\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                Convergence Information:\n                1: count: 168, col_pass: 45, row_pass: 55\n                2: count: 168, col_pass: 46, row_pass: 47\n                3: count: 168, col_pass: 43, row_pass: 45\n                4: count: 168, col_pass: 45, row_pass: 47\n                5: count: 168, col_pass: 45, row_pass: 48\n                6: count: 168, col_pass: 46, row_pass: 49\n                7: count: 168, col_pass: 46, row_pass: 49\n                8: count: 168, col_pass: 48, row_pass: 49\n                9: count: 168, col_pass: 48, row_pass: 50\n                10: count: 168, col_pass: 52, row_pass: 55\n                11: count: 168, col_pass: 67, row_pass: 58\n                12: count: 168, col_pass: 107, row_pass: 119\n                13: count: 168, col_pass: 163, row_pass: 168\n                \n            ]\n            \n        ]\n        <built-in function add>\n        [\n            Matrix Object\n            vehicle_type: Bus\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: OB_HBEmp\n            level: 4\n            zone_count: 168\n            matrix_sum: 10.991836544649313\n            interzonal_sum: 5.235572841744955\n            intrazonal_sum: 5.756263702904358\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Bus\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: OB_HBEmp\n                level: 4\n                zone_count: 168\n                matrix_sum: 10.991836544649313\n                interzonal_sum: 5.235572841744955\n                intrazonal_sum: 5.756263702904358\n                Comments:\n                Created by furness_matrix operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Bus\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBO\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 1333.363295367084\n                    interzonal_sum: 608.7405721945664\n                    intrazonal_sum: 724.6227231725176\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Bus\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBO\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 1333.363295367084\n                        interzonal_sum: 608.7405721945664\n                        intrazonal_sum: 724.6227231725176\n                        Comments:\n                        Created by operation <built-in function mul> (reverse: False) on\n                        [\n                            Matrix Object\n                            vehicle_type: Road\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBO\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 17227.833333333332\n                            interzonal_sum: 14274.684396516754\n                            intrazonal_sum: 2953.1489368165776\n                            Comments:\n                            Created by disaggregate_matrix operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Road\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBO\n                                level: 4\n                                zone_count: 120\n                                matrix_sum: 17227.833333333332\n                                interzonal_sum: 16815.0\n                                intrazonal_sum: 412.8333333333333\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Road\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 120\n                                    matrix_sum: 17227.833333333332\n                                    interzonal_sum: 16815.0\n                                    intrazonal_sum: 412.8333333333333\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Road\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 120\n                                        matrix_sum: 103367.0\n                                        interzonal_sum: 100890.0\n                                        intrazonal_sum: 2477.0\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                        MND Raw Data\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.16666666666666666\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        <built-in function mul>\n                        [\n                            Matrix Object\n                            vehicle_type: Bus\n                            value_type: proportions\n                            time_period: Inter_peak\n                            purpose: OB_HBO\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 8302.262031229224\n                            interzonal_sum: 8266.56519504084\n                            intrazonal_sum: 35.69683618838515\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Bus\n                                value_type: proportions\n                                time_period: Inter_peak\n                                purpose: OB_HBO\n                                level: 4\n                                zone_count: 168\n                                matrix_sum: 8302.262031229224\n                                interzonal_sum: 8266.56519504084\n                                intrazonal_sum: 35.69683618838515\n                                Comments:\n                                Created by generate_proportion_matrix operation on the following matrices:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Bus\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 4433.9545707904035\n                                    interzonal_sum: 2063.7675010086796\n                                    intrazonal_sum: 2370.187069781724\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Bus\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 4433.9545707904035\n                                        interzonal_sum: 2063.7675010086796\n                                        intrazonal_sum: 2370.187069781724\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Bus\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: HBO\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 9232.433079999999\n                                            interzonal_sum: 4297.201299999999\n                                            intrazonal_sum: 4935.23178\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Bus\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: HBO\n                                                level: 3\n                                                zone_count: 168\n                                                matrix_sum: 9232.433079999999\n                                                interzonal_sum: 4297.201299999999\n                                                intrazonal_sum: 4935.23178\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                Matrix Object\n                                                vehicle_type: Bus\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: HBO\n                                                level: 3\n                                                zone_count: 168\n                                                matrix_sum: 9232.433079999999\n                                                interzonal_sum: 4297.201299999999\n                                                intrazonal_sum: 4935.23178\n                                                \n                                            ]\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            0.4802585117454654\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                [\n                                    Matrix Object\n                                    vehicle_type: Road\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 17227.833333333332\n                                    interzonal_sum: 14274.684396516754\n                                    intrazonal_sum: 2953.1489368165776\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Road\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 17227.833333333332\n                                        interzonal_sum: 14274.684396516754\n                                        intrazonal_sum: 2953.1489368165776\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Road\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 120\n                                            matrix_sum: 17227.833333333332\n                                            interzonal_sum: 16815.0\n                                            intrazonal_sum: 412.8333333333333\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Road\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 17227.833333333332\n                                                interzonal_sum: 16815.0\n                                                intrazonal_sum: 412.8333333333333\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Road\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 103367.0\n                                                    interzonal_sum: 100890.0\n                                                    intrazonal_sum: 2477.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    0.16666666666666666\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                Convergence Information:\n                1: count: 168, col_pass: 45, row_pass: 64\n                2: count: 168, col_pass: 45, row_pass: 44\n                3: count: 168, col_pass: 47, row_pass: 46\n                4: count: 168, col_pass: 44, row_pass: 44\n                5: count: 168, col_pass: 46, row_pass: 47\n                6: count: 168, col_pass: 46, row_pass: 49\n                7: count: 168, col_pass: 47, row_pass: 49\n                8: count: 168, col_pass: 47, row_pass: 50\n                9: count: 168, col_pass: 50, row_pass: 52\n                10: count: 168, col_pass: 60, row_pass: 63\n                11: count: 168, col_pass: 122, row_pass: 161\n                12: count: 168, col_pass: 167, row_pass: 168\n                \n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Bus\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: NHBW\n        level: 7\n        zone_count: 168\n        matrix_sum: 34.861987175777564\n        interzonal_sum: 22.61847743252323\n        intrazonal_sum: 12.243509743254336\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Bus\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBW\n            level: 7\n            zone_count: 168\n            matrix_sum: 34.861987175777564\n            interzonal_sum: 22.61847743252323\n            intrazonal_sum: 12.243509743254336\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Bus\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBW\n                level: 5\n                zone_count: 168\n                matrix_sum: 34.861987175777564\n                interzonal_sum: 22.61847743252323\n                intrazonal_sum: 12.243509743254336\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Road\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 5515.833333333332\n                    interzonal_sum: 4586.9693468978385\n                    intrazonal_sum: 928.8639864354935\n                    Comments:\n                    Created by disaggregate_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Road\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 5\n                        zone_count: 120\n                        matrix_sum: 5515.833333333333\n                        interzonal_sum: 5372.5\n                        intrazonal_sum: 143.33333333333331\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Road\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBW\n                            level: 5\n                            zone_count: 120\n                            matrix_sum: 5515.833333333333\n                            interzonal_sum: 5372.5\n                            intrazonal_sum: 143.33333333333331\n                            Comments:\n                            Created by operation <built-in function mul> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: Road\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBW\n                                level: 5\n                                zone_count: 120\n                                matrix_sum: 33095.0\n                                interzonal_sum: 32235.0\n                                intrazonal_sum: 860.0\n                                Comments:\n                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Road.csv\n                                MND Raw Data\n                                \n                            ]\n                            <built-in function mul>\n                            [\n                                0.16666666666666666\n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    Matrix Object\n                    vehicle_type: Bus\n                    value_type: proportions\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 2302.360369049361\n                    interzonal_sum: 2294.571246742651\n                    intrazonal_sum: 7.789122306710133\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Bus\n                        value_type: proportions\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 2302.360369049361\n                        interzonal_sum: 2294.571246742651\n                        intrazonal_sum: 7.789122306710133\n                        Comments:\n                        Created by generate_proportion_matrix operation on the following matrices:\n                        [\n                            Matrix Object\n                            vehicle_type: Bus\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBW\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 57.878730000000004\n                            interzonal_sum: 40.68838000000001\n                            intrazonal_sum: 17.19035\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Bus\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBW\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 57.878730000000004\n                                interzonal_sum: 40.68838000000001\n                                intrazonal_sum: 17.19035\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Bus\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBW\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 57.878730000000004\n                                    interzonal_sum: 40.68838000000001\n                                    intrazonal_sum: 17.19035\n                                    Comments:\n                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                    Matrix Object\n                                    vehicle_type: Bus\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBW\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 57.878730000000004\n                                    interzonal_sum: 40.68838000000001\n                                    intrazonal_sum: 17.19035\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        [\n                            Matrix Object\n                            vehicle_type: Road\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBW\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 5515.833333333332\n                            interzonal_sum: 4586.9693468978385\n                            intrazonal_sum: 928.8639864354935\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Road\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBW\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 5515.833333333332\n                                interzonal_sum: 4586.9693468978385\n                                intrazonal_sum: 928.8639864354935\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Road\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBW\n                                    level: 5\n                                    zone_count: 120\n                                    matrix_sum: 5515.833333333333\n                                    interzonal_sum: 5372.5\n                                    intrazonal_sum: 143.33333333333331\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Road\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: NHBW\n                                        level: 5\n                                        zone_count: 120\n                                        matrix_sum: 5515.833333333333\n                                        interzonal_sum: 5372.5\n                                        intrazonal_sum: 143.33333333333331\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Road\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: NHBW\n                                            level: 5\n                                            zone_count: 120\n                                            matrix_sum: 33095.0\n                                            interzonal_sum: 32235.0\n                                            intrazonal_sum: 860.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Road.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            0.16666666666666666\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://3": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "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", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 3, "_purpose": "Other", "_time_period": "Inter_peak", "_vehicle_type": "PublicTransport", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: Other\nlevel: 3\nzone_count: 168\nmatrix_sum: 453.5645525426243\ninterzonal_sum: 446.0273942302385\nintrazonal_sum: 7.537158312385808\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Other\n    level: 5\n    zone_count: 168\n    matrix_sum: 268.73121920929094\n    interzonal_sum: 263.2633474555544\n    intrazonal_sum: 5.467871753736505\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Other\n        level: 5\n        zone_count: 168\n        matrix_sum: 135.61337046677883\n        interzonal_sum: 132.9014476158065\n        intrazonal_sum: 2.7119228509723334\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: IB_HBO\n            level: 5\n            zone_count: 168\n            matrix_sum: 135.61337046677883\n            interzonal_sum: 132.9014476158065\n            intrazonal_sum: 2.7119228509723334\n            Comments:\n            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: IB_HBO\n                level: 5\n                zone_count: 168\n                matrix_sum: 135.61337046677883\n                interzonal_sum: 134.47348881028233\n                intrazonal_sum: 1.1398816564965029\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: IB_HBO\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 135.61337046677883\n                    interzonal_sum: 134.47348881028233\n                    intrazonal_sum: 1.1398816564965029\n                    Comments:\n                    Created by furness_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 157.16666666666666\n                        interzonal_sum: 155.75512940409635\n                        intrazonal_sum: 1.411537262570307\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 157.16666666666666\n                            interzonal_sum: 155.75512940409635\n                            intrazonal_sum: 1.411537262570307\n                            Comments:\n                            Created by disaggregate_matrix operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBO\n                                level: 3\n                                zone_count: 120\n                                matrix_sum: 157.16666666666663\n                                interzonal_sum: 156.3333333333333\n                                intrazonal_sum: 0.8333333333333333\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 120\n                                    matrix_sum: 157.16666666666663\n                                    interzonal_sum: 156.3333333333333\n                                    intrazonal_sum: 0.8333333333333333\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 120\n                                        matrix_sum: 943.0\n                                        interzonal_sum: 938.0\n                                        intrazonal_sum: 5.0\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                        MND Raw Data\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.16666666666666666\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    Convergence Information:\n                    1: count: 168, col_pass: 28, row_pass: 34\n                    2: count: 168, col_pass: 46, row_pass: 109\n                    3: count: 168, col_pass: 168, row_pass: 168\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: OB_HBO\n        level: 6\n        zone_count: 168\n        matrix_sum: 133.11784874251214\n        interzonal_sum: 130.36189983974796\n        intrazonal_sum: 2.75594890276417\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: OB_HBO\n            level: 6\n            zone_count: 168\n            matrix_sum: 133.11784874251214\n            interzonal_sum: 130.36189983974796\n            intrazonal_sum: 2.75594890276417\n            Comments:\n            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: OB_HBO\n                level: 6\n                zone_count: 168\n                matrix_sum: 133.11784874251214\n                interzonal_sum: 132.05695191396674\n                intrazonal_sum: 1.060896828545399\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBO\n                    level: 6\n                    zone_count: 168\n                    matrix_sum: 133.11784874251214\n                    interzonal_sum: 132.05695191396674\n                    intrazonal_sum: 1.060896828545399\n                    Comments:\n                    Created by furness_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBO\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 155.33333333333334\n                        interzonal_sum: 154.010461458477\n                        intrazonal_sum: 1.3228718748563326\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBO\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 155.33333333333334\n                            interzonal_sum: 154.010461458477\n                            intrazonal_sum: 1.3228718748563326\n                            Comments:\n                            Created by disaggregate_matrix operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBO\n                                level: 4\n                                zone_count: 120\n                                matrix_sum: 155.33333333333331\n                                interzonal_sum: 154.66666666666666\n                                intrazonal_sum: 0.6666666666666666\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 120\n                                    matrix_sum: 155.33333333333331\n                                    interzonal_sum: 154.66666666666666\n                                    intrazonal_sum: 0.6666666666666666\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 120\n                                        matrix_sum: 932.0\n                                        interzonal_sum: 928.0\n                                        intrazonal_sum: 4.0\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                        MND Raw Data\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.16666666666666666\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    Convergence Information:\n                    1: count: 168, col_pass: 37, row_pass: 30\n                    2: count: 168, col_pass: 64, row_pass: 60\n                    3: count: 168, col_pass: 110, row_pass: 168\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: NHBO\n    level: 8\n    zone_count: 168\n    matrix_sum: 184.83333333333331\n    interzonal_sum: 182.764046774684\n    intrazonal_sum: 2.0692865586493046\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: NHBO\n        level: 8\n        zone_count: 168\n        matrix_sum: 184.83333333333331\n        interzonal_sum: 182.764046774684\n        intrazonal_sum: 2.0692865586493046\n        Comments:\n        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBO\n            level: 8\n            zone_count: 168\n            matrix_sum: 184.83333333333331\n            interzonal_sum: 183.52128000091085\n            intrazonal_sum: 1.312053332422464\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBO\n                level: 8\n                zone_count: 168\n                matrix_sum: 184.83333333333331\n                interzonal_sum: 183.52128000091085\n                intrazonal_sum: 1.312053332422464\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 6\n                    zone_count: 168\n                    matrix_sum: 184.83333333333331\n                    interzonal_sum: 183.52128000091085\n                    intrazonal_sum: 1.312053332422464\n                    Comments:\n                    Created by disaggregate_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 6\n                        zone_count: 120\n                        matrix_sum: 184.8333333333333\n                        interzonal_sum: 183.66666666666663\n                        intrazonal_sum: 1.1666666666666667\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBO\n                            level: 6\n                            zone_count: 120\n                            matrix_sum: 184.8333333333333\n                            interzonal_sum: 183.66666666666663\n                            intrazonal_sum: 1.1666666666666667\n                            Comments:\n                            Created by operation <built-in function mul> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBO\n                                level: 6\n                                zone_count: 120\n                                matrix_sum: 1109.0\n                                interzonal_sum: 1102.0\n                                intrazonal_sum: 7.0\n                                Comments:\n                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Rail.csv\n                                MND Raw Data\n                                \n                            ]\n                            <built-in function mul>\n                            [\n                                0.16666666666666666\n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Bus\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: Other\nlevel: 3\nzone_count: 168\nmatrix_sum: 3094.326665189662\ninterzonal_sum: 1549.9327185623108\nintrazonal_sum: 1544.3939466273512\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Bus\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Other\n    level: 3\n    zone_count: 168\n    matrix_sum: 3094.326665189662\n    interzonal_sum: 1549.9327185623108\n    intrazonal_sum: 1544.3939466273512\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Bus\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Other\n        level: 5\n        zone_count: 168\n        matrix_sum: 2807.9657851376674\n        interzonal_sum: 1310.2310860786465\n        intrazonal_sum: 1497.7346990590208\n        Comments:\n        Created by operation <built-in function add> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Bus\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Other\n            level: 5\n            zone_count: 168\n            matrix_sum: 1485.6237539527342\n            interzonal_sum: 706.8393850275731\n            intrazonal_sum: 778.7843689251611\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Bus\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: IB_HBO\n                level: 5\n                zone_count: 168\n                matrix_sum: 1485.6237539527342\n                interzonal_sum: 706.8393850275731\n                intrazonal_sum: 778.7843689251611\n                Comments:\n                Created by furness_matrix operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Bus\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: IB_HBO\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 1497.96881443317\n                    interzonal_sum: 713.0383448250082\n                    intrazonal_sum: 784.930469608162\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Bus\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 1497.96881443317\n                        interzonal_sum: 713.0383448250082\n                        intrazonal_sum: 784.930469608162\n                        Comments:\n                        Created by operation <built-in function mul> (reverse: False) on\n                        [\n                            Matrix Object\n                            vehicle_type: Road\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 18644.166666666664\n                            interzonal_sum: 15586.982047541609\n                            intrazonal_sum: 3057.1846191250543\n                            Comments:\n                            Created by disaggregate_matrix operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Road\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBO\n                                level: 3\n                                zone_count: 120\n                                matrix_sum: 18644.166666666664\n                                interzonal_sum: 18218.333333333332\n                                intrazonal_sum: 425.83333333333337\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Road\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 120\n                                    matrix_sum: 18644.166666666664\n                                    interzonal_sum: 18218.333333333332\n                                    intrazonal_sum: 425.83333333333337\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Road\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 120\n                                        matrix_sum: 111865.0\n                                        interzonal_sum: 109310.0\n                                        intrazonal_sum: 2555.0\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                        MND Raw Data\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.16666666666666666\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        <built-in function mul>\n                        [\n                            Matrix Object\n                            vehicle_type: Bus\n                            value_type: proportions\n                            time_period: Inter_peak\n                            purpose: IB_HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 8318.085576882724\n                            interzonal_sum: 8286.158078316914\n                            intrazonal_sum: 31.927498565810748\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Bus\n                                value_type: proportions\n                                time_period: Inter_peak\n                                purpose: IB_HBO\n                                level: 3\n                                zone_count: 168\n                                matrix_sum: 8318.085576882724\n                                interzonal_sum: 8286.158078316914\n                                intrazonal_sum: 31.927498565810748\n                                Comments:\n                                Created by generate_proportion_matrix operation on the following matrices:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Bus\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 4798.478509209596\n                                    interzonal_sum: 2233.4337989913206\n                                    intrazonal_sum: 2565.0447102182757\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Bus\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 4798.478509209596\n                                        interzonal_sum: 2233.4337989913206\n                                        intrazonal_sum: 2565.0447102182757\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Bus\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: HBO\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 9232.433079999999\n                                            interzonal_sum: 4297.201299999999\n                                            intrazonal_sum: 4935.23178\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Bus\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: HBO\n                                                level: 3\n                                                zone_count: 168\n                                                matrix_sum: 9232.433079999999\n                                                interzonal_sum: 4297.201299999999\n                                                intrazonal_sum: 4935.23178\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                Matrix Object\n                                                vehicle_type: Bus\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: HBO\n                                                level: 3\n                                                zone_count: 168\n                                                matrix_sum: 9232.433079999999\n                                                interzonal_sum: 4297.201299999999\n                                                intrazonal_sum: 4935.23178\n                                                \n                                            ]\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            0.5197414882545346\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                [\n                                    Matrix Object\n                                    vehicle_type: Road\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 18644.166666666664\n                                    interzonal_sum: 15586.982047541609\n                                    intrazonal_sum: 3057.1846191250543\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Road\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 18644.166666666664\n                                        interzonal_sum: 15586.982047541609\n                                        intrazonal_sum: 3057.1846191250543\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Road\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 120\n                                            matrix_sum: 18644.166666666664\n                                            interzonal_sum: 18218.333333333332\n                                            intrazonal_sum: 425.83333333333337\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Road\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 18644.166666666664\n                                                interzonal_sum: 18218.333333333332\n                                                intrazonal_sum: 425.83333333333337\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Road\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 111865.0\n                                                    interzonal_sum: 109310.0\n                                                    intrazonal_sum: 2555.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    0.16666666666666666\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                Convergence Information:\n                1: count: 168, col_pass: 168, row_pass: 168\n                \n            ]\n            \n        ]\n        <built-in function add>\n        [\n            Matrix Object\n            vehicle_type: Bus\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: OB_HBO\n            level: 6\n            zone_count: 168\n            matrix_sum: 1322.3420311849331\n            interzonal_sum: 603.3917010510734\n            intrazonal_sum: 718.9503301338598\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Bus\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: OB_HBO\n                level: 6\n                zone_count: 168\n                matrix_sum: 1322.3420311849331\n                interzonal_sum: 603.3917010510734\n                intrazonal_sum: 718.9503301338598\n                Comments:\n                Created by furness_matrix operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Bus\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBO\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 1333.363295367084\n                    interzonal_sum: 608.7405721945664\n                    intrazonal_sum: 724.6227231725176\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Bus\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBO\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 1333.363295367084\n                        interzonal_sum: 608.7405721945664\n                        intrazonal_sum: 724.6227231725176\n                        Comments:\n                        Created by operation <built-in function mul> (reverse: False) on\n                        [\n                            Matrix Object\n                            vehicle_type: Road\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBO\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 17227.833333333332\n                            interzonal_sum: 14274.684396516754\n                            intrazonal_sum: 2953.1489368165776\n                            Comments:\n                            Created by disaggregate_matrix operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Road\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBO\n                                level: 4\n                                zone_count: 120\n                                matrix_sum: 17227.833333333332\n                                interzonal_sum: 16815.0\n                                intrazonal_sum: 412.8333333333333\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Road\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 120\n                                    matrix_sum: 17227.833333333332\n                                    interzonal_sum: 16815.0\n                                    intrazonal_sum: 412.8333333333333\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Road\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 120\n                                        matrix_sum: 103367.0\n                                        interzonal_sum: 100890.0\n                                        intrazonal_sum: 2477.0\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                        MND Raw Data\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.16666666666666666\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        <built-in function mul>\n                        [\n                            Matrix Object\n                            vehicle_type: Bus\n                            value_type: proportions\n                            time_period: Inter_peak\n                            purpose: OB_HBO\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 8302.262031229224\n                            interzonal_sum: 8266.56519504084\n                            intrazonal_sum: 35.69683618838515\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Bus\n                                value_type: proportions\n                                time_period: Inter_peak\n                                purpose: OB_HBO\n                                level: 4\n                                zone_count: 168\n                                matrix_sum: 8302.262031229224\n                                interzonal_sum: 8266.56519504084\n                                intrazonal_sum: 35.69683618838515\n                                Comments:\n                                Created by generate_proportion_matrix operation on the following matrices:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Bus\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 4433.9545707904035\n                                    interzonal_sum: 2063.7675010086796\n                                    intrazonal_sum: 2370.187069781724\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Bus\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 4433.9545707904035\n                                        interzonal_sum: 2063.7675010086796\n                                        intrazonal_sum: 2370.187069781724\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Bus\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: HBO\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 9232.433079999999\n                                            interzonal_sum: 4297.201299999999\n                                            intrazonal_sum: 4935.23178\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Bus\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: HBO\n                                                level: 3\n                                                zone_count: 168\n                                                matrix_sum: 9232.433079999999\n                                                interzonal_sum: 4297.201299999999\n                                                intrazonal_sum: 4935.23178\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                Matrix Object\n                                                vehicle_type: Bus\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: HBO\n                                                level: 3\n                                                zone_count: 168\n                                                matrix_sum: 9232.433079999999\n                                                interzonal_sum: 4297.201299999999\n                                                intrazonal_sum: 4935.23178\n                                                \n                                            ]\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            0.4802585117454654\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                [\n                                    Matrix Object\n                                    vehicle_type: Road\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 17227.833333333332\n                                    interzonal_sum: 14274.684396516754\n                                    intrazonal_sum: 2953.1489368165776\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Road\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 17227.833333333332\n                                        interzonal_sum: 14274.684396516754\n                                        intrazonal_sum: 2953.1489368165776\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Road\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 120\n                                            matrix_sum: 17227.833333333332\n                                            interzonal_sum: 16815.0\n                                            intrazonal_sum: 412.8333333333333\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Road\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 17227.833333333332\n                                                interzonal_sum: 16815.0\n                                                intrazonal_sum: 412.8333333333333\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Road\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 103367.0\n                                                    interzonal_sum: 100890.0\n                                                    intrazonal_sum: 2477.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    0.16666666666666666\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                Convergence Information:\n                1: count: 168, col_pass: 168, row_pass: 168\n                \n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Bus\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: NHBO\n        level: 8\n        zone_count: 168\n        matrix_sum: 286.3608800519948\n        interzonal_sum: 239.70163248366458\n        intrazonal_sum: 46.65924756833022\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Bus\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBO\n            level: 8\n            zone_count: 168\n            matrix_sum: 286.3608800519948\n            interzonal_sum: 239.70163248366458\n            intrazonal_sum: 46.65924756833022\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Bus\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBO\n                level: 6\n                zone_count: 168\n                matrix_sum: 286.3608800519948\n                interzonal_sum: 239.70163248366458\n                intrazonal_sum: 46.65924756833022\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Road\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 6\n                    zone_count: 168\n                    matrix_sum: 11222.166666666664\n                    interzonal_sum: 9592.506630616705\n                    intrazonal_sum: 1629.6600360499597\n                    Comments:\n                    Created by disaggregate_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Road\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 6\n                        zone_count: 120\n                        matrix_sum: 11222.166666666664\n                        interzonal_sum: 10988.999999999998\n                        intrazonal_sum: 233.16666666666663\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Road\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBO\n                            level: 6\n                            zone_count: 120\n                            matrix_sum: 11222.166666666664\n                            interzonal_sum: 10988.999999999998\n                            intrazonal_sum: 233.16666666666663\n                            Comments:\n                            Created by operation <built-in function mul> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: Road\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBO\n                                level: 6\n                                zone_count: 120\n                                matrix_sum: 67333.0\n                                interzonal_sum: 65934.0\n                                intrazonal_sum: 1399.0\n                                Comments:\n                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Road.csv\n                                MND Raw Data\n                                \n                            ]\n                            <built-in function mul>\n                            [\n                                0.16666666666666666\n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    Matrix Object\n                    vehicle_type: Bus\n                    value_type: proportions\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 6\n                    zone_count: 168\n                    matrix_sum: 5002.085495119061\n                    interzonal_sum: 4984.892785835573\n                    intrazonal_sum: 17.19270928348882\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Bus\n                        value_type: proportions\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 6\n                        zone_count: 168\n                        matrix_sum: 5002.085495119061\n                        interzonal_sum: 4984.892785835573\n                        intrazonal_sum: 17.19270928348882\n                        Comments:\n                        Created by generate_proportion_matrix operation on the following matrices:\n                        [\n                            Matrix Object\n                            vehicle_type: Bus\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBO\n                            level: 6\n                            zone_count: 168\n                            matrix_sum: 551.6708\n                            interzonal_sum: 476.33559\n                            intrazonal_sum: 75.33520999999999\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Bus\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 551.6708\n                                interzonal_sum: 476.33559\n                                intrazonal_sum: 75.33520999999999\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Bus\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBO\n                                    level: 5\n                                    zone_count: 168\n                                    matrix_sum: 551.6708\n                                    interzonal_sum: 476.33559\n                                    intrazonal_sum: 75.33520999999999\n                                    Comments:\n                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                    Matrix Object\n                                    vehicle_type: Bus\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBO\n                                    level: 5\n                                    zone_count: 168\n                                    matrix_sum: 551.6708\n                                    interzonal_sum: 476.33559\n                                    intrazonal_sum: 75.33520999999999\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        [\n                            Matrix Object\n                            vehicle_type: Road\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBO\n                            level: 6\n                            zone_count: 168\n                            matrix_sum: 11222.166666666664\n                            interzonal_sum: 9592.506630616705\n                            intrazonal_sum: 1629.6600360499597\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Road\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 11222.166666666664\n                                interzonal_sum: 9592.506630616705\n                                intrazonal_sum: 1629.6600360499597\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Road\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBO\n                                    level: 6\n                                    zone_count: 120\n                                    matrix_sum: 11222.166666666664\n                                    interzonal_sum: 10988.999999999998\n                                    intrazonal_sum: 233.16666666666663\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Road\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: NHBO\n                                        level: 6\n                                        zone_count: 120\n                                        matrix_sum: 11222.166666666664\n                                        interzonal_sum: 10988.999999999998\n                                        intrazonal_sum: 233.16666666666663\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Road\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: NHBO\n                                            level: 6\n                                            zone_count: 120\n                                            matrix_sum: 67333.0\n                                            interzonal_sum: 65934.0\n                                            intrazonal_sum: 1399.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Road.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            0.16666666666666666\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}}}