{"py/object": "matrix_class_v2.MatrixStack", "_name": "combined_mndsynth", "_vehicle_type": "Rail", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"json://501": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 501, "_targets": {"json://501": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://502": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 502, "_targets": {"json://502": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://504": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 504, "_targets": {"json://504": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://505": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 505, "_targets": {"json://505": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://506": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 506, "_targets": {"json://506": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://509": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 509, "_targets": {"json://509": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://511": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 511, "_targets": {"json://511": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://512": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 512, "_targets": {"json://512": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://513": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 513, "_targets": {"json://513": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://514": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 514, "_targets": {"json://514": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://515": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 515, "_targets": {"json://515": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://516": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 516, "_targets": {"json://516": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://517": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 517, "_targets": {"json://517": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://519": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 519, "_targets": {"json://519": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://520": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 520, "_targets": {"json://520": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://521": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 521, "_targets": {"json://521": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://523": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 523, "_targets": {"json://523": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://524": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 524, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://525": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 525, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://526": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 526, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://527": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 527, "_targets": {"json://527": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://528": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 528, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://531": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 531, "_targets": {"json://531": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://532": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 532, "_targets": {"json://532": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://533": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 533, "_targets": {"json://533": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://534": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 534, "_targets": {"json://534": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://535": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 535, "_targets": {"json://535": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://536": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 536, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://537": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 537, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://538": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 538, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://539": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 539, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://540": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 540, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://541": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 541, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://542": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 542, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://543": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 543, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://544": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 544, "_targets": {"json://544": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://545": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 545, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://546": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 546, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://547": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 547, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://548": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 548, "_targets": {"json://548": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://551": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 551, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://562": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 562, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://566": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 566, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://567": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 567, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://570": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 570, "_targets": {"json://570": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://571": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 571, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://572": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 572, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://573": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 573, "_targets": {"json://573": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://601": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 601, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://602": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 602, "_targets": {"json://602": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://603": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 603, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://604": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 604, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://605": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 605, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://606": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 606, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://607": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 607, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://608": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 608, "_targets": {"json://608": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://609": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 609, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://610": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 610, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5001": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5001, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5002": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5002, "_targets": {"json://5002": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5003": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5003, "_targets": {"json://5003": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5004": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5004, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5005": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5005, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7105265186923027}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2894734813076974}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5006": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5006, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6336305213085214}, "json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3663694786914786}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5007": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5007, "_targets": {"json://5007": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5008": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5008, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5009": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5009, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.12574033987473257}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8742596601252675}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5010": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5010, "_targets": {"json://5010": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5011": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5011, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5012": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5012, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5013": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5013, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5014": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5014, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5015": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5015, "_targets": {"json://5015": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5016": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5016, "_targets": {"json://5019": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.23915238262142025}, "json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7608476173785798}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5017": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5017, "_targets": {"json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5018": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5018, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5019": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5019, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7224258444377175}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5020": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5020, "_targets": {"json://5020": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5021": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5021, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5022": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5022, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5023": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5023, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16270700178727196}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8372929982127281}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5024": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5024, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5025": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5025, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5924220607039576}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.40757793929604236}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5026": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5026, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5027": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5027, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5028": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5028, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8675205867701657}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13247941322983423}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5029": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5029, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5147106005829688}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.48528939941703114}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5030": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5030, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.38833292989011636}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6116670701098836}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5031": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5031, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9863284020535221}, "json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.013671597946477902}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5032": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5032, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5033": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5033, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5034": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5034, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5035": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5035, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5036": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5036, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5037": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5037, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5038": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5038, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5039": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5039, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5040": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5040, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5041": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5041, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5042": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5042, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5043": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5043, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5045": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5045, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5046": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5046, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5047": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5047, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5048": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5048, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5049": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5049, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5050": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5050, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5051": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5051, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5052": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5052, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5053": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5053, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5054": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5054, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5055": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5055, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5056": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5056, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5065": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5065, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5067": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5067, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06201399661995637}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9379860033800437}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5068": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5068, "_targets": {"json://5068": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5069": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5069, "_targets": {"json://5069": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5070": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5070, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5100": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5100, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5101": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5101, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5102": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5102, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5103": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5103, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5104": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5104, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5105": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5105, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5106": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5106, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5107": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5107, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.29235456942551624}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7076454305744838}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5108": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5108, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5109": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5109, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5110": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5110, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7387638702178395}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.26123612978216043}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5111": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5111, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2515912022033352}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7484087977966648}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5112": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5112, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5115": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5115, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.22736056963670478}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7726394303632952}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5116": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5116, "_targets": {"json://5116": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5117": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5117, "_targets": {"json://5139": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.28054378071849867}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7194562192815013}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5118": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5118, "_targets": {"json://5118": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5119": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5119, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5120": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5120, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5121": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5121, "_targets": {"json://5121": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5122": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5122, "_targets": {"json://5122": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5124": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5124, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4437572194572055}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5125": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5125, "_targets": {"json://5124": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13644820554642537}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8635517944535747}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5126": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5126, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5127": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5127, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5128": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5128, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.028333630736165107}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9716663692638349}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5129": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5129, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11436485547237808}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8856351445276219}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5130": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5130, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.29984251486319297}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7001574851368071}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5131": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5131, "_targets": {"json://5131": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5132": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5132, "_targets": {"json://5132": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5133": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5133, "_targets": {"json://5133": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5134": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5134, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.32382409830106296}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.676175901698937}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5135": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5135, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08645655874211541}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9135434412578846}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5136": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5136, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.239089678008408}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5137": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5137, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5138": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5138, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5139": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5139, "_targets": {"json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5140": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5140, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5141": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5141, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2216693993246311}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.778330600675369}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5142": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5142, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.026609684324048147}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9733903156759518}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5143": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5143, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0716213365076186}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9283786634923814}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9001": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9001, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9002": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9002, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9003": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9003, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9004": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9004, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9005": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9005, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9006": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9006, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9007": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9007, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9008": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9008, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9009": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9009, "_targets": {"json://9009": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}}}, "_zones": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "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", "txt": false, "meta": {"dtypes": {"index": "int64", "mnd_zone": "int64", "x_coord": "int64", "y_coord": "int64", "area_ref": "object", "sector": "int64", "msoa": "object", "district": "object", "Urban city and town": "int64", "Rural village": "int64", "Rural hamlets and isolated dwellings": "int64", "Rural town and fringe": "int64", "Rural village in a sparse setting": "int64", "Rural hamlets and isolated dwellings in a sparse setting": "int64", "Rural town and fringe in a sparse setting": "int64", "urbanrural": "object", "cordon_inner": "object", "cordon_outer": "object", "Internal": "bool"}, "index": "{\"py/object\": \"pandas.core.indexes.numeric.Int64Index\", \"comp\": true, \"values\": \"eJwtk8FtRSEQA1tJATnYsMCnlij9txE8m4ulp7VXMPj9LPn7a2lEKrIiO3KfOFNn6hmJxbE4Fp9IfEORmEd8I74R34hvxDc+T2YsM/tmfDO+Gd+Mb8Y38WVpZWklUUlUEpVEJVFJVBKVxIpvx7cz2BmcLDgZnAzOW7Bz3537bvFZkRXZkRP5RN4JtrNAjagZJfQUVM2qYSX49IPm8OosAAVBgVAwFBAFRYFRJgtNgVOjn4YsWAVXAVaQFWgFWw2ykyygBWmBWrAWsAVtgVvwFsAFcYFc1Z0gC3BBXCAXzFWkFikeQIvUIrW6UGQX2d3tYsNmw2YDD2W1UjloG9qGtqFtaBvahrb/e0q269p97Zp2T7uoEDaEDWGPrjd+2Bq2hq1ha9gatoatYevZfwUnhK1ha9gatoatYWvYGraGrcP20q5Luy7turTr0q5Luy7turTr6f39AzjkrWM=\", \"txt\": false, \"meta\": {\"dtype\": \"int64\", \"name\": \"reference\"}}", "column_level_names": [null], "header": [0]}}, "_source_file": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["C:\\", "Users", "UKTMB001", "Documents", "Python Scripts", "MND", "ZoningTemplate_Model_v2.xlsx"]}]}, "_source_sheet": "zones"}, "_time_period": "AM_peak_hr", "_value_type": "Person Trips", "_levels": {"json://1": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "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", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 1, "_purpose": "Commuting", "_time_period": "AM_peak_hr", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: AM_peak_hr\npurpose: Commuting\nlevel: 1\nzone_count: 168\nmatrix_sum: 37.5916773147749\ninterzonal_sum: 37.5916773147749\nintrazonal_sum: 0.0\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: AM_peak_hr\n    purpose: Commuting\n    level: 1\n    zone_count: 168\n    matrix_sum: 0.818367314774894\n    interzonal_sum: 0.818367314774894\n    intrazonal_sum: 0.0\n    Comments:\n    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: AM_peak_hr\n        purpose: Commuting\n        level: 1\n        zone_count: 168\n        matrix_sum: 1.3426664559997419\n        interzonal_sum: 1.3373969648739805\n        intrazonal_sum: 0.005269491125761296\n        Comments:\n        Created by operation <built-in function mul> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: AM_peak_hr\n            purpose: Commuting\n            level: 1\n            zone_count: 168\n            matrix_sum: 336.0\n            interzonal_sum: 305.24620468230444\n            intrazonal_sum: 30.75379531769555\n            Comments:\n            Created by operation <built-in function add> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: Commuting\n                level: 1\n                zone_count: 168\n                matrix_sum: 2.0\n                interzonal_sum: 2.0\n                intrazonal_sum: 0.0\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: IB_HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 2.0\n                    interzonal_sum: 2.0\n                    intrazonal_sum: 0.0\n                    Comments:\n                    Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: IB_HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 2.0\n                        interzonal_sum: 2.0\n                        intrazonal_sum: 0.0\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: IB_HBW\n                            level: 1\n                            zone_count: 168\n                            matrix_sum: 2.0\n                            interzonal_sum: 2.0\n                            intrazonal_sum: 0.0\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: IB_HBW\n                                level: 1\n                                zone_count: 168\n                                matrix_sum: 2.0\n                                interzonal_sum: 2.0\n                                intrazonal_sum: 0.0\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: IB_HBW\n                                    level: 1\n                                    zone_count: 120\n                                    matrix_sum: 2.0\n                                    interzonal_sum: 2.0\n                                    intrazonal_sum: 0.0\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: IB_HBW\n                                        level: 1\n                                        zone_count: 120\n                                        matrix_sum: 2.0\n                                        interzonal_sum: 2.0\n                                        intrazonal_sum: 0.0\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: IB_HBW\n                                            level: 1\n                                            zone_count: 120\n                                            matrix_sum: 2.0\n                                            interzonal_sum: 2.0\n                                            intrazonal_sum: 0.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Rail.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            1.0\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function add>\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: OB_HBW\n                level: 2\n                zone_count: 168\n                matrix_sum: 334.0\n                interzonal_sum: 303.24620468230444\n                intrazonal_sum: 30.75379531769555\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: OB_HBW\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 334.0\n                    interzonal_sum: 303.24620468230444\n                    intrazonal_sum: 30.75379531769555\n                    Comments:\n                    Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: OB_HBW\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 334.0\n                        interzonal_sum: 328.75900258420245\n                        intrazonal_sum: 5.240997415797548\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: OB_HBW\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 334.0\n                            interzonal_sum: 328.75900258420245\n                            intrazonal_sum: 5.240997415797548\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: OB_HBW\n                                level: 2\n                                zone_count: 168\n                                matrix_sum: 334.0\n                                interzonal_sum: 328.75900258420245\n                                intrazonal_sum: 5.240997415797548\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: OB_HBW\n                                    level: 2\n                                    zone_count: 120\n                                    matrix_sum: 334.0\n                                    interzonal_sum: 330.0\n                                    intrazonal_sum: 4.0\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: OB_HBW\n                                        level: 2\n                                        zone_count: 120\n                                        matrix_sum: 334.0\n                                        interzonal_sum: 330.0\n                                        intrazonal_sum: 4.0\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: OB_HBW\n                                            level: 2\n                                            zone_count: 120\n                                            matrix_sum: 334.0\n                                            interzonal_sum: 330.0\n                                            intrazonal_sum: 4.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Rail.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            1.0\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        <built-in function mul>\n        [\n            [[ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            ...\n            [False False False ... False False False]\n            [False False False ... False False False]\n            [False False False ... False False False]]\n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: SynthRail\n    value_type: Person Trips\n    time_period: AM_peak_hr\n    purpose: Commuting\n    level: 1\n    zone_count: 168\n    matrix_sum: 36.77331\n    interzonal_sum: 36.77331\n    intrazonal_sum: 0.0\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: AM_peak_hr\n        purpose: Commuting\n        level: 1\n        zone_count: 168\n        matrix_sum: 36.77331\n        interzonal_sum: 36.77331\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: AM_peak_hr\n            purpose: Commuting\n            level: 1\n            zone_count: 168\n            matrix_sum: 358.79365\n            interzonal_sum: 358.79365\n            intrazonal_sum: 0.0\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: Commuting\n                level: 1\n                zone_count: 168\n                matrix_sum: 2443.16719\n                interzonal_sum: 2047.1497000000002\n                intrazonal_sum: 396.01748999999995\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 2443.16719\n                    interzonal_sum: 2047.1497000000002\n                    intrazonal_sum: 396.01748999999995\n                    Comments:\n                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_AM_peak_hr.csv\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 2443.16719\n                    interzonal_sum: 2047.1497000000002\n                    intrazonal_sum: 396.01748999999995\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: AM_peak_hr\npurpose: Commuting\nlevel: 1\nzone_count: 168\nmatrix_sum: 1244.8294824024752\ninterzonal_sum: 848.8119924024752\nintrazonal_sum: 396.01748999999995\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: AM_peak_hr\n    purpose: Commuting\n    level: 1\n    zone_count: 168\n    matrix_sum: 1244.8294824024752\n    interzonal_sum: 848.8119924024752\n    intrazonal_sum: 396.01748999999995\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: AM_peak_hr\n        purpose: Commuting\n        level: 1\n        zone_count: 168\n        matrix_sum: 275.4013324024753\n        interzonal_sum: 275.4013324024753\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: AM_peak_hr\n            purpose: Commuting\n            level: 1\n            zone_count: 168\n            matrix_sum: 334.65733354400027\n            interzonal_sum: 303.9088077174305\n            intrazonal_sum: 30.748525826569786\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: Commuting\n                level: 1\n                zone_count: 168\n                matrix_sum: 336.0\n                interzonal_sum: 305.24620468230444\n                intrazonal_sum: 30.75379531769555\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: Commuting\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 2.0\n                    interzonal_sum: 2.0\n                    intrazonal_sum: 0.0\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: IB_HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 2.0\n                        interzonal_sum: 2.0\n                        intrazonal_sum: 0.0\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: IB_HBW\n                            level: 1\n                            zone_count: 168\n                            matrix_sum: 2.0\n                            interzonal_sum: 2.0\n                            intrazonal_sum: 0.0\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: IB_HBW\n                                level: 1\n                                zone_count: 168\n                                matrix_sum: 2.0\n                                interzonal_sum: 2.0\n                                intrazonal_sum: 0.0\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: IB_HBW\n                                    level: 1\n                                    zone_count: 168\n                                    matrix_sum: 2.0\n                                    interzonal_sum: 2.0\n                                    intrazonal_sum: 0.0\n                                    Comments:\n                                    Created by disaggregate_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: IB_HBW\n                                        level: 1\n                                        zone_count: 120\n                                        matrix_sum: 2.0\n                                        interzonal_sum: 2.0\n                                        intrazonal_sum: 0.0\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: IB_HBW\n                                            level: 1\n                                            zone_count: 120\n                                            matrix_sum: 2.0\n                                            interzonal_sum: 2.0\n                                            intrazonal_sum: 0.0\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: AM_peak_hr\n                                                purpose: IB_HBW\n                                                level: 1\n                                                zone_count: 120\n                                                matrix_sum: 2.0\n                                                interzonal_sum: 2.0\n                                                intrazonal_sum: 0.0\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Rail.csv\n                                                MND Raw Data\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                1.0\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: OB_HBW\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 334.0\n                    interzonal_sum: 303.24620468230444\n                    intrazonal_sum: 30.75379531769555\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: OB_HBW\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 334.0\n                        interzonal_sum: 303.24620468230444\n                        intrazonal_sum: 30.75379531769555\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: OB_HBW\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 334.0\n                            interzonal_sum: 328.75900258420245\n                            intrazonal_sum: 5.240997415797548\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: OB_HBW\n                                level: 2\n                                zone_count: 168\n                                matrix_sum: 334.0\n                                interzonal_sum: 328.75900258420245\n                                intrazonal_sum: 5.240997415797548\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: OB_HBW\n                                    level: 2\n                                    zone_count: 168\n                                    matrix_sum: 334.0\n                                    interzonal_sum: 328.75900258420245\n                                    intrazonal_sum: 5.240997415797548\n                                    Comments:\n                                    Created by disaggregate_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: OB_HBW\n                                        level: 2\n                                        zone_count: 120\n                                        matrix_sum: 334.0\n                                        interzonal_sum: 330.0\n                                        intrazonal_sum: 4.0\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: OB_HBW\n                                            level: 2\n                                            zone_count: 120\n                                            matrix_sum: 334.0\n                                            interzonal_sum: 330.0\n                                            intrazonal_sum: 4.0\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: AM_peak_hr\n                                                purpose: OB_HBW\n                                                level: 2\n                                                zone_count: 120\n                                                matrix_sum: 334.0\n                                                interzonal_sum: 330.0\n                                                intrazonal_sum: 4.0\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Rail.csv\n                                                MND Raw Data\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                1.0\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                ...\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: AM_peak_hr\n        purpose: Commuting\n        level: 1\n        zone_count: 168\n        matrix_sum: 969.42815\n        interzonal_sum: 573.41066\n        intrazonal_sum: 396.01748999999995\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: AM_peak_hr\n            purpose: Commuting\n            level: 1\n            zone_count: 168\n            matrix_sum: 969.42815\n            interzonal_sum: 573.41066\n            intrazonal_sum: 396.01748999999995\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: Commuting\n                level: 1\n                zone_count: 168\n                matrix_sum: 2084.37354\n                interzonal_sum: 1688.35605\n                intrazonal_sum: 396.01748999999995\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: Commuting\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 2443.16719\n                    interzonal_sum: 2047.1497000000002\n                    intrazonal_sum: 396.01748999999995\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 2443.16719\n                        interzonal_sum: 2047.1497000000002\n                        intrazonal_sum: 396.01748999999995\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_AM_peak_hr.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 2443.16719\n                        interzonal_sum: 2047.1497000000002\n                        intrazonal_sum: 396.01748999999995\n                        \n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://2": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 2, "_purpose": "Employers Business", "_time_period": "AM_peak_hr", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: AM_peak_hr\npurpose: Employers Business\nlevel: 2\nzone_count: 168\nmatrix_sum: 53.437617315561454\ninterzonal_sum: 19.970177315561443\nintrazonal_sum: 33.46744000000001\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: AM_peak_hr\n    purpose: Employers Business\n    level: 2\n    zone_count: 168\n    matrix_sum: 0.1904673155614552\n    interzonal_sum: 0.1904673155614552\n    intrazonal_sum: 0.0\n    Comments:\n    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: AM_peak_hr\n        purpose: Employers Business\n        level: 2\n        zone_count: 168\n        matrix_sum: 0.9217928683509276\n        interzonal_sum: 0.917866611419778\n        intrazonal_sum: 0.003926256931149546\n        Comments:\n        Created by operation <built-in function mul> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: AM_peak_hr\n            purpose: Employers Business\n            level: 2\n            zone_count: 168\n            matrix_sum: 279.9895335870059\n            interzonal_sum: 267.1129654532444\n            intrazonal_sum: 12.876568133761488\n            Comments:\n            Created by operation <built-in function add> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: Employers Business\n                level: 3\n                zone_count: 168\n                matrix_sum: 145.98953358700595\n                interzonal_sum: 138.72439903249713\n                intrazonal_sum: 7.265134554508821\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: Employers Business\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 14.437877251290814\n                    interzonal_sum: 14.413701352354808\n                    intrazonal_sum: 0.02417589893600581\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: IB_HBEmp\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 14.437877251290814\n                        interzonal_sum: 14.413701352354808\n                        intrazonal_sum: 0.02417589893600581\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: IB_HBEmp\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 14.437877251290814\n                            interzonal_sum: 14.381497926272356\n                            intrazonal_sum: 0.056379325018458985\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: IB_HBEmp\n                                level: 3\n                                zone_count: 168\n                                matrix_sum: 14.437877251290814\n                                interzonal_sum: 14.381497926272356\n                                intrazonal_sum: 0.056379325018458985\n                                Comments:\n                                Created by furness_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 39.0\n                                    interzonal_sum: 38.7742939551676\n                                    intrazonal_sum: 0.2257060448323995\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 39.0\n                                        interzonal_sum: 38.7742939551676\n                                        intrazonal_sum: 0.2257060448323995\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 120\n                                            matrix_sum: 39.0\n                                            interzonal_sum: 38.0\n                                            intrazonal_sum: 1.0\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: AM_peak_hr\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 39.0\n                                                interzonal_sum: 38.0\n                                                intrazonal_sum: 1.0\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: AM_peak_hr\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 39.0\n                                                    interzonal_sum: 38.0\n                                                    intrazonal_sum: 1.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    1.0\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                Convergence Information:\n                                1: count: 168, col_pass: 123, row_pass: 118\n                                2: count: 168, col_pass: 123, row_pass: 118\n                                3: count: 168, col_pass: 123, row_pass: 118\n                                4: count: 168, col_pass: 123, row_pass: 118\n                                5: count: 168, col_pass: 123, row_pass: 118\n                                6: count: 168, col_pass: 123, row_pass: 118\n                                7: count: 168, col_pass: 123, row_pass: 118\n                                8: count: 168, col_pass: 123, row_pass: 118\n                                9: count: 168, col_pass: 123, row_pass: 118\n                                10: count: 168, col_pass: 123, row_pass: 118\n                                11: count: 168, col_pass: 123, row_pass: 118\n                                12: count: 168, col_pass: 123, row_pass: 118\n                                13: count: 168, col_pass: 123, row_pass: 118\n                                14: count: 168, col_pass: 123, row_pass: 118\n                                15: count: 168, col_pass: 123, row_pass: 118\n                                16: count: 168, col_pass: 123, row_pass: 118\n                                17: count: 168, col_pass: 123, row_pass: 118\n                                18: count: 168, col_pass: 123, row_pass: 118\n                                19: count: 168, col_pass: 123, row_pass: 118\n                                20: count: 168, col_pass: 123, row_pass: 118\n                                21: count: 168, col_pass: 123, row_pass: 118\n                                22: count: 168, col_pass: 123, row_pass: 119\n                                23: count: 168, col_pass: 123, row_pass: 118\n                                24: count: 168, col_pass: 123, row_pass: 118\n                                25: count: 168, col_pass: 123, row_pass: 118\n                                26: count: 168, col_pass: 123, row_pass: 118\n                                27: count: 168, col_pass: 123, row_pass: 118\n                                28: count: 168, col_pass: 123, row_pass: 118\n                                29: count: 168, col_pass: 123, row_pass: 118\n                                30: count: 168, col_pass: 123, row_pass: 118\n                                31: count: 168, col_pass: 123, row_pass: 118\n                                32: count: 168, col_pass: 123, row_pass: 118\n                                33: count: 168, col_pass: 123, row_pass: 118\n                                34: count: 168, col_pass: 123, row_pass: 118\n                                35: count: 168, col_pass: 123, row_pass: 118\n                                36: count: 168, col_pass: 123, row_pass: 118\n                                37: count: 168, col_pass: 123, row_pass: 119\n                                38: count: 168, col_pass: 123, row_pass: 118\n                                39: count: 168, col_pass: 123, row_pass: 118\n                                40: count: 168, col_pass: 123, row_pass: 118\n                                41: count: 168, col_pass: 123, row_pass: 118\n                                42: count: 168, col_pass: 123, row_pass: 118\n                                43: count: 168, col_pass: 123, row_pass: 118\n                                44: count: 168, col_pass: 123, row_pass: 118\n                                45: count: 168, col_pass: 123, row_pass: 118\n                                46: count: 168, col_pass: 123, row_pass: 118\n                                47: count: 168, col_pass: 123, row_pass: 118\n                                48: count: 168, col_pass: 123, row_pass: 118\n                                49: count: 168, col_pass: 123, row_pass: 118\n                                50: count: 168, col_pass: 123, row_pass: 118\n                                51: count: 168, col_pass: 123, row_pass: 118\n                                52: count: 168, col_pass: 123, row_pass: 118\n                                53: count: 168, col_pass: 123, row_pass: 118\n                                54: count: 168, col_pass: 123, row_pass: 118\n                                55: count: 168, col_pass: 123, row_pass: 118\n                                56: count: 168, col_pass: 123, row_pass: 118\n                                57: count: 168, col_pass: 123, row_pass: 118\n                                58: count: 168, col_pass: 123, row_pass: 118\n                                59: count: 168, col_pass: 123, row_pass: 118\n                                60: count: 168, col_pass: 123, row_pass: 118\n                                61: count: 168, col_pass: 123, row_pass: 118\n                                62: count: 168, col_pass: 123, row_pass: 118\n                                63: count: 168, col_pass: 123, row_pass: 118\n                                64: count: 168, col_pass: 123, row_pass: 118\n                                65: count: 168, col_pass: 123, row_pass: 118\n                                66: count: 168, col_pass: 123, row_pass: 118\n                                67: count: 168, col_pass: 123, row_pass: 118\n                                68: count: 168, col_pass: 123, row_pass: 118\n                                69: count: 168, col_pass: 123, row_pass: 118\n                                70: count: 168, col_pass: 123, row_pass: 118\n                                71: count: 168, col_pass: 123, row_pass: 118\n                                72: count: 168, col_pass: 123, row_pass: 118\n                                73: count: 168, col_pass: 123, row_pass: 118\n                                74: count: 168, col_pass: 123, row_pass: 118\n                                75: count: 168, col_pass: 123, row_pass: 118\n                                76: count: 168, col_pass: 123, row_pass: 118\n                                77: count: 168, col_pass: 123, row_pass: 118\n                                78: count: 168, col_pass: 123, row_pass: 118\n                                79: count: 168, col_pass: 123, row_pass: 118\n                                80: count: 168, col_pass: 123, row_pass: 118\n                                81: count: 168, col_pass: 123, row_pass: 118\n                                82: count: 168, col_pass: 123, row_pass: 118\n                                83: count: 168, col_pass: 123, row_pass: 118\n                                84: count: 168, col_pass: 123, row_pass: 118\n                                85: count: 168, col_pass: 123, row_pass: 118\n                                86: count: 168, col_pass: 123, row_pass: 118\n                                87: count: 168, col_pass: 123, row_pass: 118\n                                88: count: 168, col_pass: 123, row_pass: 118\n                                89: count: 168, col_pass: 123, row_pass: 118\n                                90: count: 168, col_pass: 123, row_pass: 118\n                                91: count: 168, col_pass: 123, row_pass: 118\n                                92: count: 168, col_pass: 123, row_pass: 118\n                                93: count: 168, col_pass: 123, row_pass: 118\n                                94: count: 168, col_pass: 123, row_pass: 118\n                                95: count: 168, col_pass: 123, row_pass: 118\n                                96: count: 168, col_pass: 123, row_pass: 118\n                                97: count: 168, col_pass: 123, row_pass: 118\n                                98: count: 168, col_pass: 123, row_pass: 118\n                                99: count: 168, col_pass: 123, row_pass: 118\n                                100: count: 168, col_pass: 123, row_pass: 118\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: OB_HBEmp\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 131.55165633571514\n                    interzonal_sum: 124.31069768014233\n                    intrazonal_sum: 7.240958655572816\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: OB_HBEmp\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 131.55165633571514\n                        interzonal_sum: 124.31069768014233\n                        intrazonal_sum: 7.240958655572816\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: OB_HBEmp\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 131.55165633571514\n                            interzonal_sum: 130.202037007712\n                            intrazonal_sum: 1.3496193280031366\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: OB_HBEmp\n                                level: 4\n                                zone_count: 168\n                                matrix_sum: 131.55165633571514\n                                interzonal_sum: 130.202037007712\n                                intrazonal_sum: 1.3496193280031366\n                                Comments:\n                                Created by furness_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 364.0\n                                    interzonal_sum: 360.77429216006425\n                                    intrazonal_sum: 3.225707839935766\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 364.0\n                                        interzonal_sum: 360.77429216006425\n                                        intrazonal_sum: 3.225707839935766\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 120\n                                            matrix_sum: 364.0\n                                            interzonal_sum: 363.0\n                                            intrazonal_sum: 1.0\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: AM_peak_hr\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 364.0\n                                                interzonal_sum: 363.0\n                                                intrazonal_sum: 1.0\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: AM_peak_hr\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 364.0\n                                                    interzonal_sum: 363.0\n                                                    intrazonal_sum: 1.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    1.0\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                Convergence Information:\n                                1: count: 168, col_pass: 94, row_pass: 8\n                                2: count: 168, col_pass: 95, row_pass: 4\n                                3: count: 168, col_pass: 98, row_pass: 4\n                                4: count: 168, col_pass: 124, row_pass: 6\n                                5: count: 168, col_pass: 127, row_pass: 8\n                                6: count: 168, col_pass: 135, row_pass: 32\n                                7: count: 168, col_pass: 152, row_pass: 163\n                                8: count: 168, col_pass: 153, row_pass: 168\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function add>\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: NHBW\n                level: 7\n                zone_count: 168\n                matrix_sum: 134.0\n                interzonal_sum: 128.38856642074734\n                intrazonal_sum: 5.611433579252669\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: NHBW\n                    level: 7\n                    zone_count: 168\n                    matrix_sum: 134.0\n                    interzonal_sum: 128.38856642074734\n                    intrazonal_sum: 5.611433579252669\n                    Comments:\n                    Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: NHBW\n                        level: 7\n                        zone_count: 168\n                        matrix_sum: 134.0\n                        interzonal_sum: 132.78111793124762\n                        intrazonal_sum: 1.2188820687523887\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: NHBW\n                            level: 7\n                            zone_count: 168\n                            matrix_sum: 134.0\n                            interzonal_sum: 132.78111793124762\n                            intrazonal_sum: 1.2188820687523887\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: NHBW\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 134.0\n                                interzonal_sum: 132.78111793124762\n                                intrazonal_sum: 1.2188820687523887\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: NHBW\n                                    level: 5\n                                    zone_count: 120\n                                    matrix_sum: 134.0\n                                    interzonal_sum: 133.0\n                                    intrazonal_sum: 1.0\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: NHBW\n                                        level: 5\n                                        zone_count: 120\n                                        matrix_sum: 134.0\n                                        interzonal_sum: 133.0\n                                        intrazonal_sum: 1.0\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: NHBW\n                                            level: 5\n                                            zone_count: 120\n                                            matrix_sum: 134.0\n                                            interzonal_sum: 133.0\n                                            intrazonal_sum: 1.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Rail.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            1.0\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        <built-in function mul>\n        [\n            [[ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            ...\n            [False False False ... False False False]\n            [False False False ... False False False]\n            [False False False ... False False False]]\n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: SynthRail\n    value_type: Person Trips\n    time_period: AM_peak_hr\n    purpose: Employers Business\n    level: 2\n    zone_count: 168\n    matrix_sum: 53.247150000000005\n    interzonal_sum: 19.779709999999994\n    intrazonal_sum: 33.46744000000001\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: AM_peak_hr\n        purpose: Employers Business\n        level: 2\n        zone_count: 168\n        matrix_sum: 53.247150000000005\n        interzonal_sum: 19.779709999999994\n        intrazonal_sum: 33.46744000000001\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: AM_peak_hr\n            purpose: Employers Business\n            level: 2\n            zone_count: 168\n            matrix_sum: 77.79005\n            interzonal_sum: 44.32260999999998\n            intrazonal_sum: 33.46744000000001\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: Employers Business\n                level: 2\n                zone_count: 168\n                matrix_sum: 541.47749\n                interzonal_sum: 300.60623\n                intrazonal_sum: 240.87126000000004\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: Employers Business\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 120.32442\n                    interzonal_sum: 46.158199999999994\n                    intrazonal_sum: 74.16622000000001\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: HBEmp\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 120.32442\n                        interzonal_sum: 46.158199999999994\n                        intrazonal_sum: 74.16622000000001\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_AM_peak_hr.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: HBEmp\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 120.32442\n                        interzonal_sum: 46.158199999999994\n                        intrazonal_sum: 74.16622000000001\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: NHBW\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 421.15306999999996\n                    interzonal_sum: 254.44802999999996\n                    intrazonal_sum: 166.70504\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: NHBW\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 421.15306999999996\n                        interzonal_sum: 254.44802999999996\n                        intrazonal_sum: 166.70504\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_AM_peak_hr.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: NHBW\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 421.15306999999996\n                        interzonal_sum: 254.44802999999996\n                        intrazonal_sum: 166.70504\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: AM_peak_hr\npurpose: Employers Business\nlevel: 2\nzone_count: 168\nmatrix_sum: 551.4777194203252\ninterzonal_sum: 344.07389942032523\nintrazonal_sum: 207.40382000000002\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: AM_peak_hr\n    purpose: Employers Business\n    level: 2\n    zone_count: 168\n    matrix_sum: 551.4777194203252\n    interzonal_sum: 344.07389942032523\n    intrazonal_sum: 207.40382000000002\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: AM_peak_hr\n        purpose: Employers Business\n        level: 2\n        zone_count: 168\n        matrix_sum: 250.39610942032527\n        interzonal_sum: 250.39610942032527\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: AM_peak_hr\n            purpose: Employers Business\n            level: 2\n            zone_count: 168\n            matrix_sum: 279.067740718655\n            interzonal_sum: 266.19509884182463\n            intrazonal_sum: 12.87264187683034\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: Employers Business\n                level: 2\n                zone_count: 168\n                matrix_sum: 279.9895335870059\n                interzonal_sum: 267.1129654532444\n                intrazonal_sum: 12.876568133761488\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: Employers Business\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 145.98953358700595\n                    interzonal_sum: 138.72439903249713\n                    intrazonal_sum: 7.265134554508821\n                    Comments:\n                    Created by operation <built-in function add> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: Employers Business\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 14.437877251290814\n                        interzonal_sum: 14.413701352354808\n                        intrazonal_sum: 0.02417589893600581\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: IB_HBEmp\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 14.437877251290814\n                            interzonal_sum: 14.413701352354808\n                            intrazonal_sum: 0.02417589893600581\n                            Comments:\n                            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: IB_HBEmp\n                                level: 3\n                                zone_count: 168\n                                matrix_sum: 14.437877251290814\n                                interzonal_sum: 14.381497926272356\n                                intrazonal_sum: 0.056379325018458985\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: IB_HBEmp\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 14.437877251290814\n                                    interzonal_sum: 14.381497926272356\n                                    intrazonal_sum: 0.056379325018458985\n                                    Comments:\n                                    Created by furness_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 39.0\n                                        interzonal_sum: 38.7742939551676\n                                        intrazonal_sum: 0.2257060448323995\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 39.0\n                                            interzonal_sum: 38.7742939551676\n                                            intrazonal_sum: 0.2257060448323995\n                                            Comments:\n                                            Created by disaggregate_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: AM_peak_hr\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 39.0\n                                                interzonal_sum: 38.0\n                                                intrazonal_sum: 1.0\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: AM_peak_hr\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 39.0\n                                                    interzonal_sum: 38.0\n                                                    intrazonal_sum: 1.0\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Rail\n                                                        value_type: Person Trips\n                                                        time_period: AM_peak_hr\n                                                        purpose: IB_HBO\n                                                        level: 3\n                                                        zone_count: 120\n                                                        matrix_sum: 39.0\n                                                        interzonal_sum: 38.0\n                                                        intrazonal_sum: 1.0\n                                                        Comments:\n                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                                        MND Raw Data\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    Convergence Information:\n                                    1: count: 168, col_pass: 123, row_pass: 118\n                                    2: count: 168, col_pass: 123, row_pass: 118\n                                    3: count: 168, col_pass: 123, row_pass: 118\n                                    4: count: 168, col_pass: 123, row_pass: 118\n                                    5: count: 168, col_pass: 123, row_pass: 118\n                                    6: count: 168, col_pass: 123, row_pass: 118\n                                    7: count: 168, col_pass: 123, row_pass: 118\n                                    8: count: 168, col_pass: 123, row_pass: 118\n                                    9: count: 168, col_pass: 123, row_pass: 118\n                                    10: count: 168, col_pass: 123, row_pass: 118\n                                    11: count: 168, col_pass: 123, row_pass: 118\n                                    12: count: 168, col_pass: 123, row_pass: 118\n                                    13: count: 168, col_pass: 123, row_pass: 118\n                                    14: count: 168, col_pass: 123, row_pass: 118\n                                    15: count: 168, col_pass: 123, row_pass: 118\n                                    16: count: 168, col_pass: 123, row_pass: 118\n                                    17: count: 168, col_pass: 123, row_pass: 118\n                                    18: count: 168, col_pass: 123, row_pass: 118\n                                    19: count: 168, col_pass: 123, row_pass: 118\n                                    20: count: 168, col_pass: 123, row_pass: 118\n                                    21: count: 168, col_pass: 123, row_pass: 118\n                                    22: count: 168, col_pass: 123, row_pass: 119\n                                    23: count: 168, col_pass: 123, row_pass: 118\n                                    24: count: 168, col_pass: 123, row_pass: 118\n                                    25: count: 168, col_pass: 123, row_pass: 118\n                                    26: count: 168, col_pass: 123, row_pass: 118\n                                    27: count: 168, col_pass: 123, row_pass: 118\n                                    28: count: 168, col_pass: 123, row_pass: 118\n                                    29: count: 168, col_pass: 123, row_pass: 118\n                                    30: count: 168, col_pass: 123, row_pass: 118\n                                    31: count: 168, col_pass: 123, row_pass: 118\n                                    32: count: 168, col_pass: 123, row_pass: 118\n                                    33: count: 168, col_pass: 123, row_pass: 118\n                                    34: count: 168, col_pass: 123, row_pass: 118\n                                    35: count: 168, col_pass: 123, row_pass: 118\n                                    36: count: 168, col_pass: 123, row_pass: 118\n                                    37: count: 168, col_pass: 123, row_pass: 119\n                                    38: count: 168, col_pass: 123, row_pass: 118\n                                    39: count: 168, col_pass: 123, row_pass: 118\n                                    40: count: 168, col_pass: 123, row_pass: 118\n                                    41: count: 168, col_pass: 123, row_pass: 118\n                                    42: count: 168, col_pass: 123, row_pass: 118\n                                    43: count: 168, col_pass: 123, row_pass: 118\n                                    44: count: 168, col_pass: 123, row_pass: 118\n                                    45: count: 168, col_pass: 123, row_pass: 118\n                                    46: count: 168, col_pass: 123, row_pass: 118\n                                    47: count: 168, col_pass: 123, row_pass: 118\n                                    48: count: 168, col_pass: 123, row_pass: 118\n                                    49: count: 168, col_pass: 123, row_pass: 118\n                                    50: count: 168, col_pass: 123, row_pass: 118\n                                    51: count: 168, col_pass: 123, row_pass: 118\n                                    52: count: 168, col_pass: 123, row_pass: 118\n                                    53: count: 168, col_pass: 123, row_pass: 118\n                                    54: count: 168, col_pass: 123, row_pass: 118\n                                    55: count: 168, col_pass: 123, row_pass: 118\n                                    56: count: 168, col_pass: 123, row_pass: 118\n                                    57: count: 168, col_pass: 123, row_pass: 118\n                                    58: count: 168, col_pass: 123, row_pass: 118\n                                    59: count: 168, col_pass: 123, row_pass: 118\n                                    60: count: 168, col_pass: 123, row_pass: 118\n                                    61: count: 168, col_pass: 123, row_pass: 118\n                                    62: count: 168, col_pass: 123, row_pass: 118\n                                    63: count: 168, col_pass: 123, row_pass: 118\n                                    64: count: 168, col_pass: 123, row_pass: 118\n                                    65: count: 168, col_pass: 123, row_pass: 118\n                                    66: count: 168, col_pass: 123, row_pass: 118\n                                    67: count: 168, col_pass: 123, row_pass: 118\n                                    68: count: 168, col_pass: 123, row_pass: 118\n                                    69: count: 168, col_pass: 123, row_pass: 118\n                                    70: count: 168, col_pass: 123, row_pass: 118\n                                    71: count: 168, col_pass: 123, row_pass: 118\n                                    72: count: 168, col_pass: 123, row_pass: 118\n                                    73: count: 168, col_pass: 123, row_pass: 118\n                                    74: count: 168, col_pass: 123, row_pass: 118\n                                    75: count: 168, col_pass: 123, row_pass: 118\n                                    76: count: 168, col_pass: 123, row_pass: 118\n                                    77: count: 168, col_pass: 123, row_pass: 118\n                                    78: count: 168, col_pass: 123, row_pass: 118\n                                    79: count: 168, col_pass: 123, row_pass: 118\n                                    80: count: 168, col_pass: 123, row_pass: 118\n                                    81: count: 168, col_pass: 123, row_pass: 118\n                                    82: count: 168, col_pass: 123, row_pass: 118\n                                    83: count: 168, col_pass: 123, row_pass: 118\n                                    84: count: 168, col_pass: 123, row_pass: 118\n                                    85: count: 168, col_pass: 123, row_pass: 118\n                                    86: count: 168, col_pass: 123, row_pass: 118\n                                    87: count: 168, col_pass: 123, row_pass: 118\n                                    88: count: 168, col_pass: 123, row_pass: 118\n                                    89: count: 168, col_pass: 123, row_pass: 118\n                                    90: count: 168, col_pass: 123, row_pass: 118\n                                    91: count: 168, col_pass: 123, row_pass: 118\n                                    92: count: 168, col_pass: 123, row_pass: 118\n                                    93: count: 168, col_pass: 123, row_pass: 118\n                                    94: count: 168, col_pass: 123, row_pass: 118\n                                    95: count: 168, col_pass: 123, row_pass: 118\n                                    96: count: 168, col_pass: 123, row_pass: 118\n                                    97: count: 168, col_pass: 123, row_pass: 118\n                                    98: count: 168, col_pass: 123, row_pass: 118\n                                    99: count: 168, col_pass: 123, row_pass: 118\n                                    100: count: 168, col_pass: 123, row_pass: 118\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    <built-in function add>\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: OB_HBEmp\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 131.55165633571514\n                        interzonal_sum: 124.31069768014233\n                        intrazonal_sum: 7.240958655572816\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: OB_HBEmp\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 131.55165633571514\n                            interzonal_sum: 124.31069768014233\n                            intrazonal_sum: 7.240958655572816\n                            Comments:\n                            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: OB_HBEmp\n                                level: 4\n                                zone_count: 168\n                                matrix_sum: 131.55165633571514\n                                interzonal_sum: 130.202037007712\n                                intrazonal_sum: 1.3496193280031366\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: OB_HBEmp\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 131.55165633571514\n                                    interzonal_sum: 130.202037007712\n                                    intrazonal_sum: 1.3496193280031366\n                                    Comments:\n                                    Created by furness_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 364.0\n                                        interzonal_sum: 360.77429216006425\n                                        intrazonal_sum: 3.225707839935766\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 168\n                                            matrix_sum: 364.0\n                                            interzonal_sum: 360.77429216006425\n                                            intrazonal_sum: 3.225707839935766\n                                            Comments:\n                                            Created by disaggregate_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: AM_peak_hr\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 364.0\n                                                interzonal_sum: 363.0\n                                                intrazonal_sum: 1.0\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: AM_peak_hr\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 364.0\n                                                    interzonal_sum: 363.0\n                                                    intrazonal_sum: 1.0\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Rail\n                                                        value_type: Person Trips\n                                                        time_period: AM_peak_hr\n                                                        purpose: OB_HBO\n                                                        level: 4\n                                                        zone_count: 120\n                                                        matrix_sum: 364.0\n                                                        interzonal_sum: 363.0\n                                                        intrazonal_sum: 1.0\n                                                        Comments:\n                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                                        MND Raw Data\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    Convergence Information:\n                                    1: count: 168, col_pass: 94, row_pass: 8\n                                    2: count: 168, col_pass: 95, row_pass: 4\n                                    3: count: 168, col_pass: 98, row_pass: 4\n                                    4: count: 168, col_pass: 124, row_pass: 6\n                                    5: count: 168, col_pass: 127, row_pass: 8\n                                    6: count: 168, col_pass: 135, row_pass: 32\n                                    7: count: 168, col_pass: 152, row_pass: 163\n                                    8: count: 168, col_pass: 153, row_pass: 168\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: NHBW\n                    level: 7\n                    zone_count: 168\n                    matrix_sum: 134.0\n                    interzonal_sum: 128.38856642074734\n                    intrazonal_sum: 5.611433579252669\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: NHBW\n                        level: 7\n                        zone_count: 168\n                        matrix_sum: 134.0\n                        interzonal_sum: 128.38856642074734\n                        intrazonal_sum: 5.611433579252669\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: NHBW\n                            level: 7\n                            zone_count: 168\n                            matrix_sum: 134.0\n                            interzonal_sum: 132.78111793124762\n                            intrazonal_sum: 1.2188820687523887\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: NHBW\n                                level: 7\n                                zone_count: 168\n                                matrix_sum: 134.0\n                                interzonal_sum: 132.78111793124762\n                                intrazonal_sum: 1.2188820687523887\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: NHBW\n                                    level: 5\n                                    zone_count: 168\n                                    matrix_sum: 134.0\n                                    interzonal_sum: 132.78111793124762\n                                    intrazonal_sum: 1.2188820687523887\n                                    Comments:\n                                    Created by disaggregate_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: NHBW\n                                        level: 5\n                                        zone_count: 120\n                                        matrix_sum: 134.0\n                                        interzonal_sum: 133.0\n                                        intrazonal_sum: 1.0\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: NHBW\n                                            level: 5\n                                            zone_count: 120\n                                            matrix_sum: 134.0\n                                            interzonal_sum: 133.0\n                                            intrazonal_sum: 1.0\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: AM_peak_hr\n                                                purpose: NHBW\n                                                level: 5\n                                                zone_count: 120\n                                                matrix_sum: 134.0\n                                                interzonal_sum: 133.0\n                                                intrazonal_sum: 1.0\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Rail.csv\n                                                MND Raw Data\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                1.0\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                ...\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: AM_peak_hr\n        purpose: Employers Business\n        level: 2\n        zone_count: 168\n        matrix_sum: 301.08161\n        interzonal_sum: 93.67778999999999\n        intrazonal_sum: 207.40382000000002\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: AM_peak_hr\n            purpose: Employers Business\n            level: 2\n            zone_count: 168\n            matrix_sum: 301.08161\n            interzonal_sum: 93.67778999999999\n            intrazonal_sum: 207.40382000000002\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: Employers Business\n                level: 2\n                zone_count: 168\n                matrix_sum: 463.68744000000004\n                interzonal_sum: 256.28362000000004\n                intrazonal_sum: 207.40382000000002\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: Employers Business\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 541.47749\n                    interzonal_sum: 300.60623\n                    intrazonal_sum: 240.87126000000004\n                    Comments:\n                    Created by operation <built-in function add> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: SynthRail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: Employers Business\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 120.32442\n                        interzonal_sum: 46.158199999999994\n                        intrazonal_sum: 74.16622000000001\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: HBEmp\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 120.32442\n                            interzonal_sum: 46.158199999999994\n                            intrazonal_sum: 74.16622000000001\n                            Comments:\n                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_AM_peak_hr.csv\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: HBEmp\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 120.32442\n                            interzonal_sum: 46.158199999999994\n                            intrazonal_sum: 74.16622000000001\n                            \n                        ]\n                        \n                    ]\n                    <built-in function add>\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: NHBW\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 421.15306999999996\n                        interzonal_sum: 254.44802999999996\n                        intrazonal_sum: 166.70504\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: NHBW\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 421.15306999999996\n                            interzonal_sum: 254.44802999999996\n                            intrazonal_sum: 166.70504\n                            Comments:\n                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_AM_peak_hr.csv\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: NHBW\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 421.15306999999996\n                            interzonal_sum: 254.44802999999996\n                            intrazonal_sum: 166.70504\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://3": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 3, "_purpose": "Other", "_time_period": "AM_peak_hr", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: AM_peak_hr\npurpose: Other\nlevel: 3\nzone_count: 168\nmatrix_sum: 45.6358662346231\ninterzonal_sum: 21.7953262346231\nintrazonal_sum: 23.84054\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: AM_peak_hr\n    purpose: Other\n    level: 3\n    zone_count: 168\n    matrix_sum: 0.1683462346231014\n    interzonal_sum: 0.1683462346231014\n    intrazonal_sum: 0.0\n    Comments:\n    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: AM_peak_hr\n        purpose: Other\n        level: 3\n        zone_count: 168\n        matrix_sum: 0.2523748692388979\n        interzonal_sum: 0.25025790439282286\n        intrazonal_sum: 0.002116964846075032\n        Comments:\n        Created by operation <built-in function mul> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: AM_peak_hr\n            purpose: Other\n            level: 3\n            zone_count: 168\n            matrix_sum: 434.754866774295\n            interzonal_sum: 431.7928253263425\n            intrazonal_sum: 2.962041447952487\n            Comments:\n            Created by operation <built-in function add> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: Other\n                level: 5\n                zone_count: 168\n                matrix_sum: 256.75486677429495\n                interzonal_sum: 254.06572402336178\n                intrazonal_sum: 2.6891427509331773\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: Other\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 24.358171000158364\n                    interzonal_sum: 24.26922298111352\n                    intrazonal_sum: 0.08894801904484556\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: IB_HBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 24.358171000158364\n                        interzonal_sum: 24.26922298111352\n                        intrazonal_sum: 0.08894801904484556\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: IB_HBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 24.35817100015836\n                            interzonal_sum: 24.200602314985456\n                            intrazonal_sum: 0.15756868517290293\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: IB_HBO\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 24.35817100015836\n                                interzonal_sum: 24.200602314985456\n                                intrazonal_sum: 0.15756868517290293\n                                Comments:\n                                Created by furness_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 39.0\n                                    interzonal_sum: 38.7742939551676\n                                    intrazonal_sum: 0.2257060448323995\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 39.0\n                                        interzonal_sum: 38.7742939551676\n                                        intrazonal_sum: 0.2257060448323995\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 120\n                                            matrix_sum: 39.0\n                                            interzonal_sum: 38.0\n                                            intrazonal_sum: 1.0\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: AM_peak_hr\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 39.0\n                                                interzonal_sum: 38.0\n                                                intrazonal_sum: 1.0\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: AM_peak_hr\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 39.0\n                                                    interzonal_sum: 38.0\n                                                    intrazonal_sum: 1.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    1.0\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                Convergence Information:\n                                1: count: 168, col_pass: 122, row_pass: 118\n                                2: count: 168, col_pass: 122, row_pass: 118\n                                3: count: 168, col_pass: 122, row_pass: 118\n                                4: count: 168, col_pass: 122, row_pass: 118\n                                5: count: 168, col_pass: 122, row_pass: 118\n                                6: count: 168, col_pass: 122, row_pass: 118\n                                7: count: 168, col_pass: 122, row_pass: 118\n                                8: count: 168, col_pass: 122, row_pass: 118\n                                9: count: 168, col_pass: 122, row_pass: 118\n                                10: count: 168, col_pass: 122, row_pass: 118\n                                11: count: 168, col_pass: 122, row_pass: 118\n                                12: count: 168, col_pass: 122, row_pass: 118\n                                13: count: 168, col_pass: 122, row_pass: 118\n                                14: count: 168, col_pass: 122, row_pass: 118\n                                15: count: 168, col_pass: 122, row_pass: 118\n                                16: count: 168, col_pass: 122, row_pass: 118\n                                17: count: 168, col_pass: 122, row_pass: 118\n                                18: count: 168, col_pass: 122, row_pass: 118\n                                19: count: 168, col_pass: 122, row_pass: 118\n                                20: count: 168, col_pass: 122, row_pass: 118\n                                21: count: 168, col_pass: 122, row_pass: 118\n                                22: count: 168, col_pass: 122, row_pass: 118\n                                23: count: 168, col_pass: 122, row_pass: 118\n                                24: count: 168, col_pass: 122, row_pass: 118\n                                25: count: 168, col_pass: 122, row_pass: 118\n                                26: count: 168, col_pass: 122, row_pass: 118\n                                27: count: 168, col_pass: 122, row_pass: 118\n                                28: count: 168, col_pass: 122, row_pass: 118\n                                29: count: 168, col_pass: 122, row_pass: 118\n                                30: count: 168, col_pass: 122, row_pass: 118\n                                31: count: 168, col_pass: 122, row_pass: 118\n                                32: count: 168, col_pass: 122, row_pass: 118\n                                33: count: 168, col_pass: 122, row_pass: 118\n                                34: count: 168, col_pass: 122, row_pass: 118\n                                35: count: 168, col_pass: 122, row_pass: 118\n                                36: count: 168, col_pass: 122, row_pass: 118\n                                37: count: 168, col_pass: 122, row_pass: 118\n                                38: count: 168, col_pass: 122, row_pass: 118\n                                39: count: 168, col_pass: 122, row_pass: 118\n                                40: count: 168, col_pass: 122, row_pass: 118\n                                41: count: 168, col_pass: 122, row_pass: 118\n                                42: count: 168, col_pass: 122, row_pass: 118\n                                43: count: 168, col_pass: 122, row_pass: 118\n                                44: count: 168, col_pass: 122, row_pass: 118\n                                45: count: 168, col_pass: 122, row_pass: 118\n                                46: count: 168, col_pass: 122, row_pass: 118\n                                47: count: 168, col_pass: 122, row_pass: 118\n                                48: count: 168, col_pass: 122, row_pass: 118\n                                49: count: 168, col_pass: 122, row_pass: 118\n                                50: count: 168, col_pass: 122, row_pass: 118\n                                51: count: 168, col_pass: 122, row_pass: 118\n                                52: count: 168, col_pass: 122, row_pass: 118\n                                53: count: 168, col_pass: 122, row_pass: 118\n                                54: count: 168, col_pass: 122, row_pass: 118\n                                55: count: 168, col_pass: 122, row_pass: 118\n                                56: count: 168, col_pass: 122, row_pass: 118\n                                57: count: 168, col_pass: 122, row_pass: 118\n                                58: count: 168, col_pass: 122, row_pass: 118\n                                59: count: 168, col_pass: 122, row_pass: 118\n                                60: count: 168, col_pass: 122, row_pass: 118\n                                61: count: 168, col_pass: 122, row_pass: 118\n                                62: count: 168, col_pass: 122, row_pass: 118\n                                63: count: 168, col_pass: 122, row_pass: 118\n                                64: count: 168, col_pass: 122, row_pass: 118\n                                65: count: 168, col_pass: 122, row_pass: 118\n                                66: count: 168, col_pass: 122, row_pass: 118\n                                67: count: 168, col_pass: 122, row_pass: 118\n                                68: count: 168, col_pass: 122, row_pass: 118\n                                69: count: 168, col_pass: 122, row_pass: 118\n                                70: count: 168, col_pass: 122, row_pass: 118\n                                71: count: 168, col_pass: 122, row_pass: 118\n                                72: count: 168, col_pass: 122, row_pass: 118\n                                73: count: 168, col_pass: 122, row_pass: 118\n                                74: count: 168, col_pass: 122, row_pass: 118\n                                75: count: 168, col_pass: 122, row_pass: 118\n                                76: count: 168, col_pass: 122, row_pass: 118\n                                77: count: 168, col_pass: 122, row_pass: 118\n                                78: count: 168, col_pass: 122, row_pass: 118\n                                79: count: 168, col_pass: 122, row_pass: 118\n                                80: count: 168, col_pass: 122, row_pass: 118\n                                81: count: 168, col_pass: 122, row_pass: 118\n                                82: count: 168, col_pass: 122, row_pass: 118\n                                83: count: 168, col_pass: 122, row_pass: 118\n                                84: count: 168, col_pass: 122, row_pass: 118\n                                85: count: 168, col_pass: 122, row_pass: 118\n                                86: count: 168, col_pass: 122, row_pass: 118\n                                87: count: 168, col_pass: 122, row_pass: 118\n                                88: count: 168, col_pass: 122, row_pass: 118\n                                89: count: 168, col_pass: 122, row_pass: 118\n                                90: count: 168, col_pass: 122, row_pass: 118\n                                91: count: 168, col_pass: 122, row_pass: 118\n                                92: count: 168, col_pass: 122, row_pass: 118\n                                93: count: 168, col_pass: 122, row_pass: 118\n                                94: count: 168, col_pass: 122, row_pass: 118\n                                95: count: 168, col_pass: 122, row_pass: 118\n                                96: count: 168, col_pass: 122, row_pass: 118\n                                97: count: 168, col_pass: 122, row_pass: 118\n                                98: count: 168, col_pass: 122, row_pass: 118\n                                99: count: 168, col_pass: 122, row_pass: 118\n                                100: count: 168, col_pass: 122, row_pass: 118\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: OB_HBO\n                    level: 6\n                    zone_count: 168\n                    matrix_sum: 232.39669577413662\n                    interzonal_sum: 229.79650104224828\n                    intrazonal_sum: 2.6001947318883314\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: OB_HBO\n                        level: 6\n                        zone_count: 168\n                        matrix_sum: 232.39669577413662\n                        interzonal_sum: 229.79650104224828\n                        intrazonal_sum: 2.6001947318883314\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: OB_HBO\n                            level: 6\n                            zone_count: 168\n                            matrix_sum: 232.3966957741366\n                            interzonal_sum: 230.87156062143575\n                            intrazonal_sum: 1.525135152700829\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: OB_HBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 232.3966957741366\n                                interzonal_sum: 230.87156062143575\n                                intrazonal_sum: 1.525135152700829\n                                Comments:\n                                Created by furness_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 364.0\n                                    interzonal_sum: 360.77429216006425\n                                    intrazonal_sum: 3.225707839935766\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 364.0\n                                        interzonal_sum: 360.77429216006425\n                                        intrazonal_sum: 3.225707839935766\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 120\n                                            matrix_sum: 364.0\n                                            interzonal_sum: 363.0\n                                            intrazonal_sum: 1.0\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: AM_peak_hr\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 364.0\n                                                interzonal_sum: 363.0\n                                                intrazonal_sum: 1.0\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: AM_peak_hr\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 364.0\n                                                    interzonal_sum: 363.0\n                                                    intrazonal_sum: 1.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    1.0\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                Convergence Information:\n                                1: count: 168, col_pass: 93, row_pass: 7\n                                2: count: 168, col_pass: 96, row_pass: 8\n                                3: count: 168, col_pass: 93, row_pass: 9\n                                4: count: 168, col_pass: 94, row_pass: 29\n                                5: count: 168, col_pass: 98, row_pass: 51\n                                6: count: 168, col_pass: 121, row_pass: 163\n                                7: count: 168, col_pass: 121, row_pass: 163\n                                8: count: 168, col_pass: 151, row_pass: 167\n                                9: count: 168, col_pass: 153, row_pass: 168\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function add>\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: NHBO\n                level: 8\n                zone_count: 168\n                matrix_sum: 178.0\n                interzonal_sum: 177.72710130298069\n                intrazonal_sum: 0.27289869701930974\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: NHBO\n                    level: 8\n                    zone_count: 168\n                    matrix_sum: 178.0\n                    interzonal_sum: 177.72710130298069\n                    intrazonal_sum: 0.27289869701930974\n                    Comments:\n                    Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: NHBO\n                        level: 8\n                        zone_count: 168\n                        matrix_sum: 177.99999999999997\n                        interzonal_sum: 177.78111762245277\n                        intrazonal_sum: 0.21888237754720338\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: NHBO\n                            level: 8\n                            zone_count: 168\n                            matrix_sum: 177.99999999999997\n                            interzonal_sum: 177.78111762245277\n                            intrazonal_sum: 0.21888237754720338\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: NHBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 177.99999999999997\n                                interzonal_sum: 177.78111762245277\n                                intrazonal_sum: 0.21888237754720338\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: NHBO\n                                    level: 6\n                                    zone_count: 120\n                                    matrix_sum: 178.0\n                                    interzonal_sum: 177.0\n                                    intrazonal_sum: 1.0\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: NHBO\n                                        level: 6\n                                        zone_count: 120\n                                        matrix_sum: 178.0\n                                        interzonal_sum: 177.0\n                                        intrazonal_sum: 1.0\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: NHBO\n                                            level: 6\n                                            zone_count: 120\n                                            matrix_sum: 178.0\n                                            interzonal_sum: 177.0\n                                            intrazonal_sum: 1.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Rail.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            1.0\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        <built-in function mul>\n        [\n            [[ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            ...\n            [False False False ... False False False]\n            [False False False ... False False False]\n            [False False False ... False False False]]\n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: SynthRail\n    value_type: Person Trips\n    time_period: AM_peak_hr\n    purpose: Other\n    level: 3\n    zone_count: 168\n    matrix_sum: 45.46752\n    interzonal_sum: 21.62698\n    intrazonal_sum: 23.84054\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: AM_peak_hr\n        purpose: Other\n        level: 3\n        zone_count: 168\n        matrix_sum: 45.46752\n        interzonal_sum: 21.62698\n        intrazonal_sum: 23.84054\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: AM_peak_hr\n            purpose: Other\n            level: 3\n            zone_count: 168\n            matrix_sum: 84.32532\n            interzonal_sum: 60.48478\n            intrazonal_sum: 23.84054\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: Other\n                level: 3\n                zone_count: 168\n                matrix_sum: 842.3061399999999\n                interzonal_sum: 508.8960599999999\n                intrazonal_sum: 333.41008\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: Other\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 421.15306999999996\n                    interzonal_sum: 254.44802999999996\n                    intrazonal_sum: 166.70504\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 421.15306999999996\n                        interzonal_sum: 254.44802999999996\n                        intrazonal_sum: 166.70504\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_AM_peak_hr.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 421.15306999999996\n                        interzonal_sum: 254.44802999999996\n                        intrazonal_sum: 166.70504\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: NHBO\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 421.15306999999996\n                    interzonal_sum: 254.44802999999996\n                    intrazonal_sum: 166.70504\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: NHBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 421.15306999999996\n                        interzonal_sum: 254.44802999999996\n                        intrazonal_sum: 166.70504\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_AM_peak_hr.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: NHBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 421.15306999999996\n                        interzonal_sum: 254.44802999999996\n                        intrazonal_sum: 166.70504\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: AM_peak_hr\npurpose: Other\nlevel: 3\nzone_count: 168\nmatrix_sum: 887.9823962978235\ninterzonal_sum: 578.4128562978235\nintrazonal_sum: 309.56954\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: AM_peak_hr\n    purpose: Other\n    level: 3\n    zone_count: 168\n    matrix_sum: 887.9823962978235\n    interzonal_sum: 578.4128562978235\n    intrazonal_sum: 309.56954\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: AM_peak_hr\n        purpose: Other\n        level: 3\n        zone_count: 168\n        matrix_sum: 423.3553562978234\n        interzonal_sum: 423.3553562978234\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: AM_peak_hr\n            purpose: Other\n            level: 3\n            zone_count: 168\n            matrix_sum: 434.5024919050561\n            interzonal_sum: 431.5425674219497\n            intrazonal_sum: 2.9599244831064118\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: Other\n                level: 3\n                zone_count: 168\n                matrix_sum: 434.754866774295\n                interzonal_sum: 431.7928253263425\n                intrazonal_sum: 2.962041447952487\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: Other\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 256.75486677429495\n                    interzonal_sum: 254.06572402336178\n                    intrazonal_sum: 2.6891427509331773\n                    Comments:\n                    Created by operation <built-in function add> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: Other\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 24.358171000158364\n                        interzonal_sum: 24.26922298111352\n                        intrazonal_sum: 0.08894801904484556\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: IB_HBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 24.358171000158364\n                            interzonal_sum: 24.26922298111352\n                            intrazonal_sum: 0.08894801904484556\n                            Comments:\n                            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: IB_HBO\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 24.35817100015836\n                                interzonal_sum: 24.200602314985456\n                                intrazonal_sum: 0.15756868517290293\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: IB_HBO\n                                    level: 5\n                                    zone_count: 168\n                                    matrix_sum: 24.35817100015836\n                                    interzonal_sum: 24.200602314985456\n                                    intrazonal_sum: 0.15756868517290293\n                                    Comments:\n                                    Created by furness_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 39.0\n                                        interzonal_sum: 38.7742939551676\n                                        intrazonal_sum: 0.2257060448323995\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 39.0\n                                            interzonal_sum: 38.7742939551676\n                                            intrazonal_sum: 0.2257060448323995\n                                            Comments:\n                                            Created by disaggregate_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: AM_peak_hr\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 39.0\n                                                interzonal_sum: 38.0\n                                                intrazonal_sum: 1.0\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: AM_peak_hr\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 39.0\n                                                    interzonal_sum: 38.0\n                                                    intrazonal_sum: 1.0\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Rail\n                                                        value_type: Person Trips\n                                                        time_period: AM_peak_hr\n                                                        purpose: IB_HBO\n                                                        level: 3\n                                                        zone_count: 120\n                                                        matrix_sum: 39.0\n                                                        interzonal_sum: 38.0\n                                                        intrazonal_sum: 1.0\n                                                        Comments:\n                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                                        MND Raw Data\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    Convergence Information:\n                                    1: count: 168, col_pass: 122, row_pass: 118\n                                    2: count: 168, col_pass: 122, row_pass: 118\n                                    3: count: 168, col_pass: 122, row_pass: 118\n                                    4: count: 168, col_pass: 122, row_pass: 118\n                                    5: count: 168, col_pass: 122, row_pass: 118\n                                    6: count: 168, col_pass: 122, row_pass: 118\n                                    7: count: 168, col_pass: 122, row_pass: 118\n                                    8: count: 168, col_pass: 122, row_pass: 118\n                                    9: count: 168, col_pass: 122, row_pass: 118\n                                    10: count: 168, col_pass: 122, row_pass: 118\n                                    11: count: 168, col_pass: 122, row_pass: 118\n                                    12: count: 168, col_pass: 122, row_pass: 118\n                                    13: count: 168, col_pass: 122, row_pass: 118\n                                    14: count: 168, col_pass: 122, row_pass: 118\n                                    15: count: 168, col_pass: 122, row_pass: 118\n                                    16: count: 168, col_pass: 122, row_pass: 118\n                                    17: count: 168, col_pass: 122, row_pass: 118\n                                    18: count: 168, col_pass: 122, row_pass: 118\n                                    19: count: 168, col_pass: 122, row_pass: 118\n                                    20: count: 168, col_pass: 122, row_pass: 118\n                                    21: count: 168, col_pass: 122, row_pass: 118\n                                    22: count: 168, col_pass: 122, row_pass: 118\n                                    23: count: 168, col_pass: 122, row_pass: 118\n                                    24: count: 168, col_pass: 122, row_pass: 118\n                                    25: count: 168, col_pass: 122, row_pass: 118\n                                    26: count: 168, col_pass: 122, row_pass: 118\n                                    27: count: 168, col_pass: 122, row_pass: 118\n                                    28: count: 168, col_pass: 122, row_pass: 118\n                                    29: count: 168, col_pass: 122, row_pass: 118\n                                    30: count: 168, col_pass: 122, row_pass: 118\n                                    31: count: 168, col_pass: 122, row_pass: 118\n                                    32: count: 168, col_pass: 122, row_pass: 118\n                                    33: count: 168, col_pass: 122, row_pass: 118\n                                    34: count: 168, col_pass: 122, row_pass: 118\n                                    35: count: 168, col_pass: 122, row_pass: 118\n                                    36: count: 168, col_pass: 122, row_pass: 118\n                                    37: count: 168, col_pass: 122, row_pass: 118\n                                    38: count: 168, col_pass: 122, row_pass: 118\n                                    39: count: 168, col_pass: 122, row_pass: 118\n                                    40: count: 168, col_pass: 122, row_pass: 118\n                                    41: count: 168, col_pass: 122, row_pass: 118\n                                    42: count: 168, col_pass: 122, row_pass: 118\n                                    43: count: 168, col_pass: 122, row_pass: 118\n                                    44: count: 168, col_pass: 122, row_pass: 118\n                                    45: count: 168, col_pass: 122, row_pass: 118\n                                    46: count: 168, col_pass: 122, row_pass: 118\n                                    47: count: 168, col_pass: 122, row_pass: 118\n                                    48: count: 168, col_pass: 122, row_pass: 118\n                                    49: count: 168, col_pass: 122, row_pass: 118\n                                    50: count: 168, col_pass: 122, row_pass: 118\n                                    51: count: 168, col_pass: 122, row_pass: 118\n                                    52: count: 168, col_pass: 122, row_pass: 118\n                                    53: count: 168, col_pass: 122, row_pass: 118\n                                    54: count: 168, col_pass: 122, row_pass: 118\n                                    55: count: 168, col_pass: 122, row_pass: 118\n                                    56: count: 168, col_pass: 122, row_pass: 118\n                                    57: count: 168, col_pass: 122, row_pass: 118\n                                    58: count: 168, col_pass: 122, row_pass: 118\n                                    59: count: 168, col_pass: 122, row_pass: 118\n                                    60: count: 168, col_pass: 122, row_pass: 118\n                                    61: count: 168, col_pass: 122, row_pass: 118\n                                    62: count: 168, col_pass: 122, row_pass: 118\n                                    63: count: 168, col_pass: 122, row_pass: 118\n                                    64: count: 168, col_pass: 122, row_pass: 118\n                                    65: count: 168, col_pass: 122, row_pass: 118\n                                    66: count: 168, col_pass: 122, row_pass: 118\n                                    67: count: 168, col_pass: 122, row_pass: 118\n                                    68: count: 168, col_pass: 122, row_pass: 118\n                                    69: count: 168, col_pass: 122, row_pass: 118\n                                    70: count: 168, col_pass: 122, row_pass: 118\n                                    71: count: 168, col_pass: 122, row_pass: 118\n                                    72: count: 168, col_pass: 122, row_pass: 118\n                                    73: count: 168, col_pass: 122, row_pass: 118\n                                    74: count: 168, col_pass: 122, row_pass: 118\n                                    75: count: 168, col_pass: 122, row_pass: 118\n                                    76: count: 168, col_pass: 122, row_pass: 118\n                                    77: count: 168, col_pass: 122, row_pass: 118\n                                    78: count: 168, col_pass: 122, row_pass: 118\n                                    79: count: 168, col_pass: 122, row_pass: 118\n                                    80: count: 168, col_pass: 122, row_pass: 118\n                                    81: count: 168, col_pass: 122, row_pass: 118\n                                    82: count: 168, col_pass: 122, row_pass: 118\n                                    83: count: 168, col_pass: 122, row_pass: 118\n                                    84: count: 168, col_pass: 122, row_pass: 118\n                                    85: count: 168, col_pass: 122, row_pass: 118\n                                    86: count: 168, col_pass: 122, row_pass: 118\n                                    87: count: 168, col_pass: 122, row_pass: 118\n                                    88: count: 168, col_pass: 122, row_pass: 118\n                                    89: count: 168, col_pass: 122, row_pass: 118\n                                    90: count: 168, col_pass: 122, row_pass: 118\n                                    91: count: 168, col_pass: 122, row_pass: 118\n                                    92: count: 168, col_pass: 122, row_pass: 118\n                                    93: count: 168, col_pass: 122, row_pass: 118\n                                    94: count: 168, col_pass: 122, row_pass: 118\n                                    95: count: 168, col_pass: 122, row_pass: 118\n                                    96: count: 168, col_pass: 122, row_pass: 118\n                                    97: count: 168, col_pass: 122, row_pass: 118\n                                    98: count: 168, col_pass: 122, row_pass: 118\n                                    99: count: 168, col_pass: 122, row_pass: 118\n                                    100: count: 168, col_pass: 122, row_pass: 118\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    <built-in function add>\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: OB_HBO\n                        level: 6\n                        zone_count: 168\n                        matrix_sum: 232.39669577413662\n                        interzonal_sum: 229.79650104224828\n                        intrazonal_sum: 2.6001947318883314\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: OB_HBO\n                            level: 6\n                            zone_count: 168\n                            matrix_sum: 232.39669577413662\n                            interzonal_sum: 229.79650104224828\n                            intrazonal_sum: 2.6001947318883314\n                            Comments:\n                            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: OB_HBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 232.3966957741366\n                                interzonal_sum: 230.87156062143575\n                                intrazonal_sum: 1.525135152700829\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: OB_HBO\n                                    level: 6\n                                    zone_count: 168\n                                    matrix_sum: 232.3966957741366\n                                    interzonal_sum: 230.87156062143575\n                                    intrazonal_sum: 1.525135152700829\n                                    Comments:\n                                    Created by furness_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 364.0\n                                        interzonal_sum: 360.77429216006425\n                                        intrazonal_sum: 3.225707839935766\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 168\n                                            matrix_sum: 364.0\n                                            interzonal_sum: 360.77429216006425\n                                            intrazonal_sum: 3.225707839935766\n                                            Comments:\n                                            Created by disaggregate_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: AM_peak_hr\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 364.0\n                                                interzonal_sum: 363.0\n                                                intrazonal_sum: 1.0\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: AM_peak_hr\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 364.0\n                                                    interzonal_sum: 363.0\n                                                    intrazonal_sum: 1.0\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Rail\n                                                        value_type: Person Trips\n                                                        time_period: AM_peak_hr\n                                                        purpose: OB_HBO\n                                                        level: 4\n                                                        zone_count: 120\n                                                        matrix_sum: 364.0\n                                                        interzonal_sum: 363.0\n                                                        intrazonal_sum: 1.0\n                                                        Comments:\n                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                                        MND Raw Data\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    Convergence Information:\n                                    1: count: 168, col_pass: 93, row_pass: 7\n                                    2: count: 168, col_pass: 96, row_pass: 8\n                                    3: count: 168, col_pass: 93, row_pass: 9\n                                    4: count: 168, col_pass: 94, row_pass: 29\n                                    5: count: 168, col_pass: 98, row_pass: 51\n                                    6: count: 168, col_pass: 121, row_pass: 163\n                                    7: count: 168, col_pass: 121, row_pass: 163\n                                    8: count: 168, col_pass: 151, row_pass: 167\n                                    9: count: 168, col_pass: 153, row_pass: 168\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: NHBO\n                    level: 8\n                    zone_count: 168\n                    matrix_sum: 178.0\n                    interzonal_sum: 177.72710130298069\n                    intrazonal_sum: 0.27289869701930974\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: NHBO\n                        level: 8\n                        zone_count: 168\n                        matrix_sum: 178.0\n                        interzonal_sum: 177.72710130298069\n                        intrazonal_sum: 0.27289869701930974\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: NHBO\n                            level: 8\n                            zone_count: 168\n                            matrix_sum: 177.99999999999997\n                            interzonal_sum: 177.78111762245277\n                            intrazonal_sum: 0.21888237754720338\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: AM_peak_hr\n                                purpose: NHBO\n                                level: 8\n                                zone_count: 168\n                                matrix_sum: 177.99999999999997\n                                interzonal_sum: 177.78111762245277\n                                intrazonal_sum: 0.21888237754720338\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: AM_peak_hr\n                                    purpose: NHBO\n                                    level: 6\n                                    zone_count: 168\n                                    matrix_sum: 177.99999999999997\n                                    interzonal_sum: 177.78111762245277\n                                    intrazonal_sum: 0.21888237754720338\n                                    Comments:\n                                    Created by disaggregate_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: AM_peak_hr\n                                        purpose: NHBO\n                                        level: 6\n                                        zone_count: 120\n                                        matrix_sum: 178.0\n                                        interzonal_sum: 177.0\n                                        intrazonal_sum: 1.0\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: AM_peak_hr\n                                            purpose: NHBO\n                                            level: 6\n                                            zone_count: 120\n                                            matrix_sum: 178.0\n                                            interzonal_sum: 177.0\n                                            intrazonal_sum: 1.0\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: AM_peak_hr\n                                                purpose: NHBO\n                                                level: 6\n                                                zone_count: 120\n                                                matrix_sum: 178.0\n                                                interzonal_sum: 177.0\n                                                intrazonal_sum: 1.0\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Rail.csv\n                                                MND Raw Data\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                1.0\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                ...\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: AM_peak_hr\n        purpose: Other\n        level: 3\n        zone_count: 168\n        matrix_sum: 464.62703999999997\n        interzonal_sum: 155.05749999999995\n        intrazonal_sum: 309.56954\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: AM_peak_hr\n            purpose: Other\n            level: 3\n            zone_count: 168\n            matrix_sum: 464.62703999999997\n            interzonal_sum: 155.05749999999995\n            intrazonal_sum: 309.56954\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: AM_peak_hr\n                purpose: Other\n                level: 3\n                zone_count: 168\n                matrix_sum: 757.98082\n                interzonal_sum: 448.41128\n                intrazonal_sum: 309.56954\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: AM_peak_hr\n                    purpose: Other\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 842.3061399999999\n                    interzonal_sum: 508.8960599999999\n                    intrazonal_sum: 333.41008\n                    Comments:\n                    Created by operation <built-in function add> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: SynthRail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: Other\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 421.15306999999996\n                        interzonal_sum: 254.44802999999996\n                        intrazonal_sum: 166.70504\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 421.15306999999996\n                            interzonal_sum: 254.44802999999996\n                            intrazonal_sum: 166.70504\n                            Comments:\n                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_AM_peak_hr.csv\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 421.15306999999996\n                            interzonal_sum: 254.44802999999996\n                            intrazonal_sum: 166.70504\n                            \n                        ]\n                        \n                    ]\n                    <built-in function add>\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: AM_peak_hr\n                        purpose: NHBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 421.15306999999996\n                        interzonal_sum: 254.44802999999996\n                        intrazonal_sum: 166.70504\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: NHBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 421.15306999999996\n                            interzonal_sum: 254.44802999999996\n                            intrazonal_sum: 166.70504\n                            Comments:\n                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_AM_peak_hr.csv\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: AM_peak_hr\n                            purpose: NHBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 421.15306999999996\n                            interzonal_sum: 254.44802999999996\n                            intrazonal_sum: 166.70504\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}}}