{"py/object": "matrix_class_v2.MatrixStack", "_name": "Output", "_vehicle_type": "Highway", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {}, "_zones": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJy9W0uP28gRvi+w/0G3vfDQVf2o7muAZBEkyCEPBDkZyoy8FnYsBZIcr/PrU1USu0kNRTbJ1WIAe8bW9Mfqrv7qqwf3h9fdL83nw+uH/x0Pu+aXDy/H4+m1+Xb7e3vabT+cdh+b8+7lcjw1n8/HbfO6P19O+5dL84/Tv7eHzcv+8m2zPbxuLsevh+avX07bt81/929v2592t58+bT+/7S5n/dD+fHzbXnavm9evu7e3/eGn8+1D8tv6iY8n/tddf6HNnv9vc/7P9nTebc67y4U/UrX4yC/eAQ5+8otYeJKPNy+8H8fDh/3hsDu1Pxy/XPiHPx74z8P27fvvTAPGp8YHIG8aCyk42/zeoDGe/63xzZ940R/Omz9/O1yh/7k7XzZ/OZ4+Ht9+3hiA5nen4/b1Tf6rgcZ0vvRJmv3hvH/dtX/9/fRl9/13kEFDYlA0DuNiUKwExRYUjU0CimCebqkt25ucgqbloKb3dT3jIVCXLUX0ur1u+fbWWuozqIuklkZ4OmjIoNao90ZY7r2120vF0mD1yuByS12lpVFASUH5MBkUXWpB5WEmQE1asr2pXJlAAuqMf7qlUCgpeS+oZJe7r61FLZxEpP5rAJ9PhB1SutJv8s93YLDZmSKhEkSipzsTuIxKxipDOL8YtZb1wWfUZPS2elxua7U3ZWKCmNSHgc2fda78/df9y6cZ+0sdTGDMCDTz3mTMak+KGdMbxXR+OUNUW5p5yZBXMhTwp+uHwkuQNKxCeL5UwsxLxke2FQFDeD6q8pKXWwNGxVLE7L9ym6ZuDS1CtRnVsngQ1ECLUWvjDbqMSlF5KfnlqNXe5DOqwSCoAZejVu9wKDtsNMoFk56PShnVg6hgcGE5avW5xhaVtaGi2hifj5oKqp4rJLsctTrNUG5yghr1vrJoKrE1TKOGLmqsRYWM6p14E3iAxai1sdVii+o8KCMm5xajplpU26J6G9Sb+ICfb6vLqCGJN6GhmbbO1hE2Kybr9N4wH8Z5imk+pvJSlDPFoIo0FUUazHSUMwWTajGpxfRoNZ5TwnmYS25qLJayJ4vihzQXdffy8w3V1MKmfKj+mimnjiPNlcG1BOGKZFL3ZXk4V5IuCK2upHIxOkH1cab4XnCwLqdyzL1qa/wN6ksuF5gQnQpwVuLPRy0VppsUNvAbnGshpuCUmGKaSUxLbC3URBpuDPPiYpqotrVTZLLXcgQtP9c+S4wUDjvpnCQbfGt/5SLe8ctlADbnc9ZeK2pgZxtbOLFyi30mJ0wsR/nqkF9e8andYp/JCUmrW9GtqB5Wo5Y6E2evjEoUZto6uzbghZoYhS+O0UjnQywx3U1jugWYOZfjFEOIidNl+3T17XMuB2Sviqnsbh3qfEtD3l0A9SNDMG93l/gRtajWRglyAWOai5pvqunt8Agq01LjERMzIetuJmD+uG2mDGi5pv37D9u3s6wmkcKr/mqQHCBdVysC0jTMSFIWQKxZMAiRMF1qu4UvF3/vcokm8X8WEX7nYDVPfWt0yB3lJMtHvknG2/R+C4YymUdPLHQgx+VNBI4uvKNU6GA6rYDQPcahZOaBFbbFRcvPgImYjubidnZPHA5qdk8+yJuWnICGZNO73WN06ETn8e3zehjsHpGXA0M04I+yGlQ5pBrOywF/g9E779a4d9ArqmSEoleYe0PRodNkBD0PtUN1jwebLOKBL44ng8Tx1EGIhXunY4wZjGx8Cxt+pNHTVfnAm8juLCEVbSxNFFFuU8CxDxz4yw5udb8NqPpBuDBRYnvlWpaKwDQXmgEGBho94huwSgje0EDSebSWPJXSoZ0Gto9ci/1lFBiFh1k6cOoodWgf1zgq2UacxSKrTqQQjX+3mmQ3chrBVy2ot9wIDTN785Jh1ePpJWcz0cjjMWWtWk3CNbCzRL4VIMxnSvOAo2LqEKp8rqdC+BZPUcntgOTuc5DkVCUakVzMBDkSMelR8+Npt71s/rU9febflHiEy+IRxfbORUm9tGCDK+6celbFndPYbUOQQ0lp0GfUjWMu2I4yeZQ7zAchBIWS8DjZvpYs/TRZ+r6e8WzIuGa4dfOv4TwiSQRhvhyi/KvDVThXxFaVea2esQAple4FqsxXOkHMCj+AzHywNEszFf5dOIcHuP1RCBH5knlzfCFtrqIpGTlOw+J736uBvUZ9D/aq8fA9vYR0O7Ya1ws3LeRikAzfUESzWAt1j2w8TEdSM9BJzRNsgPfihbmGOg2Pcd8TIhBZERIwEWBCifWtGdNFGUh3sok1UK4vjjqfRn32gojRWgm/oTCqn/aCe+YD9QKnxzeGm5QyQLQzeKkuku1UF6ejL9xFX//Q++5wISd8RFLBZZq1Ky5bXeqV8CZyiF1eRvU8dVo8lSKnQy2uky2MWqt1TSvUEiW95XhexnH8NDEbP2Xt4B1ProWFKPEA2auXww51IoZhfc6LkPNO1uxyLZfnRRwDqsJQCq25eG27WFbti82tniqjFtUlrW1a3ufFqLWttBRbVH+tHmPotEifhpqyrRi1gUdhua31I3Qmwyo5srF2ubHVs1acwklAcyZE7VWqbsfmPso7YfmK2ALM0bJe0tk4lMRuYD2JXlClk1gbCzqKZm1sMN4Pr1ep6TnbleUsL8fPYFnGD5k7Yzkvy4XABsvTCWOvWi7IckzSvDmWj4RWLke6XJIGtDUuQlq3nCh0jmQy+Y0s5ADXLZfEU9CDVvJBqq5rlgN1Uz4DCQImiuRbtZzeC4OeFZ4lJ359W64TGmcsp9eCxRsIZ3up79w/HXMs/6s1kg5VLZmlPJ+t18Iu+pXqol+ZGx66dS0sRHkTAFzqiKllVezhguAd7k3LRyYqljRDWn7WgWgFD6IMGMnYjzXrlstVdudQ/Dl4mr0ro541fBhR3YoZQ73U+fduNcsKvZIWdQDWWVrp9KhXMrEOlXjGe+LWLQe39IES7y7Td7KdAsaS9EF9z6v2GtNccJ2tlPJdDDJfw9AU5pbvepL6ht2MV+9Axyslb+azJa3ZCKnPzJs7wLzcRH2iBc4Je4J2Om0NMD085bvhep/rIiQ7zT5kZ5NaBxcnvasFDu1OG2k5MK1R8CsMxg70ODDdgCM4HfMJaeUR11oc20IaI1/rI2l2Ia1HM3VZMei85RWYzLWiEddU8B4Xg+6AdeTyGjHdtQ7gVjhX9ei7bcsABCQVHJMI13Rg5YTHq+stMDZSWLZRmrBRhpzaGLeIf2WeUgeCA7D+82ZdeR1kUJIVTwq8PxzQmeHWLefL0I+ocRnpKoc7ezawDz12ukocqfEc50R6chpQXvMitlA6yZdPj8NQ4o+AUKyA8kUcP1JhC7JNYN+VtxOtlnFbND+AFuZuaIsk9MCcHzBd34NMNub9pPQeqb+Bc5CED6Jpgo3XIIc25ZJGxAGkh92wCSQdbmQZEVCyIR2pLFPtqDlpWXiw21cHIxeesyWfQtDKc2JyzZ0j0+8c9dsqIm6DdEMg9lzvEZI4jZEeVdDXcoG8zxVpfv7YQ7ovokOTbppgyiCRIeyjwZDR8g9AKXyLLOvv2z0OW8N3vabrDzqmyPGPYxKnFxKUqFA0C5G+Qe8mM0BmQGpgmCykFsCOQCwlMUEJQWykPOzftNs2Y4jrEZTwA3NdYDkt76oYF4p2FPLoetldK38OjBADCKGiEDMml0rVF+xdt7JnTLJCO3zGoQ5JiEGyseiBZPzBdl754efvI70TCbX2pLZmz7mV0LmhztDd3Jq9a6jTbxkF9m1/MRhN1vlJyrsKC2TRYwV699IjtLisAKUz13trbJkcGy/ZtcDaigwaOKUUw97R2enpvjD0CMwKc1VKX59ni4KUkzkNxzB7pqmX0NV1KkC7INJQ43QDvZq9RnroMKHmDoFk2AtkJ1d0Nx93Pu7tyBOFVspB2hv8dRtMD3y1zBQafZvTS2hdV+3o8/bwe8Gx6HedlWAqXSOkuznLGGyS3kyInjHJW5G/8ntLvUWKfI1jv5fJiJDEVVYtJ15vvb434QKnkyuXk2KIdMxZuDiO7SauW066WkiJnIzkAGkXYXmBKkiz10aN1pzRxJVF3qC1H0hORglRBnLXLScDiV7CBjuqd3ZliZKjatCasSSQlIILek0WLvd/pZs0hQ==", "txt": false, "meta": {"dtypes": {"index": "int64", "mnd_zone": "int64", "x_coord": "int64", "y_coord": "int64", "area_ref": "object", "sector": "int64", "msoa": "object", "district": "object", "Urban city and town": "int64", "Rural village": "int64", "Rural hamlets and isolated dwellings": "int64", "Rural town and fringe": "int64", "Rural village in a sparse setting": "int64", "Rural hamlets and isolated dwellings in a sparse setting": "int64", "Rural town and fringe in a sparse setting": "int64", "urbanrural": "object", "cordon_inner": "object", "cordon_outer": "object", "Internal": "bool"}, "index": "{\"py/object\": \"pandas.core.indexes.numeric.Int64Index\", \"comp\": true, \"values\": \"eJwtk8FtRSEQA1tJATnYsMCnlij9txE8m4ulp7VXMPj9LPn7a2lEKrIiO3KfOFNn6hmJxbE4Fp9IfEORmEd8I74R34hvxDc+T2YsM/tmfDO+Gd+Mb8Y38WVpZWklUUlUEpVEJVFJVBKVxIpvx7cz2BmcLDgZnAzOW7Bz3537bvFZkRXZkRP5RN4JtrNAjagZJfQUVM2qYSX49IPm8OosAAVBgVAwFBAFRYFRJgtNgVOjn4YsWAVXAVaQFWgFWw2ykyygBWmBWrAWsAVtgVvwFsAFcYFc1Z0gC3BBXCAXzFWkFikeQIvUIrW6UGQX2d3tYsNmw2YDD2W1UjloG9qGtqFtaBvahrb/e0q269p97Zp2T7uoEDaEDWGPrjd+2Bq2hq1ha9gatoatYevZfwUnhK1ha9gatoatYWvYGraGrcP20q5Luy7turTr0q5Luy7turTr6f39AzjkrWM=\", \"txt\": false, \"meta\": {\"dtype\": \"int64\", \"name\": \"reference\"}}", "column_level_names": [null], "header": [0]}}, "_source_file": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["C:\\", "Users", "UKTMB001", "Documents", "Python Scripts", "MND", "ZoningTemplate_Model_v2.xlsx"]}]}, "_source_sheet": "zones"}, "_time_period": "Inter_peak", "_value_type": "Vehicle Trips", "_levels": {"json://1": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {}, "_zones": {"py/id": 3}, "_source_file": {"py/id": 5}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 1, "_purpose": "HBW", "_time_period": "Inter_peak", "_vehicle_type": "Highway", "_value_type": "Vehicle Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Highway\nvalue_type: Vehicle Trips\ntime_period: Inter_peak\npurpose: HBW\nlevel: 1\nzone_count: 168\nmatrix_sum: 16249.510687852111\ninterzonal_sum: 8843.10649785211\nintrazonal_sum: 7406.40419\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Highway\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: HBW\n    level: 1\n    zone_count: 168\n    matrix_sum: 2114.8226920023762\n    interzonal_sum: 797.7122820023762\n    intrazonal_sum: 1317.11041\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Highway\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: HBW\n        level: 1\n        zone_count: 168\n        matrix_sum: 42.306632002376325\n        interzonal_sum: 42.306632002376325\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Highway\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: HBW\n            level: 1\n            zone_count: 168\n            matrix_sum: 109.99801096787841\n            interzonal_sum: 54.73825962373681\n            intrazonal_sum: 55.259751344141606\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Highway\n                value_type: Vehicle Trips\n                time_period: Inter_peak\n                purpose: HBW\n                level: 1\n                zone_count: 168\n                matrix_sum: 8336.910204759679\n                interzonal_sum: 7091.55124655874\n                intrazonal_sum: 1245.3589582009395\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Highway\n                    value_type: Vehicle Trips\n                    time_period: Inter_peak\n                    purpose: HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 6669.528163807743\n                    interzonal_sum: 5673.240997246992\n                    intrazonal_sum: 996.2871665607513\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Highway\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 6669.528163807743\n                        interzonal_sum: 5673.240997246992\n                        intrazonal_sum: 996.2871665607513\n                        Comments:\n                        Created by operation <built-in function add> (reverse: False) on\n                        [\n                            Matrix Object\n                            vehicle_type: Highway\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: HBW\n                            level: 1\n                            zone_count: 168\n                            matrix_sum: 4394.098844366417\n                            interzonal_sum: 3769.023069825204\n                            intrazonal_sum: 625.0757745412133\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBW\n                                level: 1\n                                zone_count: 168\n                                matrix_sum: 4394.098844366417\n                                interzonal_sum: 3769.023069825204\n                                intrazonal_sum: 625.0757745412133\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: car\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBW\n                                    level: 1\n                                    zone_count: 168\n                                    matrix_sum: 4469.568998610395\n                                    interzonal_sum: 3833.7573333235105\n                                    intrazonal_sum: 635.8116652868848\n                                    Comments:\n                                    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBW\n                                        level: 1\n                                        zone_count: 168\n                                        matrix_sum: 5071.609184687709\n                                        interzonal_sum: 4303.824785493672\n                                        intrazonal_sum: 767.7843991940372\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBW\n                                            level: 1\n                                            zone_count: 168\n                                            matrix_sum: 5071.609184687709\n                                            interzonal_sum: 4303.824785493672\n                                            intrazonal_sum: 767.7843991940372\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBW\n                                                level: 1\n                                                zone_count: 168\n                                                matrix_sum: 5071.609184687709\n                                                interzonal_sum: 4303.824785493672\n                                                intrazonal_sum: 767.7843991940372\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBW\n                                                    level: 1\n                                                    zone_count: 168\n                                                    matrix_sum: 5071.609184687709\n                                                    interzonal_sum: 4303.824785493672\n                                                    intrazonal_sum: 767.7843991940372\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: IB_HBW\n                                                        level: 1\n                                                        zone_count: 168\n                                                        matrix_sum: 5883.530349436854\n                                                        interzonal_sum: 4992.8302481512665\n                                                        intrazonal_sum: 890.7001012855874\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Road\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: IB_HBW\n                                                            level: 1\n                                                            zone_count: 168\n                                                            matrix_sum: 6139.333333333334\n                                                            interzonal_sum: 5147.136433007419\n                                                            intrazonal_sum: 992.1969003259146\n                                                            Comments:\n                                                            Created by disaggregate_matrix operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBW\n                                                                level: 1\n                                                                zone_count: 120\n                                                                matrix_sum: 6139.333333333333\n                                                                interzonal_sum: 6005.666666666666\n                                                                intrazonal_sum: 133.66666666666666\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBW\n                                                                    level: 1\n                                                                    zone_count: 120\n                                                                    matrix_sum: 6139.333333333333\n                                                                    interzonal_sum: 6005.666666666666\n                                                                    intrazonal_sum: 133.66666666666666\n                                                                    Comments:\n                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBW\n                                                                        level: 1\n                                                                        zone_count: 120\n                                                                        matrix_sum: 36836.0\n                                                                        interzonal_sum: 36034.0\n                                                                        intrazonal_sum: 802.0\n                                                                        Comments:\n                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Road.csv\n                                                                        MND Raw Data\n                                                                        \n                                                                    ]\n                                                                    <built-in function mul>\n                                                                    [\n                                                                        0.16666666666666666\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Bus\n                                                            value_type: proportions\n                                                            time_period: Inter_peak\n                                                            purpose: IB_HBW\n                                                            level: 1\n                                                            zone_count: 168\n                                                            matrix_sum: 19963.04156085114\n                                                            interzonal_sum: 19850.930635286815\n                                                            intrazonal_sum: 112.11092556432493\n                                                            Comments:\n                                                            Created by copy operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBW\n                                                                level: 1\n                                                                zone_count: 168\n                                                                matrix_sum: 19963.04156085114\n                                                                interzonal_sum: 19850.930635286815\n                                                                intrazonal_sum: 112.11092556432493\n                                                                Comments:\n                                                                Created by operation <built-in function sub> (reverse: True) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBW\n                                                                    level: 1\n                                                                    zone_count: 168\n                                                                    matrix_sum: 8260.958439148859\n                                                                    interzonal_sum: 8205.069364713183\n                                                                    intrazonal_sum: 55.88907443567507\n                                                                    Comments:\n                                                                    Created by generate_proportion_matrix operation on the following matrices:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBW\n                                                                        level: 1\n                                                                        zone_count: 168\n                                                                        matrix_sum: 617.5941578025438\n                                                                        interzonal_sum: 364.2108118323465\n                                                                        intrazonal_sum: 253.38334597019733\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBW\n                                                                            level: 1\n                                                                            zone_count: 168\n                                                                            matrix_sum: 617.5941578025438\n                                                                            interzonal_sum: 364.2108118323465\n                                                                            intrazonal_sum: 253.38334597019733\n                                                                            Comments:\n                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: HBW\n                                                                                level: 1\n                                                                                zone_count: 168\n                                                                                matrix_sum: 937.2388699999999\n                                                                                interzonal_sum: 552.7133399999999\n                                                                                intrazonal_sum: 384.52553\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBW\n                                                                                    level: 1\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 937.2388699999999\n                                                                                    interzonal_sum: 552.7133399999999\n                                                                                    intrazonal_sum: 384.52553\n                                                                                    Comments:\n                                                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBW\n                                                                                    level: 1\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 937.2388699999999\n                                                                                    interzonal_sum: 552.7133399999999\n                                                                                    intrazonal_sum: 384.52553\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            <built-in function mul>\n                                                                            [\n                                                                                0.6589506448900736\n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBW\n                                                                        level: 1\n                                                                        zone_count: 168\n                                                                        matrix_sum: 6139.333333333334\n                                                                        interzonal_sum: 5147.136433007419\n                                                                        intrazonal_sum: 992.1969003259146\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBW\n                                                                            level: 1\n                                                                            zone_count: 168\n                                                                            matrix_sum: 6139.333333333334\n                                                                            interzonal_sum: 5147.136433007419\n                                                                            intrazonal_sum: 992.1969003259146\n                                                                            Comments:\n                                                                            Created by disaggregate_matrix operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBW\n                                                                                level: 1\n                                                                                zone_count: 120\n                                                                                matrix_sum: 6139.333333333333\n                                                                                interzonal_sum: 6005.666666666666\n                                                                                intrazonal_sum: 133.66666666666666\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: IB_HBW\n                                                                                    level: 1\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 6139.333333333333\n                                                                                    interzonal_sum: 6005.666666666666\n                                                                                    intrazonal_sum: 133.66666666666666\n                                                                                    Comments:\n                                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: IB_HBW\n                                                                                        level: 1\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 36836.0\n                                                                                        interzonal_sum: 36034.0\n                                                                                        intrazonal_sum: 802.0\n                                                                                        Comments:\n                                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Road.csv\n                                                                                        MND Raw Data\n                                                                                        \n                                                                                    ]\n                                                                                    <built-in function mul>\n                                                                                    [\n                                                                                        0.16666666666666666\n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                <built-in function sub>\n                                                                [\n                                                                    [[1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    ...\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]]\n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        0.8620010237855137\n                                                    ]\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    1.0\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    0.9831146684909792\n                                ]\n                                \n                            ]\n                            \n                        ]\n                        <built-in function add>\n                        [\n                            Matrix Object\n                            vehicle_type: Highway\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBW\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 2275.4293194413262\n                            interzonal_sum: 1904.2179274217879\n                            intrazonal_sum: 371.2113920195384\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBW\n                                level: 2\n                                zone_count: 168\n                                matrix_sum: 2275.4293194413262\n                                interzonal_sum: 1904.2179274217879\n                                intrazonal_sum: 371.2113920195384\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: car\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBW\n                                    level: 2\n                                    zone_count: 168\n                                    matrix_sum: 2314.510598172613\n                                    interzonal_sum: 1936.9235232189606\n                                    intrazonal_sum: 377.5870749536523\n                                    Comments:\n                                    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBW\n                                        level: 2\n                                        zone_count: 168\n                                        matrix_sum: 2630.125679741606\n                                        interzonal_sum: 2184.362093997899\n                                        intrazonal_sum: 445.7635857437069\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBW\n                                            level: 2\n                                            zone_count: 168\n                                            matrix_sum: 2630.125679741606\n                                            interzonal_sum: 2184.362093997899\n                                            intrazonal_sum: 445.7635857437069\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBW\n                                                level: 2\n                                                zone_count: 168\n                                                matrix_sum: 2630.125679741606\n                                                interzonal_sum: 2184.362093997899\n                                                intrazonal_sum: 445.7635857437069\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBW\n                                                    level: 2\n                                                    zone_count: 168\n                                                    matrix_sum: 2630.125679741606\n                                                    interzonal_sum: 2184.362093997899\n                                                    intrazonal_sum: 445.7635857437069\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: OB_HBW\n                                                        level: 2\n                                                        zone_count: 168\n                                                        matrix_sum: 3051.18625983911\n                                                        interzonal_sum: 2534.0597443900706\n                                                        intrazonal_sum: 517.1265154490391\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Road\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: OB_HBW\n                                                            level: 2\n                                                            zone_count: 168\n                                                            matrix_sum: 3177.5\n                                                            interzonal_sum: 2606.7013184764573\n                                                            intrazonal_sum: 570.7986815235428\n                                                            Comments:\n                                                            Created by disaggregate_matrix operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBW\n                                                                level: 2\n                                                                zone_count: 120\n                                                                matrix_sum: 3177.5\n                                                                interzonal_sum: 3106.5\n                                                                intrazonal_sum: 71.0\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBW\n                                                                    level: 2\n                                                                    zone_count: 120\n                                                                    matrix_sum: 3177.5\n                                                                    interzonal_sum: 3106.5\n                                                                    intrazonal_sum: 71.0\n                                                                    Comments:\n                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBW\n                                                                        level: 2\n                                                                        zone_count: 120\n                                                                        matrix_sum: 19065.0\n                                                                        interzonal_sum: 18639.0\n                                                                        intrazonal_sum: 426.0\n                                                                        Comments:\n                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Road.csv\n                                                                        MND Raw Data\n                                                                        \n                                                                    ]\n                                                                    <built-in function mul>\n                                                                    [\n                                                                        0.16666666666666666\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Bus\n                                                            value_type: proportions\n                                                            time_period: Inter_peak\n                                                            purpose: OB_HBW\n                                                            level: 2\n                                                            zone_count: 168\n                                                            matrix_sum: 19758.683090014063\n                                                            interzonal_sum: 19648.139165167122\n                                                            intrazonal_sum: 110.54392484694247\n                                                            Comments:\n                                                            Created by copy operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBW\n                                                                level: 2\n                                                                zone_count: 168\n                                                                matrix_sum: 19758.683090014063\n                                                                interzonal_sum: 19648.139165167122\n                                                                intrazonal_sum: 110.54392484694247\n                                                                Comments:\n                                                                Created by operation <built-in function sub> (reverse: True) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBW\n                                                                    level: 2\n                                                                    zone_count: 168\n                                                                    matrix_sum: 8465.316909985935\n                                                                    interzonal_sum: 8407.860834832878\n                                                                    intrazonal_sum: 57.456075153057526\n                                                                    Comments:\n                                                                    Created by generate_proportion_matrix operation on the following matrices:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBW\n                                                                        level: 2\n                                                                        zone_count: 168\n                                                                        matrix_sum: 319.64471219745616\n                                                                        interzonal_sum: 188.5025281676535\n                                                                        intrazonal_sum: 131.14218402980265\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBW\n                                                                            level: 2\n                                                                            zone_count: 168\n                                                                            matrix_sum: 319.64471219745616\n                                                                            interzonal_sum: 188.5025281676535\n                                                                            intrazonal_sum: 131.14218402980265\n                                                                            Comments:\n                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: HBW\n                                                                                level: 1\n                                                                                zone_count: 168\n                                                                                matrix_sum: 937.2388699999999\n                                                                                interzonal_sum: 552.7133399999999\n                                                                                intrazonal_sum: 384.52553\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBW\n                                                                                    level: 1\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 937.2388699999999\n                                                                                    interzonal_sum: 552.7133399999999\n                                                                                    intrazonal_sum: 384.52553\n                                                                                    Comments:\n                                                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBW\n                                                                                    level: 1\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 937.2388699999999\n                                                                                    interzonal_sum: 552.7133399999999\n                                                                                    intrazonal_sum: 384.52553\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            <built-in function mul>\n                                                                            [\n                                                                                0.3410493551099264\n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBW\n                                                                        level: 2\n                                                                        zone_count: 168\n                                                                        matrix_sum: 3177.5\n                                                                        interzonal_sum: 2606.7013184764573\n                                                                        intrazonal_sum: 570.7986815235428\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBW\n                                                                            level: 2\n                                                                            zone_count: 168\n                                                                            matrix_sum: 3177.5\n                                                                            interzonal_sum: 2606.7013184764573\n                                                                            intrazonal_sum: 570.7986815235428\n                                                                            Comments:\n                                                                            Created by disaggregate_matrix operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBW\n                                                                                level: 2\n                                                                                zone_count: 120\n                                                                                matrix_sum: 3177.5\n                                                                                interzonal_sum: 3106.5\n                                                                                intrazonal_sum: 71.0\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: OB_HBW\n                                                                                    level: 2\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 3177.5\n                                                                                    interzonal_sum: 3106.5\n                                                                                    intrazonal_sum: 71.0\n                                                                                    Comments:\n                                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: OB_HBW\n                                                                                        level: 2\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 19065.0\n                                                                                        interzonal_sum: 18639.0\n                                                                                        intrazonal_sum: 426.0\n                                                                                        Comments:\n                                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Road.csv\n                                                                                        MND Raw Data\n                                                                                        \n                                                                                    ]\n                                                                                    <built-in function mul>\n                                                                                    [\n                                                                                        0.16666666666666666\n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                <built-in function sub>\n                                                                [\n                                                                    [[1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    ...\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]]\n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        0.8620010237855137\n                                                    ]\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    1.0\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    0.9831146684909792\n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        1.0\n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    1.25\n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Car\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: HBW\n        level: 1\n        zone_count: 168\n        matrix_sum: 2072.51606\n        interzonal_sum: 755.4056499999999\n        intrazonal_sum: 1317.11041\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: HBW\n            level: 1\n            zone_count: 168\n            matrix_sum: 2072.51606\n            interzonal_sum: 755.4056499999999\n            intrazonal_sum: 1317.11041\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Car\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: HBW\n                level: 1\n                zone_count: 168\n                matrix_sum: 2248.70151\n                interzonal_sum: 931.5910999999999\n                intrazonal_sum: 1317.11041\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 10703.92275\n                    interzonal_sum: 3297.5185599999995\n                    intrazonal_sum: 7406.40419\n                    Comments:\n                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_car_Inter_peak_v2.csv\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 10703.92275\n                    interzonal_sum: 3297.5185599999995\n                    intrazonal_sum: 7406.40419\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[ True  True  True ... False False False]\n                    [ True  True  True ... False False False]\n                    [ True  True  True ... False False False]\n                    ...\n                    [False False False ... False False False]\n                    [False False False ... False False False]\n                    [False False False ... False False False]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Highway\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: HBW\n    level: 1\n    zone_count: 168\n    matrix_sum: 14134.687995849734\n    interzonal_sum: 8045.394215849734\n    intrazonal_sum: 6089.29378\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Highway\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: HBW\n        level: 1\n        zone_count: 168\n        matrix_sum: 14134.687995849734\n        interzonal_sum: 8045.394215849734\n        intrazonal_sum: 6089.29378\n        Comments:\n        Created by operation <built-in function add> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Highway\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: HBW\n            level: 1\n            zone_count: 168\n            matrix_sum: 6972.875845849733\n            interzonal_sum: 6972.875845849733\n            intrazonal_sum: 0.0\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Highway\n                value_type: Vehicle Trips\n                time_period: Inter_peak\n                purpose: HBW\n                level: 1\n                zone_count: 168\n                matrix_sum: 8226.912193791799\n                interzonal_sum: 7036.812986935001\n                intrazonal_sum: 1190.0992068567978\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Highway\n                    value_type: Vehicle Trips\n                    time_period: Inter_peak\n                    purpose: HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 8336.910204759679\n                    interzonal_sum: 7091.55124655874\n                    intrazonal_sum: 1245.3589582009395\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Highway\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 6669.528163807743\n                        interzonal_sum: 5673.240997246992\n                        intrazonal_sum: 996.2871665607513\n                        Comments:\n                        Created by operation <built-in function mul> (reverse: False) on\n                        [\n                            Matrix Object\n                            vehicle_type: Highway\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: HBW\n                            level: 1\n                            zone_count: 168\n                            matrix_sum: 6669.528163807743\n                            interzonal_sum: 5673.240997246992\n                            intrazonal_sum: 996.2871665607513\n                            Comments:\n                            Created by operation <built-in function add> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: HBW\n                                level: 1\n                                zone_count: 168\n                                matrix_sum: 4394.098844366417\n                                interzonal_sum: 3769.023069825204\n                                intrazonal_sum: 625.0757745412133\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Highway\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBW\n                                    level: 1\n                                    zone_count: 168\n                                    matrix_sum: 4394.098844366417\n                                    interzonal_sum: 3769.023069825204\n                                    intrazonal_sum: 625.0757745412133\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBW\n                                        level: 1\n                                        zone_count: 168\n                                        matrix_sum: 4469.568998610395\n                                        interzonal_sum: 3833.7573333235105\n                                        intrazonal_sum: 635.8116652868848\n                                        Comments:\n                                        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBW\n                                            level: 1\n                                            zone_count: 168\n                                            matrix_sum: 5071.609184687709\n                                            interzonal_sum: 4303.824785493672\n                                            intrazonal_sum: 767.7843991940372\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBW\n                                                level: 1\n                                                zone_count: 168\n                                                matrix_sum: 5071.609184687709\n                                                interzonal_sum: 4303.824785493672\n                                                intrazonal_sum: 767.7843991940372\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBW\n                                                    level: 1\n                                                    zone_count: 168\n                                                    matrix_sum: 5071.609184687709\n                                                    interzonal_sum: 4303.824785493672\n                                                    intrazonal_sum: 767.7843991940372\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Vehicle Trips\n                                                        time_period: Inter_peak\n                                                        purpose: IB_HBW\n                                                        level: 1\n                                                        zone_count: 168\n                                                        matrix_sum: 5071.609184687709\n                                                        interzonal_sum: 4303.824785493672\n                                                        intrazonal_sum: 767.7843991940372\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: car+lgv\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: IB_HBW\n                                                            level: 1\n                                                            zone_count: 168\n                                                            matrix_sum: 5883.530349436854\n                                                            interzonal_sum: 4992.8302481512665\n                                                            intrazonal_sum: 890.7001012855874\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBW\n                                                                level: 1\n                                                                zone_count: 168\n                                                                matrix_sum: 6139.333333333334\n                                                                interzonal_sum: 5147.136433007419\n                                                                intrazonal_sum: 992.1969003259146\n                                                                Comments:\n                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBW\n                                                                    level: 1\n                                                                    zone_count: 120\n                                                                    matrix_sum: 6139.333333333333\n                                                                    interzonal_sum: 6005.666666666666\n                                                                    intrazonal_sum: 133.66666666666666\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBW\n                                                                        level: 1\n                                                                        zone_count: 120\n                                                                        matrix_sum: 6139.333333333333\n                                                                        interzonal_sum: 6005.666666666666\n                                                                        intrazonal_sum: 133.66666666666666\n                                                                        Comments:\n                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBW\n                                                                            level: 1\n                                                                            zone_count: 120\n                                                                            matrix_sum: 36836.0\n                                                                            interzonal_sum: 36034.0\n                                                                            intrazonal_sum: 802.0\n                                                                            Comments:\n                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Road.csv\n                                                                            MND Raw Data\n                                                                            \n                                                                        ]\n                                                                        <built-in function mul>\n                                                                        [\n                                                                            0.16666666666666666\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBW\n                                                                level: 1\n                                                                zone_count: 168\n                                                                matrix_sum: 19963.04156085114\n                                                                interzonal_sum: 19850.930635286815\n                                                                intrazonal_sum: 112.11092556432493\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBW\n                                                                    level: 1\n                                                                    zone_count: 168\n                                                                    matrix_sum: 19963.04156085114\n                                                                    interzonal_sum: 19850.930635286815\n                                                                    intrazonal_sum: 112.11092556432493\n                                                                    Comments:\n                                                                    Created by operation <built-in function sub> (reverse: True) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: proportions\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBW\n                                                                        level: 1\n                                                                        zone_count: 168\n                                                                        matrix_sum: 8260.958439148859\n                                                                        interzonal_sum: 8205.069364713183\n                                                                        intrazonal_sum: 55.88907443567507\n                                                                        Comments:\n                                                                        Created by generate_proportion_matrix operation on the following matrices:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBW\n                                                                            level: 1\n                                                                            zone_count: 168\n                                                                            matrix_sum: 617.5941578025438\n                                                                            interzonal_sum: 364.2108118323465\n                                                                            intrazonal_sum: 253.38334597019733\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBW\n                                                                                level: 1\n                                                                                zone_count: 168\n                                                                                matrix_sum: 617.5941578025438\n                                                                                interzonal_sum: 364.2108118323465\n                                                                                intrazonal_sum: 253.38334597019733\n                                                                                Comments:\n                                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBW\n                                                                                    level: 1\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 937.2388699999999\n                                                                                    interzonal_sum: 552.7133399999999\n                                                                                    intrazonal_sum: 384.52553\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBW\n                                                                                        level: 1\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 937.2388699999999\n                                                                                        interzonal_sum: 552.7133399999999\n                                                                                        intrazonal_sum: 384.52553\n                                                                                        Comments:\n                                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBW\n                                                                                        level: 1\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 937.2388699999999\n                                                                                        interzonal_sum: 552.7133399999999\n                                                                                        intrazonal_sum: 384.52553\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                <built-in function mul>\n                                                                                [\n                                                                                    0.6589506448900736\n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBW\n                                                                            level: 1\n                                                                            zone_count: 168\n                                                                            matrix_sum: 6139.333333333334\n                                                                            interzonal_sum: 5147.136433007419\n                                                                            intrazonal_sum: 992.1969003259146\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBW\n                                                                                level: 1\n                                                                                zone_count: 168\n                                                                                matrix_sum: 6139.333333333334\n                                                                                interzonal_sum: 5147.136433007419\n                                                                                intrazonal_sum: 992.1969003259146\n                                                                                Comments:\n                                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: IB_HBW\n                                                                                    level: 1\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 6139.333333333333\n                                                                                    interzonal_sum: 6005.666666666666\n                                                                                    intrazonal_sum: 133.66666666666666\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: IB_HBW\n                                                                                        level: 1\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 6139.333333333333\n                                                                                        interzonal_sum: 6005.666666666666\n                                                                                        intrazonal_sum: 133.66666666666666\n                                                                                        Comments:\n                                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Road\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: IB_HBW\n                                                                                            level: 1\n                                                                                            zone_count: 120\n                                                                                            matrix_sum: 36836.0\n                                                                                            interzonal_sum: 36034.0\n                                                                                            intrazonal_sum: 802.0\n                                                                                            Comments:\n                                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Road.csv\n                                                                                            MND Raw Data\n                                                                                            \n                                                                                        ]\n                                                                                        <built-in function mul>\n                                                                                        [\n                                                                                            0.16666666666666666\n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    <built-in function sub>\n                                                                    [\n                                                                        [[1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        ...\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]]\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            0.8620010237855137\n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.9831146684909792\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            <built-in function add>\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBW\n                                level: 2\n                                zone_count: 168\n                                matrix_sum: 2275.4293194413262\n                                interzonal_sum: 1904.2179274217879\n                                intrazonal_sum: 371.2113920195384\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Highway\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBW\n                                    level: 2\n                                    zone_count: 168\n                                    matrix_sum: 2275.4293194413262\n                                    interzonal_sum: 1904.2179274217879\n                                    intrazonal_sum: 371.2113920195384\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBW\n                                        level: 2\n                                        zone_count: 168\n                                        matrix_sum: 2314.510598172613\n                                        interzonal_sum: 1936.9235232189606\n                                        intrazonal_sum: 377.5870749536523\n                                        Comments:\n                                        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBW\n                                            level: 2\n                                            zone_count: 168\n                                            matrix_sum: 2630.125679741606\n                                            interzonal_sum: 2184.362093997899\n                                            intrazonal_sum: 445.7635857437069\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBW\n                                                level: 2\n                                                zone_count: 168\n                                                matrix_sum: 2630.125679741606\n                                                interzonal_sum: 2184.362093997899\n                                                intrazonal_sum: 445.7635857437069\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBW\n                                                    level: 2\n                                                    zone_count: 168\n                                                    matrix_sum: 2630.125679741606\n                                                    interzonal_sum: 2184.362093997899\n                                                    intrazonal_sum: 445.7635857437069\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Vehicle Trips\n                                                        time_period: Inter_peak\n                                                        purpose: OB_HBW\n                                                        level: 2\n                                                        zone_count: 168\n                                                        matrix_sum: 2630.125679741606\n                                                        interzonal_sum: 2184.362093997899\n                                                        intrazonal_sum: 445.7635857437069\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: car+lgv\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: OB_HBW\n                                                            level: 2\n                                                            zone_count: 168\n                                                            matrix_sum: 3051.18625983911\n                                                            interzonal_sum: 2534.0597443900706\n                                                            intrazonal_sum: 517.1265154490391\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBW\n                                                                level: 2\n                                                                zone_count: 168\n                                                                matrix_sum: 3177.5\n                                                                interzonal_sum: 2606.7013184764573\n                                                                intrazonal_sum: 570.7986815235428\n                                                                Comments:\n                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBW\n                                                                    level: 2\n                                                                    zone_count: 120\n                                                                    matrix_sum: 3177.5\n                                                                    interzonal_sum: 3106.5\n                                                                    intrazonal_sum: 71.0\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBW\n                                                                        level: 2\n                                                                        zone_count: 120\n                                                                        matrix_sum: 3177.5\n                                                                        interzonal_sum: 3106.5\n                                                                        intrazonal_sum: 71.0\n                                                                        Comments:\n                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBW\n                                                                            level: 2\n                                                                            zone_count: 120\n                                                                            matrix_sum: 19065.0\n                                                                            interzonal_sum: 18639.0\n                                                                            intrazonal_sum: 426.0\n                                                                            Comments:\n                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Road.csv\n                                                                            MND Raw Data\n                                                                            \n                                                                        ]\n                                                                        <built-in function mul>\n                                                                        [\n                                                                            0.16666666666666666\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBW\n                                                                level: 2\n                                                                zone_count: 168\n                                                                matrix_sum: 19758.683090014063\n                                                                interzonal_sum: 19648.139165167122\n                                                                intrazonal_sum: 110.54392484694247\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBW\n                                                                    level: 2\n                                                                    zone_count: 168\n                                                                    matrix_sum: 19758.683090014063\n                                                                    interzonal_sum: 19648.139165167122\n                                                                    intrazonal_sum: 110.54392484694247\n                                                                    Comments:\n                                                                    Created by operation <built-in function sub> (reverse: True) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: proportions\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBW\n                                                                        level: 2\n                                                                        zone_count: 168\n                                                                        matrix_sum: 8465.316909985935\n                                                                        interzonal_sum: 8407.860834832878\n                                                                        intrazonal_sum: 57.456075153057526\n                                                                        Comments:\n                                                                        Created by generate_proportion_matrix operation on the following matrices:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBW\n                                                                            level: 2\n                                                                            zone_count: 168\n                                                                            matrix_sum: 319.64471219745616\n                                                                            interzonal_sum: 188.5025281676535\n                                                                            intrazonal_sum: 131.14218402980265\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBW\n                                                                                level: 2\n                                                                                zone_count: 168\n                                                                                matrix_sum: 319.64471219745616\n                                                                                interzonal_sum: 188.5025281676535\n                                                                                intrazonal_sum: 131.14218402980265\n                                                                                Comments:\n                                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBW\n                                                                                    level: 1\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 937.2388699999999\n                                                                                    interzonal_sum: 552.7133399999999\n                                                                                    intrazonal_sum: 384.52553\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBW\n                                                                                        level: 1\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 937.2388699999999\n                                                                                        interzonal_sum: 552.7133399999999\n                                                                                        intrazonal_sum: 384.52553\n                                                                                        Comments:\n                                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBW\n                                                                                        level: 1\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 937.2388699999999\n                                                                                        interzonal_sum: 552.7133399999999\n                                                                                        intrazonal_sum: 384.52553\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                <built-in function mul>\n                                                                                [\n                                                                                    0.3410493551099264\n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBW\n                                                                            level: 2\n                                                                            zone_count: 168\n                                                                            matrix_sum: 3177.5\n                                                                            interzonal_sum: 2606.7013184764573\n                                                                            intrazonal_sum: 570.7986815235428\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBW\n                                                                                level: 2\n                                                                                zone_count: 168\n                                                                                matrix_sum: 3177.5\n                                                                                interzonal_sum: 2606.7013184764573\n                                                                                intrazonal_sum: 570.7986815235428\n                                                                                Comments:\n                                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: OB_HBW\n                                                                                    level: 2\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 3177.5\n                                                                                    interzonal_sum: 3106.5\n                                                                                    intrazonal_sum: 71.0\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: OB_HBW\n                                                                                        level: 2\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 3177.5\n                                                                                        interzonal_sum: 3106.5\n                                                                                        intrazonal_sum: 71.0\n                                                                                        Comments:\n                                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Road\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: OB_HBW\n                                                                                            level: 2\n                                                                                            zone_count: 120\n                                                                                            matrix_sum: 19065.0\n                                                                                            interzonal_sum: 18639.0\n                                                                                            intrazonal_sum: 426.0\n                                                                                            Comments:\n                                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Road.csv\n                                                                                            MND Raw Data\n                                                                                            \n                                                                                        ]\n                                                                                        <built-in function mul>\n                                                                                        [\n                                                                                            0.16666666666666666\n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    <built-in function sub>\n                                                                    [\n                                                                        [[1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        ...\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]]\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            0.8620010237855137\n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.9831146684909792\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        <built-in function mul>\n                        [\n                            1.0\n                        ]\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        1.25\n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        <built-in function add>\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: HBW\n            level: 1\n            zone_count: 168\n            matrix_sum: 7161.81215\n            interzonal_sum: 1072.5183699999998\n            intrazonal_sum: 6089.29378\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Car\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: HBW\n                level: 1\n                zone_count: 168\n                matrix_sum: 7161.81215\n                interzonal_sum: 1072.5183699999998\n                intrazonal_sum: 6089.29378\n                Comments:\n                Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 8455.221239999999\n                    interzonal_sum: 2365.927459999999\n                    intrazonal_sum: 6089.29378\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Car\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 10703.92275\n                        interzonal_sum: 3297.5185599999995\n                        intrazonal_sum: 7406.40419\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_car_Inter_peak_v2.csv\n                        Matrix Object\n                        vehicle_type: Car\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 10703.92275\n                        interzonal_sum: 3297.5185599999995\n                        intrazonal_sum: 7406.40419\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        [[False False False ...  True  True  True]\n                        [False False False ...  True  True  True]\n                        [False False False ...  True  True  True]\n                        ...\n                        [ True  True  True ...  True  True  True]\n                        [ True  True  True ...  True  True  True]\n                        [ True  True  True ...  True  True  True]]\n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Car\nvalue_type: Vehicle Trips\ntime_period: Inter_peak\npurpose: HBW\nlevel: 1\nzone_count: 168\nmatrix_sum: 18.966183458860606\ninterzonal_sum: 18.966183458860606\nintrazonal_sum: 0.0\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Car\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: HBW\n    level: 1\n    zone_count: 168\n    matrix_sum: 18.966183458860606\n    interzonal_sum: 18.966183458860606\n    intrazonal_sum: 0.0\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Car\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: HBW\n        level: 1\n        zone_count: 168\n        matrix_sum: 11.688482932993896\n        interzonal_sum: 11.688482932993896\n        intrazonal_sum: 0.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: IB_HBW\n            level: 1\n            zone_count: 168\n            matrix_sum: 11.688482932993896\n            interzonal_sum: 11.688482932993896\n            intrazonal_sum: 0.0\n            Comments:\n            Created by redistribute_matrix (remaining matrix) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: IB_HBW\n                level: 1\n                zone_count: 168\n                matrix_sum: 28.83333333333333\n                interzonal_sum: 28.629303271931317\n                intrazonal_sum: 0.2040300614020109\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: IB_HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 28.83333333333333\n                    interzonal_sum: 28.629303271931317\n                    intrazonal_sum: 0.2040300614020109\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 28.83333333333333\n                        interzonal_sum: 28.629303271931317\n                        intrazonal_sum: 0.2040300614020109\n                        Comments:\n                        Created by disaggregate_matrix operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBW\n                            level: 1\n                            zone_count: 120\n                            matrix_sum: 28.83333333333333\n                            interzonal_sum: 28.66666666666666\n                            intrazonal_sum: 0.16666666666666666\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBW\n                                level: 1\n                                zone_count: 120\n                                matrix_sum: 28.83333333333333\n                                interzonal_sum: 28.66666666666666\n                                intrazonal_sum: 0.16666666666666666\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBW\n                                    level: 1\n                                    zone_count: 120\n                                    matrix_sum: 173.0\n                                    interzonal_sum: 172.0\n                                    intrazonal_sum: 1.0\n                                    Comments:\n                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Rail.csv\n                                    MND Raw Data\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    0.16666666666666666\n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Car\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: OB_HBW\n        level: 2\n        zone_count: 168\n        matrix_sum: 7.277700525866713\n        interzonal_sum: 7.277700525866713\n        intrazonal_sum: 0.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: OB_HBW\n            level: 2\n            zone_count: 168\n            matrix_sum: 7.277700525866713\n            interzonal_sum: 7.277700525866713\n            intrazonal_sum: 0.0\n            Comments:\n            Created by redistribute_matrix (remaining matrix) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: OB_HBW\n                level: 2\n                zone_count: 168\n                matrix_sum: 16.833333333333332\n                interzonal_sum: 16.333333333333332\n                intrazonal_sum: 0.5\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBW\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 16.833333333333332\n                    interzonal_sum: 16.333333333333332\n                    intrazonal_sum: 0.5\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBW\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 16.833333333333332\n                        interzonal_sum: 16.333333333333332\n                        intrazonal_sum: 0.5\n                        Comments:\n                        Created by disaggregate_matrix operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBW\n                            level: 2\n                            zone_count: 120\n                            matrix_sum: 16.833333333333332\n                            interzonal_sum: 16.833333333333332\n                            intrazonal_sum: 0.0\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBW\n                                level: 2\n                                zone_count: 120\n                                matrix_sum: 16.833333333333332\n                                interzonal_sum: 16.833333333333332\n                                intrazonal_sum: 0.0\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBW\n                                    level: 2\n                                    zone_count: 120\n                                    matrix_sum: 101.0\n                                    interzonal_sum: 101.0\n                                    intrazonal_sum: 0.0\n                                    Comments:\n                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Rail.csv\n                                    MND Raw Data\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    0.16666666666666666\n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://2": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {}, "_zones": {"py/id": 3}, "_source_file": {"py/id": 5}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 2, "_purpose": "HBEmp", "_time_period": "Inter_peak", "_vehicle_type": "Highway", "_value_type": "Vehicle Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Highway\nvalue_type: Vehicle Trips\ntime_period: Inter_peak\npurpose: HBEmp\nlevel: 2\nzone_count: 168\nmatrix_sum: 3591.0192280688993\ninterzonal_sum: 1485.2170780688994\nintrazonal_sum: 2105.80215\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Highway\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: HBEmp\n    level: 2\n    zone_count: 168\n    matrix_sum: 541.5819040593902\n    interzonal_sum: 195.62134405939025\n    intrazonal_sum: 345.96056\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Highway\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: HBEmp\n        level: 2\n        zone_count: 168\n        matrix_sum: 4.826354059390328\n        interzonal_sum: 4.826354059390328\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Highway\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: HBEmp\n            level: 2\n            zone_count: 168\n            matrix_sum: 7.233976489822868\n            interzonal_sum: 7.160904838607702\n            intrazonal_sum: 0.0730716512151661\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Highway\n                value_type: Vehicle Trips\n                time_period: Inter_peak\n                purpose: HBEmp\n                level: 2\n                zone_count: 168\n                matrix_sum: 1165.9260274014362\n                interzonal_sum: 1015.3931868375913\n                intrazonal_sum: 150.53284056384487\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Highway\n                    value_type: Vehicle Trips\n                    time_period: Inter_peak\n                    purpose: HBEmp\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 932.7408219211488\n                    interzonal_sum: 812.314549470073\n                    intrazonal_sum: 120.42627245107589\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Highway\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: HBEmp\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 932.7408219211488\n                        interzonal_sum: 812.314549470073\n                        intrazonal_sum: 120.42627245107589\n                        Comments:\n                        Created by operation <built-in function add> (reverse: False) on\n                        [\n                            Matrix Object\n                            vehicle_type: Highway\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: HBEmp\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 485.3852350153108\n                            interzonal_sum: 423.90402271525755\n                            intrazonal_sum: 61.481212300053244\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBEmp\n                                level: 3\n                                zone_count: 168\n                                matrix_sum: 485.3852350153108\n                                interzonal_sum: 423.90402271525755\n                                intrazonal_sum: 61.481212300053244\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: car\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBEmp\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 493.721892849333\n                                    interzonal_sum: 431.1847196481406\n                                    intrazonal_sum: 62.53717320119243\n                                    Comments:\n                                    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBEmp\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 493.721892849333\n                                        interzonal_sum: 431.1847196481406\n                                        intrazonal_sum: 62.53717320119243\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBEmp\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 493.721892849333\n                                            interzonal_sum: 431.1847196481406\n                                            intrazonal_sum: 62.53717320119243\n                                            Comments:\n                                            Created by furness_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 168\n                                                matrix_sum: 10736.370183347668\n                                                interzonal_sum: 9313.561353652323\n                                                intrazonal_sum: 1422.8088296953451\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 168\n                                                    matrix_sum: 10736.370183347668\n                                                    interzonal_sum: 9313.561353652323\n                                                    intrazonal_sum: 1422.8088296953451\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Vehicle Trips\n                                                        time_period: Inter_peak\n                                                        purpose: IB_HBO\n                                                        level: 3\n                                                        zone_count: 168\n                                                        matrix_sum: 10736.370183347668\n                                                        interzonal_sum: 9313.561353652323\n                                                        intrazonal_sum: 1422.8088296953451\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: car+lgv\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: IB_HBO\n                                                            level: 3\n                                                            zone_count: 168\n                                                            matrix_sum: 17146.197852233498\n                                                            interzonal_sum: 14873.943702716606\n                                                            intrazonal_sum: 2272.2541495168925\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBO\n                                                                level: 3\n                                                                zone_count: 168\n                                                                matrix_sum: 18644.166666666664\n                                                                interzonal_sum: 15586.982047541609\n                                                                intrazonal_sum: 3057.1846191250543\n                                                                Comments:\n                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBO\n                                                                    level: 3\n                                                                    zone_count: 120\n                                                                    matrix_sum: 18644.166666666664\n                                                                    interzonal_sum: 18218.333333333332\n                                                                    intrazonal_sum: 425.83333333333337\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBO\n                                                                        level: 3\n                                                                        zone_count: 120\n                                                                        matrix_sum: 18644.166666666664\n                                                                        interzonal_sum: 18218.333333333332\n                                                                        intrazonal_sum: 425.83333333333337\n                                                                        Comments:\n                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 120\n                                                                            matrix_sum: 111865.0\n                                                                            interzonal_sum: 109310.0\n                                                                            intrazonal_sum: 2555.0\n                                                                            Comments:\n                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                                            MND Raw Data\n                                                                            \n                                                                        ]\n                                                                        <built-in function mul>\n                                                                        [\n                                                                            0.16666666666666666\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBO\n                                                                level: 3\n                                                                zone_count: 168\n                                                                matrix_sum: 19905.914423117276\n                                                                interzonal_sum: 19769.841921683088\n                                                                intrazonal_sum: 136.07250143418923\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBO\n                                                                    level: 3\n                                                                    zone_count: 168\n                                                                    matrix_sum: 19905.914423117276\n                                                                    interzonal_sum: 19769.841921683088\n                                                                    intrazonal_sum: 136.07250143418923\n                                                                    Comments:\n                                                                    Created by operation <built-in function sub> (reverse: True) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: proportions\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBO\n                                                                        level: 3\n                                                                        zone_count: 168\n                                                                        matrix_sum: 8318.085576882724\n                                                                        interzonal_sum: 8286.158078316914\n                                                                        intrazonal_sum: 31.927498565810748\n                                                                        Comments:\n                                                                        Created by generate_proportion_matrix operation on the following matrices:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 168\n                                                                            matrix_sum: 4798.478509209596\n                                                                            interzonal_sum: 2233.4337989913206\n                                                                            intrazonal_sum: 2565.0447102182757\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBO\n                                                                                level: 3\n                                                                                zone_count: 168\n                                                                                matrix_sum: 4798.478509209596\n                                                                                interzonal_sum: 2233.4337989913206\n                                                                                intrazonal_sum: 2565.0447102182757\n                                                                                Comments:\n                                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBO\n                                                                                    level: 3\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 9232.433079999999\n                                                                                    interzonal_sum: 4297.201299999999\n                                                                                    intrazonal_sum: 4935.23178\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        Comments:\n                                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                <built-in function mul>\n                                                                                [\n                                                                                    0.5197414882545346\n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 168\n                                                                            matrix_sum: 18644.166666666664\n                                                                            interzonal_sum: 15586.982047541609\n                                                                            intrazonal_sum: 3057.1846191250543\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBO\n                                                                                level: 3\n                                                                                zone_count: 168\n                                                                                matrix_sum: 18644.166666666664\n                                                                                interzonal_sum: 15586.982047541609\n                                                                                intrazonal_sum: 3057.1846191250543\n                                                                                Comments:\n                                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: IB_HBO\n                                                                                    level: 3\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 18644.166666666664\n                                                                                    interzonal_sum: 18218.333333333332\n                                                                                    intrazonal_sum: 425.83333333333337\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: IB_HBO\n                                                                                        level: 3\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 18644.166666666664\n                                                                                        interzonal_sum: 18218.333333333332\n                                                                                        intrazonal_sum: 425.83333333333337\n                                                                                        Comments:\n                                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Road\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: IB_HBO\n                                                                                            level: 3\n                                                                                            zone_count: 120\n                                                                                            matrix_sum: 111865.0\n                                                                                            interzonal_sum: 109310.0\n                                                                                            intrazonal_sum: 2555.0\n                                                                                            Comments:\n                                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                                                            MND Raw Data\n                                                                                            \n                                                                                        ]\n                                                                                        <built-in function mul>\n                                                                                        [\n                                                                                            0.16666666666666666\n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    <built-in function sub>\n                                                                    [\n                                                                        [[1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        ...\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]]\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            0.6261662367292192\n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            Convergence Information:\n                                            1: count: 168, col_pass: 19, row_pass: 27\n                                            2: count: 168, col_pass: 13, row_pass: 24\n                                            3: count: 168, col_pass: 34, row_pass: 38\n                                            4: count: 168, col_pass: 46, row_pass: 81\n                                            5: count: 168, col_pass: 167, row_pass: 168\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    0.9831146684909792\n                                ]\n                                \n                            ]\n                            \n                        ]\n                        <built-in function add>\n                        [\n                            Matrix Object\n                            vehicle_type: Highway\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBEmp\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 447.3555869058381\n                            interzonal_sum: 388.41052675481546\n                            intrazonal_sum: 58.94506015102265\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBEmp\n                                level: 4\n                                zone_count: 168\n                                matrix_sum: 447.3555869058381\n                                interzonal_sum: 388.41052675481546\n                                intrazonal_sum: 58.94506015102265\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: car\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBEmp\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 455.0390724944645\n                                    interzonal_sum: 395.0816107250254\n                                    intrazonal_sum: 59.957461769439064\n                                    Comments:\n                                    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBEmp\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 455.0390724944645\n                                        interzonal_sum: 395.0816107250254\n                                        intrazonal_sum: 59.957461769439064\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBEmp\n                                            level: 4\n                                            zone_count: 168\n                                            matrix_sum: 455.0390724944645\n                                            interzonal_sum: 395.0816107250254\n                                            intrazonal_sum: 59.957461769439064\n                                            Comments:\n                                            Created by furness_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 168\n                                                matrix_sum: 9952.580488478656\n                                                interzonal_sum: 8557.152615828738\n                                                intrazonal_sum: 1395.427872649917\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 168\n                                                    matrix_sum: 9952.580488478656\n                                                    interzonal_sum: 8557.152615828738\n                                                    intrazonal_sum: 1395.427872649917\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Vehicle Trips\n                                                        time_period: Inter_peak\n                                                        purpose: OB_HBO\n                                                        level: 4\n                                                        zone_count: 168\n                                                        matrix_sum: 9952.580488478656\n                                                        interzonal_sum: 8557.152615828738\n                                                        intrazonal_sum: 1395.427872649917\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: car+lgv\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: OB_HBO\n                                                            level: 4\n                                                            zone_count: 168\n                                                            matrix_sum: 15894.47003796625\n                                                            interzonal_sum: 13665.94382432219\n                                                            intrazonal_sum: 2228.5262136440597\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBO\n                                                                level: 4\n                                                                zone_count: 168\n                                                                matrix_sum: 17227.833333333332\n                                                                interzonal_sum: 14274.684396516754\n                                                                intrazonal_sum: 2953.1489368165776\n                                                                Comments:\n                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBO\n                                                                    level: 4\n                                                                    zone_count: 120\n                                                                    matrix_sum: 17227.833333333332\n                                                                    interzonal_sum: 16815.0\n                                                                    intrazonal_sum: 412.8333333333333\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBO\n                                                                        level: 4\n                                                                        zone_count: 120\n                                                                        matrix_sum: 17227.833333333332\n                                                                        interzonal_sum: 16815.0\n                                                                        intrazonal_sum: 412.8333333333333\n                                                                        Comments:\n                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBO\n                                                                            level: 4\n                                                                            zone_count: 120\n                                                                            matrix_sum: 103367.0\n                                                                            interzonal_sum: 100890.0\n                                                                            intrazonal_sum: 2477.0\n                                                                            Comments:\n                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                                            MND Raw Data\n                                                                            \n                                                                        ]\n                                                                        <built-in function mul>\n                                                                        [\n                                                                            0.16666666666666666\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBO\n                                                                level: 4\n                                                                zone_count: 168\n                                                                matrix_sum: 19921.737968770776\n                                                                interzonal_sum: 19789.43480495916\n                                                                intrazonal_sum: 132.30316381161484\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBO\n                                                                    level: 4\n                                                                    zone_count: 168\n                                                                    matrix_sum: 19921.737968770776\n                                                                    interzonal_sum: 19789.43480495916\n                                                                    intrazonal_sum: 132.30316381161484\n                                                                    Comments:\n                                                                    Created by operation <built-in function sub> (reverse: True) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: proportions\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBO\n                                                                        level: 4\n                                                                        zone_count: 168\n                                                                        matrix_sum: 8302.262031229224\n                                                                        interzonal_sum: 8266.56519504084\n                                                                        intrazonal_sum: 35.69683618838515\n                                                                        Comments:\n                                                                        Created by generate_proportion_matrix operation on the following matrices:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBO\n                                                                            level: 4\n                                                                            zone_count: 168\n                                                                            matrix_sum: 4433.9545707904035\n                                                                            interzonal_sum: 2063.7675010086796\n                                                                            intrazonal_sum: 2370.187069781724\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBO\n                                                                                level: 4\n                                                                                zone_count: 168\n                                                                                matrix_sum: 4433.9545707904035\n                                                                                interzonal_sum: 2063.7675010086796\n                                                                                intrazonal_sum: 2370.187069781724\n                                                                                Comments:\n                                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBO\n                                                                                    level: 3\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 9232.433079999999\n                                                                                    interzonal_sum: 4297.201299999999\n                                                                                    intrazonal_sum: 4935.23178\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        Comments:\n                                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                <built-in function mul>\n                                                                                [\n                                                                                    0.4802585117454654\n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBO\n                                                                            level: 4\n                                                                            zone_count: 168\n                                                                            matrix_sum: 17227.833333333332\n                                                                            interzonal_sum: 14274.684396516754\n                                                                            intrazonal_sum: 2953.1489368165776\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBO\n                                                                                level: 4\n                                                                                zone_count: 168\n                                                                                matrix_sum: 17227.833333333332\n                                                                                interzonal_sum: 14274.684396516754\n                                                                                intrazonal_sum: 2953.1489368165776\n                                                                                Comments:\n                                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: OB_HBO\n                                                                                    level: 4\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 17227.833333333332\n                                                                                    interzonal_sum: 16815.0\n                                                                                    intrazonal_sum: 412.8333333333333\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: OB_HBO\n                                                                                        level: 4\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 17227.833333333332\n                                                                                        interzonal_sum: 16815.0\n                                                                                        intrazonal_sum: 412.8333333333333\n                                                                                        Comments:\n                                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Road\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: OB_HBO\n                                                                                            level: 4\n                                                                                            zone_count: 120\n                                                                                            matrix_sum: 103367.0\n                                                                                            interzonal_sum: 100890.0\n                                                                                            intrazonal_sum: 2477.0\n                                                                                            Comments:\n                                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                                                            MND Raw Data\n                                                                                            \n                                                                                        ]\n                                                                                        <built-in function mul>\n                                                                                        [\n                                                                                            0.16666666666666666\n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    <built-in function sub>\n                                                                    [\n                                                                        [[1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        ...\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]]\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            0.6261662367292192\n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            Convergence Information:\n                                            1: count: 168, col_pass: 11, row_pass: 19\n                                            2: count: 168, col_pass: 16, row_pass: 16\n                                            3: count: 168, col_pass: 21, row_pass: 21\n                                            4: count: 168, col_pass: 26, row_pass: 31\n                                            5: count: 168, col_pass: 38, row_pass: 42\n                                            6: count: 168, col_pass: 64, row_pass: 143\n                                            7: count: 168, col_pass: 168, row_pass: 168\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    0.9831146684909792\n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        1.0\n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    1.25\n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Car\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: HBEmp\n        level: 2\n        zone_count: 168\n        matrix_sum: 536.75555\n        interzonal_sum: 190.79498999999998\n        intrazonal_sum: 345.96056\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: HBEmp\n            level: 2\n            zone_count: 168\n            matrix_sum: 536.75555\n            interzonal_sum: 190.79498999999998\n            intrazonal_sum: 345.96056\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Car\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: HBEmp\n                level: 2\n                zone_count: 168\n                matrix_sum: 594.09442\n                interzonal_sum: 248.13386000000003\n                intrazonal_sum: 345.96056\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: HBEmp\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 3168.1898499999998\n                    interzonal_sum: 1062.3876999999998\n                    intrazonal_sum: 2105.80215\n                    Comments:\n                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_car_Inter_peak_v2.csv\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: HBEmp\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 3168.1898499999998\n                    interzonal_sum: 1062.3876999999998\n                    intrazonal_sum: 2105.80215\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[ True  True  True ... False False False]\n                    [ True  True  True ... False False False]\n                    [ True  True  True ... False False False]\n                    ...\n                    [False False False ... False False False]\n                    [False False False ... False False False]\n                    [False False False ... False False False]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Highway\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: HBEmp\n    level: 2\n    zone_count: 168\n    matrix_sum: 3049.437324009509\n    interzonal_sum: 1289.5957340095088\n    intrazonal_sum: 1759.8415900000005\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Highway\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: HBEmp\n        level: 2\n        zone_count: 168\n        matrix_sum: 3049.437324009509\n        interzonal_sum: 1289.5957340095088\n        intrazonal_sum: 1759.8415900000005\n        Comments:\n        Created by operation <built-in function add> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Highway\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: HBEmp\n            level: 2\n            zone_count: 168\n            matrix_sum: 989.4313540095088\n            interzonal_sum: 989.4313540095088\n            intrazonal_sum: 0.0\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Highway\n                value_type: Vehicle Trips\n                time_period: Inter_peak\n                purpose: HBEmp\n                level: 2\n                zone_count: 168\n                matrix_sum: 1158.6920509116135\n                interzonal_sum: 1008.2322819989838\n                intrazonal_sum: 150.45976891262973\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Highway\n                    value_type: Vehicle Trips\n                    time_period: Inter_peak\n                    purpose: HBEmp\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 1165.9260274014362\n                    interzonal_sum: 1015.3931868375913\n                    intrazonal_sum: 150.53284056384487\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Highway\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: HBEmp\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 932.7408219211488\n                        interzonal_sum: 812.314549470073\n                        intrazonal_sum: 120.42627245107589\n                        Comments:\n                        Created by operation <built-in function mul> (reverse: False) on\n                        [\n                            Matrix Object\n                            vehicle_type: Highway\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: HBEmp\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 932.7408219211488\n                            interzonal_sum: 812.314549470073\n                            intrazonal_sum: 120.42627245107589\n                            Comments:\n                            Created by operation <built-in function add> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: HBEmp\n                                level: 3\n                                zone_count: 168\n                                matrix_sum: 485.3852350153108\n                                interzonal_sum: 423.90402271525755\n                                intrazonal_sum: 61.481212300053244\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Highway\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBEmp\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 485.3852350153108\n                                    interzonal_sum: 423.90402271525755\n                                    intrazonal_sum: 61.481212300053244\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBEmp\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 493.721892849333\n                                        interzonal_sum: 431.1847196481406\n                                        intrazonal_sum: 62.53717320119243\n                                        Comments:\n                                        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBEmp\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 493.721892849333\n                                            interzonal_sum: 431.1847196481406\n                                            intrazonal_sum: 62.53717320119243\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBEmp\n                                                level: 3\n                                                zone_count: 168\n                                                matrix_sum: 493.721892849333\n                                                interzonal_sum: 431.1847196481406\n                                                intrazonal_sum: 62.53717320119243\n                                                Comments:\n                                                Created by furness_matrix operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 168\n                                                    matrix_sum: 10736.370183347668\n                                                    interzonal_sum: 9313.561353652323\n                                                    intrazonal_sum: 1422.8088296953451\n                                                    Comments:\n                                                    Created by copy operation on the following matrix:\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Vehicle Trips\n                                                        time_period: Inter_peak\n                                                        purpose: IB_HBO\n                                                        level: 3\n                                                        zone_count: 168\n                                                        matrix_sum: 10736.370183347668\n                                                        interzonal_sum: 9313.561353652323\n                                                        intrazonal_sum: 1422.8088296953451\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: car+lgv\n                                                            value_type: Vehicle Trips\n                                                            time_period: Inter_peak\n                                                            purpose: IB_HBO\n                                                            level: 3\n                                                            zone_count: 168\n                                                            matrix_sum: 10736.370183347668\n                                                            interzonal_sum: 9313.561353652323\n                                                            intrazonal_sum: 1422.8088296953451\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: car+lgv\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBO\n                                                                level: 3\n                                                                zone_count: 168\n                                                                matrix_sum: 17146.197852233498\n                                                                interzonal_sum: 14873.943702716606\n                                                                intrazonal_sum: 2272.2541495168925\n                                                                Comments:\n                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBO\n                                                                    level: 3\n                                                                    zone_count: 168\n                                                                    matrix_sum: 18644.166666666664\n                                                                    interzonal_sum: 15586.982047541609\n                                                                    intrazonal_sum: 3057.1846191250543\n                                                                    Comments:\n                                                                    Created by disaggregate_matrix operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBO\n                                                                        level: 3\n                                                                        zone_count: 120\n                                                                        matrix_sum: 18644.166666666664\n                                                                        interzonal_sum: 18218.333333333332\n                                                                        intrazonal_sum: 425.83333333333337\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 120\n                                                                            matrix_sum: 18644.166666666664\n                                                                            interzonal_sum: 18218.333333333332\n                                                                            intrazonal_sum: 425.83333333333337\n                                                                            Comments:\n                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBO\n                                                                                level: 3\n                                                                                zone_count: 120\n                                                                                matrix_sum: 111865.0\n                                                                                interzonal_sum: 109310.0\n                                                                                intrazonal_sum: 2555.0\n                                                                                Comments:\n                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                                                MND Raw Data\n                                                                                \n                                                                            ]\n                                                                            <built-in function mul>\n                                                                            [\n                                                                                0.16666666666666666\n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                <built-in function mul>\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBO\n                                                                    level: 3\n                                                                    zone_count: 168\n                                                                    matrix_sum: 19905.914423117276\n                                                                    interzonal_sum: 19769.841921683088\n                                                                    intrazonal_sum: 136.07250143418923\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: proportions\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBO\n                                                                        level: 3\n                                                                        zone_count: 168\n                                                                        matrix_sum: 19905.914423117276\n                                                                        interzonal_sum: 19769.841921683088\n                                                                        intrazonal_sum: 136.07250143418923\n                                                                        Comments:\n                                                                        Created by operation <built-in function sub> (reverse: True) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: proportions\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 168\n                                                                            matrix_sum: 8318.085576882724\n                                                                            interzonal_sum: 8286.158078316914\n                                                                            intrazonal_sum: 31.927498565810748\n                                                                            Comments:\n                                                                            Created by generate_proportion_matrix operation on the following matrices:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBO\n                                                                                level: 3\n                                                                                zone_count: 168\n                                                                                matrix_sum: 4798.478509209596\n                                                                                interzonal_sum: 2233.4337989913206\n                                                                                intrazonal_sum: 2565.0447102182757\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: IB_HBO\n                                                                                    level: 3\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 4798.478509209596\n                                                                                    interzonal_sum: 2233.4337989913206\n                                                                                    intrazonal_sum: 2565.0447102182757\n                                                                                    Comments:\n                                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        Comments:\n                                                                                        Created by copy operation on the following matrix:\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Bus\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: HBO\n                                                                                            level: 3\n                                                                                            zone_count: 168\n                                                                                            matrix_sum: 9232.433079999999\n                                                                                            interzonal_sum: 4297.201299999999\n                                                                                            intrazonal_sum: 4935.23178\n                                                                                            Comments:\n                                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Bus\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: HBO\n                                                                                            level: 3\n                                                                                            zone_count: 168\n                                                                                            matrix_sum: 9232.433079999999\n                                                                                            interzonal_sum: 4297.201299999999\n                                                                                            intrazonal_sum: 4935.23178\n                                                                                            \n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    <built-in function mul>\n                                                                                    [\n                                                                                        0.5197414882545346\n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBO\n                                                                                level: 3\n                                                                                zone_count: 168\n                                                                                matrix_sum: 18644.166666666664\n                                                                                interzonal_sum: 15586.982047541609\n                                                                                intrazonal_sum: 3057.1846191250543\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: IB_HBO\n                                                                                    level: 3\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 18644.166666666664\n                                                                                    interzonal_sum: 15586.982047541609\n                                                                                    intrazonal_sum: 3057.1846191250543\n                                                                                    Comments:\n                                                                                    Created by disaggregate_matrix operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: IB_HBO\n                                                                                        level: 3\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 18644.166666666664\n                                                                                        interzonal_sum: 18218.333333333332\n                                                                                        intrazonal_sum: 425.83333333333337\n                                                                                        Comments:\n                                                                                        Created by copy operation on the following matrix:\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Road\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: IB_HBO\n                                                                                            level: 3\n                                                                                            zone_count: 120\n                                                                                            matrix_sum: 18644.166666666664\n                                                                                            interzonal_sum: 18218.333333333332\n                                                                                            intrazonal_sum: 425.83333333333337\n                                                                                            Comments:\n                                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                                            [\n                                                                                                Matrix Object\n                                                                                                vehicle_type: Road\n                                                                                                value_type: Person Trips\n                                                                                                time_period: Inter_peak\n                                                                                                purpose: IB_HBO\n                                                                                                level: 3\n                                                                                                zone_count: 120\n                                                                                                matrix_sum: 111865.0\n                                                                                                interzonal_sum: 109310.0\n                                                                                                intrazonal_sum: 2555.0\n                                                                                                Comments:\n                                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                                                                MND Raw Data\n                                                                                                \n                                                                                            ]\n                                                                                            <built-in function mul>\n                                                                                            [\n                                                                                                0.16666666666666666\n                                                                                            ]\n                                                                                            \n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        <built-in function sub>\n                                                                        [\n                                                                            [[1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            ...\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]]\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                0.6261662367292192\n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            1.0\n                                                        ]\n                                                        \n                                                    ]\n                                                    \n                                                ]\n                                                Convergence Information:\n                                                1: count: 168, col_pass: 19, row_pass: 27\n                                                2: count: 168, col_pass: 13, row_pass: 24\n                                                3: count: 168, col_pass: 34, row_pass: 38\n                                                4: count: 168, col_pass: 46, row_pass: 81\n                                                5: count: 168, col_pass: 167, row_pass: 168\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.9831146684909792\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            <built-in function add>\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBEmp\n                                level: 4\n                                zone_count: 168\n                                matrix_sum: 447.3555869058381\n                                interzonal_sum: 388.41052675481546\n                                intrazonal_sum: 58.94506015102265\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Highway\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBEmp\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 447.3555869058381\n                                    interzonal_sum: 388.41052675481546\n                                    intrazonal_sum: 58.94506015102265\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBEmp\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 455.0390724944645\n                                        interzonal_sum: 395.0816107250254\n                                        intrazonal_sum: 59.957461769439064\n                                        Comments:\n                                        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBEmp\n                                            level: 4\n                                            zone_count: 168\n                                            matrix_sum: 455.0390724944645\n                                            interzonal_sum: 395.0816107250254\n                                            intrazonal_sum: 59.957461769439064\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBEmp\n                                                level: 4\n                                                zone_count: 168\n                                                matrix_sum: 455.0390724944645\n                                                interzonal_sum: 395.0816107250254\n                                                intrazonal_sum: 59.957461769439064\n                                                Comments:\n                                                Created by furness_matrix operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 168\n                                                    matrix_sum: 9952.580488478656\n                                                    interzonal_sum: 8557.152615828738\n                                                    intrazonal_sum: 1395.427872649917\n                                                    Comments:\n                                                    Created by copy operation on the following matrix:\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Vehicle Trips\n                                                        time_period: Inter_peak\n                                                        purpose: OB_HBO\n                                                        level: 4\n                                                        zone_count: 168\n                                                        matrix_sum: 9952.580488478656\n                                                        interzonal_sum: 8557.152615828738\n                                                        intrazonal_sum: 1395.427872649917\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: car+lgv\n                                                            value_type: Vehicle Trips\n                                                            time_period: Inter_peak\n                                                            purpose: OB_HBO\n                                                            level: 4\n                                                            zone_count: 168\n                                                            matrix_sum: 9952.580488478656\n                                                            interzonal_sum: 8557.152615828738\n                                                            intrazonal_sum: 1395.427872649917\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: car+lgv\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBO\n                                                                level: 4\n                                                                zone_count: 168\n                                                                matrix_sum: 15894.47003796625\n                                                                interzonal_sum: 13665.94382432219\n                                                                intrazonal_sum: 2228.5262136440597\n                                                                Comments:\n                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBO\n                                                                    level: 4\n                                                                    zone_count: 168\n                                                                    matrix_sum: 17227.833333333332\n                                                                    interzonal_sum: 14274.684396516754\n                                                                    intrazonal_sum: 2953.1489368165776\n                                                                    Comments:\n                                                                    Created by disaggregate_matrix operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBO\n                                                                        level: 4\n                                                                        zone_count: 120\n                                                                        matrix_sum: 17227.833333333332\n                                                                        interzonal_sum: 16815.0\n                                                                        intrazonal_sum: 412.8333333333333\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBO\n                                                                            level: 4\n                                                                            zone_count: 120\n                                                                            matrix_sum: 17227.833333333332\n                                                                            interzonal_sum: 16815.0\n                                                                            intrazonal_sum: 412.8333333333333\n                                                                            Comments:\n                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBO\n                                                                                level: 4\n                                                                                zone_count: 120\n                                                                                matrix_sum: 103367.0\n                                                                                interzonal_sum: 100890.0\n                                                                                intrazonal_sum: 2477.0\n                                                                                Comments:\n                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                                                MND Raw Data\n                                                                                \n                                                                            ]\n                                                                            <built-in function mul>\n                                                                            [\n                                                                                0.16666666666666666\n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                <built-in function mul>\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBO\n                                                                    level: 4\n                                                                    zone_count: 168\n                                                                    matrix_sum: 19921.737968770776\n                                                                    interzonal_sum: 19789.43480495916\n                                                                    intrazonal_sum: 132.30316381161484\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: proportions\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBO\n                                                                        level: 4\n                                                                        zone_count: 168\n                                                                        matrix_sum: 19921.737968770776\n                                                                        interzonal_sum: 19789.43480495916\n                                                                        intrazonal_sum: 132.30316381161484\n                                                                        Comments:\n                                                                        Created by operation <built-in function sub> (reverse: True) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: proportions\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBO\n                                                                            level: 4\n                                                                            zone_count: 168\n                                                                            matrix_sum: 8302.262031229224\n                                                                            interzonal_sum: 8266.56519504084\n                                                                            intrazonal_sum: 35.69683618838515\n                                                                            Comments:\n                                                                            Created by generate_proportion_matrix operation on the following matrices:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBO\n                                                                                level: 4\n                                                                                zone_count: 168\n                                                                                matrix_sum: 4433.9545707904035\n                                                                                interzonal_sum: 2063.7675010086796\n                                                                                intrazonal_sum: 2370.187069781724\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: OB_HBO\n                                                                                    level: 4\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 4433.9545707904035\n                                                                                    interzonal_sum: 2063.7675010086796\n                                                                                    intrazonal_sum: 2370.187069781724\n                                                                                    Comments:\n                                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        Comments:\n                                                                                        Created by copy operation on the following matrix:\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Bus\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: HBO\n                                                                                            level: 3\n                                                                                            zone_count: 168\n                                                                                            matrix_sum: 9232.433079999999\n                                                                                            interzonal_sum: 4297.201299999999\n                                                                                            intrazonal_sum: 4935.23178\n                                                                                            Comments:\n                                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Bus\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: HBO\n                                                                                            level: 3\n                                                                                            zone_count: 168\n                                                                                            matrix_sum: 9232.433079999999\n                                                                                            interzonal_sum: 4297.201299999999\n                                                                                            intrazonal_sum: 4935.23178\n                                                                                            \n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    <built-in function mul>\n                                                                                    [\n                                                                                        0.4802585117454654\n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBO\n                                                                                level: 4\n                                                                                zone_count: 168\n                                                                                matrix_sum: 17227.833333333332\n                                                                                interzonal_sum: 14274.684396516754\n                                                                                intrazonal_sum: 2953.1489368165776\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: OB_HBO\n                                                                                    level: 4\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 17227.833333333332\n                                                                                    interzonal_sum: 14274.684396516754\n                                                                                    intrazonal_sum: 2953.1489368165776\n                                                                                    Comments:\n                                                                                    Created by disaggregate_matrix operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: OB_HBO\n                                                                                        level: 4\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 17227.833333333332\n                                                                                        interzonal_sum: 16815.0\n                                                                                        intrazonal_sum: 412.8333333333333\n                                                                                        Comments:\n                                                                                        Created by copy operation on the following matrix:\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Road\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: OB_HBO\n                                                                                            level: 4\n                                                                                            zone_count: 120\n                                                                                            matrix_sum: 17227.833333333332\n                                                                                            interzonal_sum: 16815.0\n                                                                                            intrazonal_sum: 412.8333333333333\n                                                                                            Comments:\n                                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                                            [\n                                                                                                Matrix Object\n                                                                                                vehicle_type: Road\n                                                                                                value_type: Person Trips\n                                                                                                time_period: Inter_peak\n                                                                                                purpose: OB_HBO\n                                                                                                level: 4\n                                                                                                zone_count: 120\n                                                                                                matrix_sum: 103367.0\n                                                                                                interzonal_sum: 100890.0\n                                                                                                intrazonal_sum: 2477.0\n                                                                                                Comments:\n                                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                                                                MND Raw Data\n                                                                                                \n                                                                                            ]\n                                                                                            <built-in function mul>\n                                                                                            [\n                                                                                                0.16666666666666666\n                                                                                            ]\n                                                                                            \n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        <built-in function sub>\n                                                                        [\n                                                                            [[1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            ...\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]]\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                0.6261662367292192\n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            1.0\n                                                        ]\n                                                        \n                                                    ]\n                                                    \n                                                ]\n                                                Convergence Information:\n                                                1: count: 168, col_pass: 11, row_pass: 19\n                                                2: count: 168, col_pass: 16, row_pass: 16\n                                                3: count: 168, col_pass: 21, row_pass: 21\n                                                4: count: 168, col_pass: 26, row_pass: 31\n                                                5: count: 168, col_pass: 38, row_pass: 42\n                                                6: count: 168, col_pass: 64, row_pass: 143\n                                                7: count: 168, col_pass: 168, row_pass: 168\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.9831146684909792\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        <built-in function mul>\n                        [\n                            1.0\n                        ]\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        1.25\n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        <built-in function add>\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: HBEmp\n            level: 2\n            zone_count: 168\n            matrix_sum: 2060.0059699999997\n            interzonal_sum: 300.16437999999926\n            intrazonal_sum: 1759.8415900000005\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Car\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: HBEmp\n                level: 2\n                zone_count: 168\n                matrix_sum: 2060.0059699999997\n                interzonal_sum: 300.16437999999926\n                intrazonal_sum: 1759.8415900000005\n                Comments:\n                Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: HBEmp\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 2574.09543\n                    interzonal_sum: 814.2538399999994\n                    intrazonal_sum: 1759.8415900000005\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Car\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: HBEmp\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 3168.1898499999998\n                        interzonal_sum: 1062.3876999999998\n                        intrazonal_sum: 2105.80215\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_car_Inter_peak_v2.csv\n                        Matrix Object\n                        vehicle_type: Car\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: HBEmp\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 3168.1898499999998\n                        interzonal_sum: 1062.3876999999998\n                        intrazonal_sum: 2105.80215\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        [[False False False ...  True  True  True]\n                        [False False False ...  True  True  True]\n                        [False False False ...  True  True  True]\n                        ...\n                        [ True  True  True ...  True  True  True]\n                        [ True  True  True ...  True  True  True]\n                        [ True  True  True ...  True  True  True]]\n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Car\nvalue_type: Vehicle Trips\ntime_period: Inter_peak\npurpose: HBEmp\nlevel: 2\nzone_count: 168\nmatrix_sum: 17.745361359414964\ninterzonal_sum: 17.745361359414964\nintrazonal_sum: 0.0\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Car\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: HBEmp\n    level: 2\n    zone_count: 168\n    matrix_sum: 17.745361359414964\n    interzonal_sum: 17.745361359414964\n    intrazonal_sum: 0.0\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Car\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: HBEmp\n        level: 3\n        zone_count: 168\n        matrix_sum: 8.593849564253771\n        interzonal_sum: 8.593849564253771\n        intrazonal_sum: 0.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: IB_HBEmp\n            level: 3\n            zone_count: 168\n            matrix_sum: 8.593849564253771\n            interzonal_sum: 8.593849564253771\n            intrazonal_sum: 0.0\n            Comments:\n            Created by redistribute_matrix (remaining matrix) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: IB_HBEmp\n                level: 3\n                zone_count: 168\n                matrix_sum: 21.545514711089606\n                interzonal_sum: 21.23240812799026\n                intrazonal_sum: 0.31310658309934547\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: IB_HBEmp\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 21.545514711089606\n                    interzonal_sum: 21.23240812799026\n                    intrazonal_sum: 0.31310658309934547\n                    Comments:\n                    Created by furness_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 157.16666666666666\n                        interzonal_sum: 155.75512940409635\n                        intrazonal_sum: 1.411537262570307\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 157.16666666666666\n                            interzonal_sum: 155.75512940409635\n                            intrazonal_sum: 1.411537262570307\n                            Comments:\n                            Created by disaggregate_matrix operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBO\n                                level: 3\n                                zone_count: 120\n                                matrix_sum: 157.16666666666663\n                                interzonal_sum: 156.3333333333333\n                                intrazonal_sum: 0.8333333333333333\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 120\n                                    matrix_sum: 157.16666666666663\n                                    interzonal_sum: 156.3333333333333\n                                    intrazonal_sum: 0.8333333333333333\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 120\n                                        matrix_sum: 943.0\n                                        interzonal_sum: 938.0\n                                        intrazonal_sum: 5.0\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                        MND Raw Data\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.16666666666666666\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    Convergence Information:\n                    1: count: 168, col_pass: 16, row_pass: 26\n                    2: count: 168, col_pass: 7, row_pass: 27\n                    3: count: 168, col_pass: 24, row_pass: 30\n                    4: count: 168, col_pass: 28, row_pass: 38\n                    5: count: 168, col_pass: 50, row_pass: 121\n                    6: count: 168, col_pass: 168, row_pass: 168\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Car\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: OB_HBEmp\n        level: 4\n        zone_count: 168\n        matrix_sum: 9.151511795161197\n        interzonal_sum: 9.151511795161197\n        intrazonal_sum: 0.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: OB_HBEmp\n            level: 4\n            zone_count: 168\n            matrix_sum: 9.151511795161197\n            interzonal_sum: 9.151511795161197\n            intrazonal_sum: 0.0\n            Comments:\n            Created by redistribute_matrix (remaining matrix) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: OB_HBEmp\n                level: 4\n                zone_count: 168\n                matrix_sum: 22.20813438935504\n                interzonal_sum: 21.915930182929074\n                intrazonal_sum: 0.29220420642596434\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBEmp\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 22.20813438935504\n                    interzonal_sum: 21.915930182929074\n                    intrazonal_sum: 0.29220420642596434\n                    Comments:\n                    Created by furness_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBO\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 155.33333333333334\n                        interzonal_sum: 154.010461458477\n                        intrazonal_sum: 1.3228718748563326\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBO\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 155.33333333333334\n                            interzonal_sum: 154.010461458477\n                            intrazonal_sum: 1.3228718748563326\n                            Comments:\n                            Created by disaggregate_matrix operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBO\n                                level: 4\n                                zone_count: 120\n                                matrix_sum: 155.33333333333331\n                                interzonal_sum: 154.66666666666666\n                                intrazonal_sum: 0.6666666666666666\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 120\n                                    matrix_sum: 155.33333333333331\n                                    interzonal_sum: 154.66666666666666\n                                    intrazonal_sum: 0.6666666666666666\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 120\n                                        matrix_sum: 932.0\n                                        interzonal_sum: 928.0\n                                        intrazonal_sum: 4.0\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                        MND Raw Data\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.16666666666666666\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    Convergence Information:\n                    1: count: 168, col_pass: 31, row_pass: 5\n                    2: count: 168, col_pass: 26, row_pass: 24\n                    3: count: 168, col_pass: 46, row_pass: 25\n                    4: count: 168, col_pass: 47, row_pass: 29\n                    5: count: 168, col_pass: 64, row_pass: 45\n                    6: count: 168, col_pass: 106, row_pass: 167\n                    7: count: 168, col_pass: 168, row_pass: 168\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://3": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {}, "_zones": {"py/id": 3}, "_source_file": {"py/id": 5}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 3, "_purpose": "HBO", "_time_period": "Inter_peak", "_vehicle_type": "Highway", "_value_type": "Vehicle Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Highway\nvalue_type: Vehicle Trips\ntime_period: Inter_peak\npurpose: HBO\nlevel: 3\nzone_count: 168\nmatrix_sum: 50309.86658723278\ninterzonal_sum: 26001.000477232774\nintrazonal_sum: 24308.866110000003\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Highway\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: HBO\n    level: 3\n    zone_count: 168\n    matrix_sum: 6842.340782238513\n    interzonal_sum: 2251.8381822385136\n    intrazonal_sum: 4590.5026\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Highway\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: HBO\n        level: 3\n        zone_count: 168\n        matrix_sum: 122.1023922385139\n        interzonal_sum: 122.1023922385139\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Highway\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: HBO\n            level: 3\n            zone_count: 168\n            matrix_sum: 174.71145538601786\n            interzonal_sum: 173.11644864856487\n            intrazonal_sum: 1.5950067374529808\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Highway\n                value_type: Vehicle Trips\n                time_period: Inter_peak\n                purpose: HBO\n                level: 3\n                zone_count: 168\n                matrix_sum: 24257.135373155215\n                interzonal_sum: 20932.99238840115\n                intrazonal_sum: 3324.142984754063\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Highway\n                    value_type: Vehicle Trips\n                    time_period: Inter_peak\n                    purpose: HBO\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 19405.708298524172\n                    interzonal_sum: 16746.393910720923\n                    intrazonal_sum: 2659.31438780325\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Highway\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 19405.708298524172\n                        interzonal_sum: 16746.393910720923\n                        intrazonal_sum: 2659.31438780325\n                        Comments:\n                        Created by operation <built-in function add> (reverse: False) on\n                        [\n                            Matrix Object\n                            vehicle_type: Highway\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: HBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 10069.288664340653\n                            interzonal_sum: 8727.674495051084\n                            intrazonal_sum: 1341.6141692895699\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBO\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 10069.288664340653\n                                interzonal_sum: 8727.674495051084\n                                intrazonal_sum: 1341.6141692895699\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: car\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 5\n                                    zone_count: 168\n                                    matrix_sum: 10242.232149578638\n                                    interzonal_sum: 8877.575296936142\n                                    intrazonal_sum: 1364.6568526424956\n                                    Comments:\n                                    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 5\n                                        zone_count: 168\n                                        matrix_sum: 10242.232149578638\n                                        interzonal_sum: 8877.575296936142\n                                        intrazonal_sum: 1364.6568526424956\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBO\n                                            level: 5\n                                            zone_count: 168\n                                            matrix_sum: 10242.232149578638\n                                            interzonal_sum: 8877.575296936142\n                                            intrazonal_sum: 1364.6568526424956\n                                            Comments:\n                                            Created by furness_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 168\n                                                matrix_sum: 10736.370183347668\n                                                interzonal_sum: 9313.561353652323\n                                                intrazonal_sum: 1422.8088296953451\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 168\n                                                    matrix_sum: 10736.370183347668\n                                                    interzonal_sum: 9313.561353652323\n                                                    intrazonal_sum: 1422.8088296953451\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Vehicle Trips\n                                                        time_period: Inter_peak\n                                                        purpose: IB_HBO\n                                                        level: 3\n                                                        zone_count: 168\n                                                        matrix_sum: 10736.370183347668\n                                                        interzonal_sum: 9313.561353652323\n                                                        intrazonal_sum: 1422.8088296953451\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: car+lgv\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: IB_HBO\n                                                            level: 3\n                                                            zone_count: 168\n                                                            matrix_sum: 17146.197852233498\n                                                            interzonal_sum: 14873.943702716606\n                                                            intrazonal_sum: 2272.2541495168925\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBO\n                                                                level: 3\n                                                                zone_count: 168\n                                                                matrix_sum: 18644.166666666664\n                                                                interzonal_sum: 15586.982047541609\n                                                                intrazonal_sum: 3057.1846191250543\n                                                                Comments:\n                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBO\n                                                                    level: 3\n                                                                    zone_count: 120\n                                                                    matrix_sum: 18644.166666666664\n                                                                    interzonal_sum: 18218.333333333332\n                                                                    intrazonal_sum: 425.83333333333337\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBO\n                                                                        level: 3\n                                                                        zone_count: 120\n                                                                        matrix_sum: 18644.166666666664\n                                                                        interzonal_sum: 18218.333333333332\n                                                                        intrazonal_sum: 425.83333333333337\n                                                                        Comments:\n                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 120\n                                                                            matrix_sum: 111865.0\n                                                                            interzonal_sum: 109310.0\n                                                                            intrazonal_sum: 2555.0\n                                                                            Comments:\n                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                                            MND Raw Data\n                                                                            \n                                                                        ]\n                                                                        <built-in function mul>\n                                                                        [\n                                                                            0.16666666666666666\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBO\n                                                                level: 3\n                                                                zone_count: 168\n                                                                matrix_sum: 19905.914423117276\n                                                                interzonal_sum: 19769.841921683088\n                                                                intrazonal_sum: 136.07250143418923\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBO\n                                                                    level: 3\n                                                                    zone_count: 168\n                                                                    matrix_sum: 19905.914423117276\n                                                                    interzonal_sum: 19769.841921683088\n                                                                    intrazonal_sum: 136.07250143418923\n                                                                    Comments:\n                                                                    Created by operation <built-in function sub> (reverse: True) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: proportions\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBO\n                                                                        level: 3\n                                                                        zone_count: 168\n                                                                        matrix_sum: 8318.085576882724\n                                                                        interzonal_sum: 8286.158078316914\n                                                                        intrazonal_sum: 31.927498565810748\n                                                                        Comments:\n                                                                        Created by generate_proportion_matrix operation on the following matrices:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 168\n                                                                            matrix_sum: 4798.478509209596\n                                                                            interzonal_sum: 2233.4337989913206\n                                                                            intrazonal_sum: 2565.0447102182757\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBO\n                                                                                level: 3\n                                                                                zone_count: 168\n                                                                                matrix_sum: 4798.478509209596\n                                                                                interzonal_sum: 2233.4337989913206\n                                                                                intrazonal_sum: 2565.0447102182757\n                                                                                Comments:\n                                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBO\n                                                                                    level: 3\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 9232.433079999999\n                                                                                    interzonal_sum: 4297.201299999999\n                                                                                    intrazonal_sum: 4935.23178\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        Comments:\n                                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                <built-in function mul>\n                                                                                [\n                                                                                    0.5197414882545346\n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 168\n                                                                            matrix_sum: 18644.166666666664\n                                                                            interzonal_sum: 15586.982047541609\n                                                                            intrazonal_sum: 3057.1846191250543\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBO\n                                                                                level: 3\n                                                                                zone_count: 168\n                                                                                matrix_sum: 18644.166666666664\n                                                                                interzonal_sum: 15586.982047541609\n                                                                                intrazonal_sum: 3057.1846191250543\n                                                                                Comments:\n                                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: IB_HBO\n                                                                                    level: 3\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 18644.166666666664\n                                                                                    interzonal_sum: 18218.333333333332\n                                                                                    intrazonal_sum: 425.83333333333337\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: IB_HBO\n                                                                                        level: 3\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 18644.166666666664\n                                                                                        interzonal_sum: 18218.333333333332\n                                                                                        intrazonal_sum: 425.83333333333337\n                                                                                        Comments:\n                                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Road\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: IB_HBO\n                                                                                            level: 3\n                                                                                            zone_count: 120\n                                                                                            matrix_sum: 111865.0\n                                                                                            interzonal_sum: 109310.0\n                                                                                            intrazonal_sum: 2555.0\n                                                                                            Comments:\n                                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                                                            MND Raw Data\n                                                                                            \n                                                                                        ]\n                                                                                        <built-in function mul>\n                                                                                        [\n                                                                                            0.16666666666666666\n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    <built-in function sub>\n                                                                    [\n                                                                        [[1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        ...\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]]\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            0.6261662367292192\n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            Convergence Information:\n                                            1: count: 168, col_pass: 135, row_pass: 168\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    0.9831146684909792\n                                ]\n                                \n                            ]\n                            \n                        ]\n                        <built-in function add>\n                        [\n                            Matrix Object\n                            vehicle_type: Highway\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBO\n                            level: 6\n                            zone_count: 168\n                            matrix_sum: 9336.41963418352\n                            interzonal_sum: 8018.719415669839\n                            intrazonal_sum: 1317.7002185136803\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 9336.41963418352\n                                interzonal_sum: 8018.719415669839\n                                intrazonal_sum: 1317.7002185136803\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: car\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 6\n                                    zone_count: 168\n                                    matrix_sum: 9496.775842551866\n                                    interzonal_sum: 8156.443670989143\n                                    intrazonal_sum: 1340.3321715627226\n                                    Comments:\n                                    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 6\n                                        zone_count: 168\n                                        matrix_sum: 9496.775842551866\n                                        interzonal_sum: 8156.443670989143\n                                        intrazonal_sum: 1340.3321715627226\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBO\n                                            level: 6\n                                            zone_count: 168\n                                            matrix_sum: 9496.775842551866\n                                            interzonal_sum: 8156.443670989143\n                                            intrazonal_sum: 1340.3321715627226\n                                            Comments:\n                                            Created by furness_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 168\n                                                matrix_sum: 9952.580488478656\n                                                interzonal_sum: 8557.152615828738\n                                                intrazonal_sum: 1395.427872649917\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 168\n                                                    matrix_sum: 9952.580488478656\n                                                    interzonal_sum: 8557.152615828738\n                                                    intrazonal_sum: 1395.427872649917\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Vehicle Trips\n                                                        time_period: Inter_peak\n                                                        purpose: OB_HBO\n                                                        level: 4\n                                                        zone_count: 168\n                                                        matrix_sum: 9952.580488478656\n                                                        interzonal_sum: 8557.152615828738\n                                                        intrazonal_sum: 1395.427872649917\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: car+lgv\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: OB_HBO\n                                                            level: 4\n                                                            zone_count: 168\n                                                            matrix_sum: 15894.47003796625\n                                                            interzonal_sum: 13665.94382432219\n                                                            intrazonal_sum: 2228.5262136440597\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBO\n                                                                level: 4\n                                                                zone_count: 168\n                                                                matrix_sum: 17227.833333333332\n                                                                interzonal_sum: 14274.684396516754\n                                                                intrazonal_sum: 2953.1489368165776\n                                                                Comments:\n                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBO\n                                                                    level: 4\n                                                                    zone_count: 120\n                                                                    matrix_sum: 17227.833333333332\n                                                                    interzonal_sum: 16815.0\n                                                                    intrazonal_sum: 412.8333333333333\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBO\n                                                                        level: 4\n                                                                        zone_count: 120\n                                                                        matrix_sum: 17227.833333333332\n                                                                        interzonal_sum: 16815.0\n                                                                        intrazonal_sum: 412.8333333333333\n                                                                        Comments:\n                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBO\n                                                                            level: 4\n                                                                            zone_count: 120\n                                                                            matrix_sum: 103367.0\n                                                                            interzonal_sum: 100890.0\n                                                                            intrazonal_sum: 2477.0\n                                                                            Comments:\n                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                                            MND Raw Data\n                                                                            \n                                                                        ]\n                                                                        <built-in function mul>\n                                                                        [\n                                                                            0.16666666666666666\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBO\n                                                                level: 4\n                                                                zone_count: 168\n                                                                matrix_sum: 19921.737968770776\n                                                                interzonal_sum: 19789.43480495916\n                                                                intrazonal_sum: 132.30316381161484\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBO\n                                                                    level: 4\n                                                                    zone_count: 168\n                                                                    matrix_sum: 19921.737968770776\n                                                                    interzonal_sum: 19789.43480495916\n                                                                    intrazonal_sum: 132.30316381161484\n                                                                    Comments:\n                                                                    Created by operation <built-in function sub> (reverse: True) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: proportions\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBO\n                                                                        level: 4\n                                                                        zone_count: 168\n                                                                        matrix_sum: 8302.262031229224\n                                                                        interzonal_sum: 8266.56519504084\n                                                                        intrazonal_sum: 35.69683618838515\n                                                                        Comments:\n                                                                        Created by generate_proportion_matrix operation on the following matrices:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBO\n                                                                            level: 4\n                                                                            zone_count: 168\n                                                                            matrix_sum: 4433.9545707904035\n                                                                            interzonal_sum: 2063.7675010086796\n                                                                            intrazonal_sum: 2370.187069781724\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBO\n                                                                                level: 4\n                                                                                zone_count: 168\n                                                                                matrix_sum: 4433.9545707904035\n                                                                                interzonal_sum: 2063.7675010086796\n                                                                                intrazonal_sum: 2370.187069781724\n                                                                                Comments:\n                                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBO\n                                                                                    level: 3\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 9232.433079999999\n                                                                                    interzonal_sum: 4297.201299999999\n                                                                                    intrazonal_sum: 4935.23178\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        Comments:\n                                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                <built-in function mul>\n                                                                                [\n                                                                                    0.4802585117454654\n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBO\n                                                                            level: 4\n                                                                            zone_count: 168\n                                                                            matrix_sum: 17227.833333333332\n                                                                            interzonal_sum: 14274.684396516754\n                                                                            intrazonal_sum: 2953.1489368165776\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBO\n                                                                                level: 4\n                                                                                zone_count: 168\n                                                                                matrix_sum: 17227.833333333332\n                                                                                interzonal_sum: 14274.684396516754\n                                                                                intrazonal_sum: 2953.1489368165776\n                                                                                Comments:\n                                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: OB_HBO\n                                                                                    level: 4\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 17227.833333333332\n                                                                                    interzonal_sum: 16815.0\n                                                                                    intrazonal_sum: 412.8333333333333\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: OB_HBO\n                                                                                        level: 4\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 17227.833333333332\n                                                                                        interzonal_sum: 16815.0\n                                                                                        intrazonal_sum: 412.8333333333333\n                                                                                        Comments:\n                                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Road\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: OB_HBO\n                                                                                            level: 4\n                                                                                            zone_count: 120\n                                                                                            matrix_sum: 103367.0\n                                                                                            interzonal_sum: 100890.0\n                                                                                            intrazonal_sum: 2477.0\n                                                                                            Comments:\n                                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                                                            MND Raw Data\n                                                                                            \n                                                                                        ]\n                                                                                        <built-in function mul>\n                                                                                        [\n                                                                                            0.16666666666666666\n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    <built-in function sub>\n                                                                    [\n                                                                        [[1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        ...\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]]\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            0.6261662367292192\n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            Convergence Information:\n                                            1: count: 168, col_pass: 129, row_pass: 166\n                                            2: count: 168, col_pass: 168, row_pass: 168\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    0.9831146684909792\n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        1.0\n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    1.25\n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Car\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: HBO\n        level: 3\n        zone_count: 168\n        matrix_sum: 6720.23839\n        interzonal_sum: 2129.7357900000006\n        intrazonal_sum: 4590.5026\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: HBO\n            level: 3\n            zone_count: 168\n            matrix_sum: 6720.23839\n            interzonal_sum: 2129.7357900000006\n            intrazonal_sum: 4590.5026\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Car\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: HBO\n                level: 3\n                zone_count: 168\n                matrix_sum: 7398.408649999999\n                interzonal_sum: 2807.9060499999996\n                intrazonal_sum: 4590.5026\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: HBO\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 34791.12469\n                    interzonal_sum: 10482.258579999994\n                    intrazonal_sum: 24308.866110000003\n                    Comments:\n                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_car_Inter_peak_v2.csv\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: HBO\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 34791.12469\n                    interzonal_sum: 10482.258579999994\n                    intrazonal_sum: 24308.866110000003\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[ True  True  True ... False False False]\n                    [ True  True  True ... False False False]\n                    [ True  True  True ... False False False]\n                    ...\n                    [False False False ... False False False]\n                    [False False False ... False False False]\n                    [False False False ... False False False]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Highway\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: HBO\n    level: 3\n    zone_count: 168\n    matrix_sum: 43467.525804994264\n    interzonal_sum: 23749.16229499426\n    intrazonal_sum: 19718.363510000003\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Highway\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: HBO\n        level: 3\n        zone_count: 168\n        matrix_sum: 43467.525804994264\n        interzonal_sum: 23749.16229499426\n        intrazonal_sum: 19718.363510000003\n        Comments:\n        Created by operation <built-in function add> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Highway\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: HBO\n            level: 3\n            zone_count: 168\n            matrix_sum: 20408.345874994266\n            interzonal_sum: 20408.345874994266\n            intrazonal_sum: 0.0\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Highway\n                value_type: Vehicle Trips\n                time_period: Inter_peak\n                purpose: HBO\n                level: 3\n                zone_count: 168\n                matrix_sum: 24082.423917769196\n                interzonal_sum: 20759.875939752586\n                intrazonal_sum: 3322.5479780166097\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Highway\n                    value_type: Vehicle Trips\n                    time_period: Inter_peak\n                    purpose: HBO\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 24257.135373155215\n                    interzonal_sum: 20932.99238840115\n                    intrazonal_sum: 3324.142984754063\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Highway\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 19405.708298524172\n                        interzonal_sum: 16746.393910720923\n                        intrazonal_sum: 2659.31438780325\n                        Comments:\n                        Created by operation <built-in function mul> (reverse: False) on\n                        [\n                            Matrix Object\n                            vehicle_type: Highway\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 19405.708298524172\n                            interzonal_sum: 16746.393910720923\n                            intrazonal_sum: 2659.31438780325\n                            Comments:\n                            Created by operation <built-in function add> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: HBO\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 10069.288664340653\n                                interzonal_sum: 8727.674495051084\n                                intrazonal_sum: 1341.6141692895699\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Highway\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 5\n                                    zone_count: 168\n                                    matrix_sum: 10069.288664340653\n                                    interzonal_sum: 8727.674495051084\n                                    intrazonal_sum: 1341.6141692895699\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 5\n                                        zone_count: 168\n                                        matrix_sum: 10242.232149578638\n                                        interzonal_sum: 8877.575296936142\n                                        intrazonal_sum: 1364.6568526424956\n                                        Comments:\n                                        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBO\n                                            level: 5\n                                            zone_count: 168\n                                            matrix_sum: 10242.232149578638\n                                            interzonal_sum: 8877.575296936142\n                                            intrazonal_sum: 1364.6568526424956\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBO\n                                                level: 5\n                                                zone_count: 168\n                                                matrix_sum: 10242.232149578638\n                                                interzonal_sum: 8877.575296936142\n                                                intrazonal_sum: 1364.6568526424956\n                                                Comments:\n                                                Created by furness_matrix operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 168\n                                                    matrix_sum: 10736.370183347668\n                                                    interzonal_sum: 9313.561353652323\n                                                    intrazonal_sum: 1422.8088296953451\n                                                    Comments:\n                                                    Created by copy operation on the following matrix:\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Vehicle Trips\n                                                        time_period: Inter_peak\n                                                        purpose: IB_HBO\n                                                        level: 3\n                                                        zone_count: 168\n                                                        matrix_sum: 10736.370183347668\n                                                        interzonal_sum: 9313.561353652323\n                                                        intrazonal_sum: 1422.8088296953451\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: car+lgv\n                                                            value_type: Vehicle Trips\n                                                            time_period: Inter_peak\n                                                            purpose: IB_HBO\n                                                            level: 3\n                                                            zone_count: 168\n                                                            matrix_sum: 10736.370183347668\n                                                            interzonal_sum: 9313.561353652323\n                                                            intrazonal_sum: 1422.8088296953451\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: car+lgv\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBO\n                                                                level: 3\n                                                                zone_count: 168\n                                                                matrix_sum: 17146.197852233498\n                                                                interzonal_sum: 14873.943702716606\n                                                                intrazonal_sum: 2272.2541495168925\n                                                                Comments:\n                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBO\n                                                                    level: 3\n                                                                    zone_count: 168\n                                                                    matrix_sum: 18644.166666666664\n                                                                    interzonal_sum: 15586.982047541609\n                                                                    intrazonal_sum: 3057.1846191250543\n                                                                    Comments:\n                                                                    Created by disaggregate_matrix operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBO\n                                                                        level: 3\n                                                                        zone_count: 120\n                                                                        matrix_sum: 18644.166666666664\n                                                                        interzonal_sum: 18218.333333333332\n                                                                        intrazonal_sum: 425.83333333333337\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 120\n                                                                            matrix_sum: 18644.166666666664\n                                                                            interzonal_sum: 18218.333333333332\n                                                                            intrazonal_sum: 425.83333333333337\n                                                                            Comments:\n                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBO\n                                                                                level: 3\n                                                                                zone_count: 120\n                                                                                matrix_sum: 111865.0\n                                                                                interzonal_sum: 109310.0\n                                                                                intrazonal_sum: 2555.0\n                                                                                Comments:\n                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                                                MND Raw Data\n                                                                                \n                                                                            ]\n                                                                            <built-in function mul>\n                                                                            [\n                                                                                0.16666666666666666\n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                <built-in function mul>\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBO\n                                                                    level: 3\n                                                                    zone_count: 168\n                                                                    matrix_sum: 19905.914423117276\n                                                                    interzonal_sum: 19769.841921683088\n                                                                    intrazonal_sum: 136.07250143418923\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: proportions\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBO\n                                                                        level: 3\n                                                                        zone_count: 168\n                                                                        matrix_sum: 19905.914423117276\n                                                                        interzonal_sum: 19769.841921683088\n                                                                        intrazonal_sum: 136.07250143418923\n                                                                        Comments:\n                                                                        Created by operation <built-in function sub> (reverse: True) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: proportions\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 168\n                                                                            matrix_sum: 8318.085576882724\n                                                                            interzonal_sum: 8286.158078316914\n                                                                            intrazonal_sum: 31.927498565810748\n                                                                            Comments:\n                                                                            Created by generate_proportion_matrix operation on the following matrices:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBO\n                                                                                level: 3\n                                                                                zone_count: 168\n                                                                                matrix_sum: 4798.478509209596\n                                                                                interzonal_sum: 2233.4337989913206\n                                                                                intrazonal_sum: 2565.0447102182757\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: IB_HBO\n                                                                                    level: 3\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 4798.478509209596\n                                                                                    interzonal_sum: 2233.4337989913206\n                                                                                    intrazonal_sum: 2565.0447102182757\n                                                                                    Comments:\n                                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        Comments:\n                                                                                        Created by copy operation on the following matrix:\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Bus\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: HBO\n                                                                                            level: 3\n                                                                                            zone_count: 168\n                                                                                            matrix_sum: 9232.433079999999\n                                                                                            interzonal_sum: 4297.201299999999\n                                                                                            intrazonal_sum: 4935.23178\n                                                                                            Comments:\n                                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Bus\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: HBO\n                                                                                            level: 3\n                                                                                            zone_count: 168\n                                                                                            matrix_sum: 9232.433079999999\n                                                                                            interzonal_sum: 4297.201299999999\n                                                                                            intrazonal_sum: 4935.23178\n                                                                                            \n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    <built-in function mul>\n                                                                                    [\n                                                                                        0.5197414882545346\n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBO\n                                                                                level: 3\n                                                                                zone_count: 168\n                                                                                matrix_sum: 18644.166666666664\n                                                                                interzonal_sum: 15586.982047541609\n                                                                                intrazonal_sum: 3057.1846191250543\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: IB_HBO\n                                                                                    level: 3\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 18644.166666666664\n                                                                                    interzonal_sum: 15586.982047541609\n                                                                                    intrazonal_sum: 3057.1846191250543\n                                                                                    Comments:\n                                                                                    Created by disaggregate_matrix operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: IB_HBO\n                                                                                        level: 3\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 18644.166666666664\n                                                                                        interzonal_sum: 18218.333333333332\n                                                                                        intrazonal_sum: 425.83333333333337\n                                                                                        Comments:\n                                                                                        Created by copy operation on the following matrix:\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Road\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: IB_HBO\n                                                                                            level: 3\n                                                                                            zone_count: 120\n                                                                                            matrix_sum: 18644.166666666664\n                                                                                            interzonal_sum: 18218.333333333332\n                                                                                            intrazonal_sum: 425.83333333333337\n                                                                                            Comments:\n                                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                                            [\n                                                                                                Matrix Object\n                                                                                                vehicle_type: Road\n                                                                                                value_type: Person Trips\n                                                                                                time_period: Inter_peak\n                                                                                                purpose: IB_HBO\n                                                                                                level: 3\n                                                                                                zone_count: 120\n                                                                                                matrix_sum: 111865.0\n                                                                                                interzonal_sum: 109310.0\n                                                                                                intrazonal_sum: 2555.0\n                                                                                                Comments:\n                                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                                                                MND Raw Data\n                                                                                                \n                                                                                            ]\n                                                                                            <built-in function mul>\n                                                                                            [\n                                                                                                0.16666666666666666\n                                                                                            ]\n                                                                                            \n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        <built-in function sub>\n                                                                        [\n                                                                            [[1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            ...\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]]\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                0.6261662367292192\n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            1.0\n                                                        ]\n                                                        \n                                                    ]\n                                                    \n                                                ]\n                                                Convergence Information:\n                                                1: count: 168, col_pass: 135, row_pass: 168\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.9831146684909792\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            <built-in function add>\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 9336.41963418352\n                                interzonal_sum: 8018.719415669839\n                                intrazonal_sum: 1317.7002185136803\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Highway\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 6\n                                    zone_count: 168\n                                    matrix_sum: 9336.41963418352\n                                    interzonal_sum: 8018.719415669839\n                                    intrazonal_sum: 1317.7002185136803\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 6\n                                        zone_count: 168\n                                        matrix_sum: 9496.775842551866\n                                        interzonal_sum: 8156.443670989143\n                                        intrazonal_sum: 1340.3321715627226\n                                        Comments:\n                                        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBO\n                                            level: 6\n                                            zone_count: 168\n                                            matrix_sum: 9496.775842551866\n                                            interzonal_sum: 8156.443670989143\n                                            intrazonal_sum: 1340.3321715627226\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBO\n                                                level: 6\n                                                zone_count: 168\n                                                matrix_sum: 9496.775842551866\n                                                interzonal_sum: 8156.443670989143\n                                                intrazonal_sum: 1340.3321715627226\n                                                Comments:\n                                                Created by furness_matrix operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 168\n                                                    matrix_sum: 9952.580488478656\n                                                    interzonal_sum: 8557.152615828738\n                                                    intrazonal_sum: 1395.427872649917\n                                                    Comments:\n                                                    Created by copy operation on the following matrix:\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Vehicle Trips\n                                                        time_period: Inter_peak\n                                                        purpose: OB_HBO\n                                                        level: 4\n                                                        zone_count: 168\n                                                        matrix_sum: 9952.580488478656\n                                                        interzonal_sum: 8557.152615828738\n                                                        intrazonal_sum: 1395.427872649917\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: car+lgv\n                                                            value_type: Vehicle Trips\n                                                            time_period: Inter_peak\n                                                            purpose: OB_HBO\n                                                            level: 4\n                                                            zone_count: 168\n                                                            matrix_sum: 9952.580488478656\n                                                            interzonal_sum: 8557.152615828738\n                                                            intrazonal_sum: 1395.427872649917\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: car+lgv\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBO\n                                                                level: 4\n                                                                zone_count: 168\n                                                                matrix_sum: 15894.47003796625\n                                                                interzonal_sum: 13665.94382432219\n                                                                intrazonal_sum: 2228.5262136440597\n                                                                Comments:\n                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBO\n                                                                    level: 4\n                                                                    zone_count: 168\n                                                                    matrix_sum: 17227.833333333332\n                                                                    interzonal_sum: 14274.684396516754\n                                                                    intrazonal_sum: 2953.1489368165776\n                                                                    Comments:\n                                                                    Created by disaggregate_matrix operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBO\n                                                                        level: 4\n                                                                        zone_count: 120\n                                                                        matrix_sum: 17227.833333333332\n                                                                        interzonal_sum: 16815.0\n                                                                        intrazonal_sum: 412.8333333333333\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBO\n                                                                            level: 4\n                                                                            zone_count: 120\n                                                                            matrix_sum: 17227.833333333332\n                                                                            interzonal_sum: 16815.0\n                                                                            intrazonal_sum: 412.8333333333333\n                                                                            Comments:\n                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBO\n                                                                                level: 4\n                                                                                zone_count: 120\n                                                                                matrix_sum: 103367.0\n                                                                                interzonal_sum: 100890.0\n                                                                                intrazonal_sum: 2477.0\n                                                                                Comments:\n                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                                                MND Raw Data\n                                                                                \n                                                                            ]\n                                                                            <built-in function mul>\n                                                                            [\n                                                                                0.16666666666666666\n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                <built-in function mul>\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBO\n                                                                    level: 4\n                                                                    zone_count: 168\n                                                                    matrix_sum: 19921.737968770776\n                                                                    interzonal_sum: 19789.43480495916\n                                                                    intrazonal_sum: 132.30316381161484\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: proportions\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBO\n                                                                        level: 4\n                                                                        zone_count: 168\n                                                                        matrix_sum: 19921.737968770776\n                                                                        interzonal_sum: 19789.43480495916\n                                                                        intrazonal_sum: 132.30316381161484\n                                                                        Comments:\n                                                                        Created by operation <built-in function sub> (reverse: True) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: proportions\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBO\n                                                                            level: 4\n                                                                            zone_count: 168\n                                                                            matrix_sum: 8302.262031229224\n                                                                            interzonal_sum: 8266.56519504084\n                                                                            intrazonal_sum: 35.69683618838515\n                                                                            Comments:\n                                                                            Created by generate_proportion_matrix operation on the following matrices:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBO\n                                                                                level: 4\n                                                                                zone_count: 168\n                                                                                matrix_sum: 4433.9545707904035\n                                                                                interzonal_sum: 2063.7675010086796\n                                                                                intrazonal_sum: 2370.187069781724\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: OB_HBO\n                                                                                    level: 4\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 4433.9545707904035\n                                                                                    interzonal_sum: 2063.7675010086796\n                                                                                    intrazonal_sum: 2370.187069781724\n                                                                                    Comments:\n                                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        Comments:\n                                                                                        Created by copy operation on the following matrix:\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Bus\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: HBO\n                                                                                            level: 3\n                                                                                            zone_count: 168\n                                                                                            matrix_sum: 9232.433079999999\n                                                                                            interzonal_sum: 4297.201299999999\n                                                                                            intrazonal_sum: 4935.23178\n                                                                                            Comments:\n                                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Bus\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: HBO\n                                                                                            level: 3\n                                                                                            zone_count: 168\n                                                                                            matrix_sum: 9232.433079999999\n                                                                                            interzonal_sum: 4297.201299999999\n                                                                                            intrazonal_sum: 4935.23178\n                                                                                            \n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    <built-in function mul>\n                                                                                    [\n                                                                                        0.4802585117454654\n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBO\n                                                                                level: 4\n                                                                                zone_count: 168\n                                                                                matrix_sum: 17227.833333333332\n                                                                                interzonal_sum: 14274.684396516754\n                                                                                intrazonal_sum: 2953.1489368165776\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: OB_HBO\n                                                                                    level: 4\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 17227.833333333332\n                                                                                    interzonal_sum: 14274.684396516754\n                                                                                    intrazonal_sum: 2953.1489368165776\n                                                                                    Comments:\n                                                                                    Created by disaggregate_matrix operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: OB_HBO\n                                                                                        level: 4\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 17227.833333333332\n                                                                                        interzonal_sum: 16815.0\n                                                                                        intrazonal_sum: 412.8333333333333\n                                                                                        Comments:\n                                                                                        Created by copy operation on the following matrix:\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Road\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: OB_HBO\n                                                                                            level: 4\n                                                                                            zone_count: 120\n                                                                                            matrix_sum: 17227.833333333332\n                                                                                            interzonal_sum: 16815.0\n                                                                                            intrazonal_sum: 412.8333333333333\n                                                                                            Comments:\n                                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                                            [\n                                                                                                Matrix Object\n                                                                                                vehicle_type: Road\n                                                                                                value_type: Person Trips\n                                                                                                time_period: Inter_peak\n                                                                                                purpose: OB_HBO\n                                                                                                level: 4\n                                                                                                zone_count: 120\n                                                                                                matrix_sum: 103367.0\n                                                                                                interzonal_sum: 100890.0\n                                                                                                intrazonal_sum: 2477.0\n                                                                                                Comments:\n                                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                                                                MND Raw Data\n                                                                                                \n                                                                                            ]\n                                                                                            <built-in function mul>\n                                                                                            [\n                                                                                                0.16666666666666666\n                                                                                            ]\n                                                                                            \n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        <built-in function sub>\n                                                                        [\n                                                                            [[1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            ...\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]]\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                0.6261662367292192\n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            1.0\n                                                        ]\n                                                        \n                                                    ]\n                                                    \n                                                ]\n                                                Convergence Information:\n                                                1: count: 168, col_pass: 129, row_pass: 166\n                                                2: count: 168, col_pass: 168, row_pass: 168\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.9831146684909792\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        <built-in function mul>\n                        [\n                            1.0\n                        ]\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        1.25\n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        <built-in function add>\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: HBO\n            level: 3\n            zone_count: 168\n            matrix_sum: 23059.179930000002\n            interzonal_sum: 3340.816419999999\n            intrazonal_sum: 19718.363510000003\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Car\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: HBO\n                level: 3\n                zone_count: 168\n                matrix_sum: 23059.179930000002\n                interzonal_sum: 3340.816419999999\n                intrazonal_sum: 19718.363510000003\n                Comments:\n                Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: HBO\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 27392.716040000003\n                    interzonal_sum: 7674.35253\n                    intrazonal_sum: 19718.363510000003\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Car\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 34791.12469\n                        interzonal_sum: 10482.258579999994\n                        intrazonal_sum: 24308.866110000003\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_car_Inter_peak_v2.csv\n                        Matrix Object\n                        vehicle_type: Car\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 34791.12469\n                        interzonal_sum: 10482.258579999994\n                        intrazonal_sum: 24308.866110000003\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        [[False False False ...  True  True  True]\n                        [False False False ...  True  True  True]\n                        [False False False ...  True  True  True]\n                        ...\n                        [ True  True  True ...  True  True  True]\n                        [ True  True  True ...  True  True  True]\n                        [ True  True  True ...  True  True  True]]\n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Car\nvalue_type: Vehicle Trips\ntime_period: Inter_peak\npurpose: HBO\nlevel: 3\nzone_count: 168\nmatrix_sum: 114.28477755151505\ninterzonal_sum: 114.28477755151505\nintrazonal_sum: 0.0\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Car\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: HBO\n    level: 3\n    zone_count: 168\n    matrix_sum: 114.28477755151505\n    interzonal_sum: 114.28477755151505\n    intrazonal_sum: 0.0\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Car\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: HBO\n        level: 5\n        zone_count: 168\n        matrix_sum: 60.37572341727738\n        interzonal_sum: 60.37572341727738\n        intrazonal_sum: 0.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: IB_HBO\n            level: 5\n            zone_count: 168\n            matrix_sum: 60.37572341727738\n            interzonal_sum: 60.37572341727738\n            intrazonal_sum: 0.0\n            Comments:\n            Created by redistribute_matrix (remaining matrix) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: IB_HBO\n                level: 5\n                zone_count: 168\n                matrix_sum: 135.61337046677883\n                interzonal_sum: 134.47348881028233\n                intrazonal_sum: 1.1398816564965029\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: IB_HBO\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 135.61337046677883\n                    interzonal_sum: 134.47348881028233\n                    intrazonal_sum: 1.1398816564965029\n                    Comments:\n                    Created by furness_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 157.16666666666666\n                        interzonal_sum: 155.75512940409635\n                        intrazonal_sum: 1.411537262570307\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 157.16666666666666\n                            interzonal_sum: 155.75512940409635\n                            intrazonal_sum: 1.411537262570307\n                            Comments:\n                            Created by disaggregate_matrix operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBO\n                                level: 3\n                                zone_count: 120\n                                matrix_sum: 157.16666666666663\n                                interzonal_sum: 156.3333333333333\n                                intrazonal_sum: 0.8333333333333333\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 120\n                                    matrix_sum: 157.16666666666663\n                                    interzonal_sum: 156.3333333333333\n                                    intrazonal_sum: 0.8333333333333333\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 120\n                                        matrix_sum: 943.0\n                                        interzonal_sum: 938.0\n                                        intrazonal_sum: 5.0\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                        MND Raw Data\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.16666666666666666\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    Convergence Information:\n                    1: count: 168, col_pass: 28, row_pass: 34\n                    2: count: 168, col_pass: 46, row_pass: 109\n                    3: count: 168, col_pass: 168, row_pass: 168\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Car\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: OB_HBO\n        level: 6\n        zone_count: 168\n        matrix_sum: 53.90905413423769\n        interzonal_sum: 53.90905413423769\n        intrazonal_sum: 0.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: OB_HBO\n            level: 6\n            zone_count: 168\n            matrix_sum: 53.90905413423769\n            interzonal_sum: 53.90905413423769\n            intrazonal_sum: 0.0\n            Comments:\n            Created by redistribute_matrix (remaining matrix) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: OB_HBO\n                level: 6\n                zone_count: 168\n                matrix_sum: 133.11784874251214\n                interzonal_sum: 132.05695191396674\n                intrazonal_sum: 1.060896828545399\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBO\n                    level: 6\n                    zone_count: 168\n                    matrix_sum: 133.11784874251214\n                    interzonal_sum: 132.05695191396674\n                    intrazonal_sum: 1.060896828545399\n                    Comments:\n                    Created by furness_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBO\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 155.33333333333334\n                        interzonal_sum: 154.010461458477\n                        intrazonal_sum: 1.3228718748563326\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBO\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 155.33333333333334\n                            interzonal_sum: 154.010461458477\n                            intrazonal_sum: 1.3228718748563326\n                            Comments:\n                            Created by disaggregate_matrix operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBO\n                                level: 4\n                                zone_count: 120\n                                matrix_sum: 155.33333333333331\n                                interzonal_sum: 154.66666666666666\n                                intrazonal_sum: 0.6666666666666666\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 120\n                                    matrix_sum: 155.33333333333331\n                                    interzonal_sum: 154.66666666666666\n                                    intrazonal_sum: 0.6666666666666666\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 120\n                                        matrix_sum: 932.0\n                                        interzonal_sum: 928.0\n                                        intrazonal_sum: 4.0\n                                        Comments:\n                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                        MND Raw Data\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.16666666666666666\n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    Convergence Information:\n                    1: count: 168, col_pass: 37, row_pass: 30\n                    2: count: 168, col_pass: 64, row_pass: 60\n                    3: count: 168, col_pass: 110, row_pass: 168\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://4": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {}, "_zones": {"py/id": 3}, "_source_file": {"py/id": 5}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 4, "_purpose": "NHBW", "_time_period": "Inter_peak", "_vehicle_type": "Highway", "_value_type": "Vehicle Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Highway\nvalue_type: Vehicle Trips\ntime_period: Inter_peak\npurpose: NHBW\nlevel: 4\nzone_count: 168\nmatrix_sum: 5547.8325464312575\ninterzonal_sum: 3561.0899264312575\nintrazonal_sum: 1986.74262\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Highway\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: NHBW\n    level: 4\n    zone_count: 168\n    matrix_sum: 446.4975293191237\n    interzonal_sum: 216.53237931912372\n    intrazonal_sum: 229.96515\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Highway\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: NHBW\n        level: 4\n        zone_count: 168\n        matrix_sum: 19.86647931912365\n        interzonal_sum: 19.86647931912365\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Highway\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: NHBW\n            level: 4\n            zone_count: 168\n            matrix_sum: 47.223775372902175\n            interzonal_sum: 28.38853833201952\n            intrazonal_sum: 18.835237040882653\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Highway\n                value_type: Vehicle Trips\n                time_period: Inter_peak\n                purpose: NHBW\n                level: 4\n                zone_count: 168\n                matrix_sum: 3491.7141862470717\n                interzonal_sum: 3093.644773252783\n                intrazonal_sum: 398.0694129942886\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Highway\n                    value_type: Vehicle Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 2793.371348997658\n                    interzonal_sum: 2474.9158186022273\n                    intrazonal_sum: 318.45553039543086\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Highway\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 2793.371348997658\n                        interzonal_sum: 2474.9158186022273\n                        intrazonal_sum: 318.45553039543086\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Highway\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: NHBW\n                            level: 7\n                            zone_count: 168\n                            matrix_sum: 2793.371348997658\n                            interzonal_sum: 2474.9158186022273\n                            intrazonal_sum: 318.45553039543086\n                            Comments:\n                            Created by operation <built-in function mul> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: car\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: NHBW\n                                level: 7\n                                zone_count: 168\n                                matrix_sum: 2841.3484596718627\n                                interzonal_sum: 2517.4233463539617\n                                intrazonal_sum: 323.9251133179008\n                                Comments:\n                                Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: car+lgv\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBW\n                                    level: 7\n                                    zone_count: 168\n                                    matrix_sum: 4586.411447092498\n                                    interzonal_sum: 3819.394365368856\n                                    intrazonal_sum: 767.0170817236417\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: NHBW\n                                        level: 7\n                                        zone_count: 168\n                                        matrix_sum: 4586.411447092498\n                                        interzonal_sum: 3819.394365368856\n                                        intrazonal_sum: 767.0170817236417\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: NHBW\n                                            level: 5\n                                            zone_count: 168\n                                            matrix_sum: 4586.411447092498\n                                            interzonal_sum: 3819.394365368856\n                                            intrazonal_sum: 767.0170817236417\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: NHBW\n                                                level: 5\n                                                zone_count: 168\n                                                matrix_sum: 4586.411447092498\n                                                interzonal_sum: 3819.394365368856\n                                                intrazonal_sum: 767.0170817236417\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: NHBW\n                                                    level: 5\n                                                    zone_count: 168\n                                                    matrix_sum: 5480.971346157556\n                                                    interzonal_sum: 4564.3508694653165\n                                                    intrazonal_sum: 916.6204766922392\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Road\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: NHBW\n                                                        level: 5\n                                                        zone_count: 168\n                                                        matrix_sum: 5515.833333333332\n                                                        interzonal_sum: 4586.9693468978385\n                                                        intrazonal_sum: 928.8639864354935\n                                                        Comments:\n                                                        Created by disaggregate_matrix operation on the following matrix:\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Road\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: NHBW\n                                                            level: 5\n                                                            zone_count: 120\n                                                            matrix_sum: 5515.833333333333\n                                                            interzonal_sum: 5372.5\n                                                            intrazonal_sum: 143.33333333333331\n                                                            Comments:\n                                                            Created by copy operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: NHBW\n                                                                level: 5\n                                                                zone_count: 120\n                                                                matrix_sum: 5515.833333333333\n                                                                interzonal_sum: 5372.5\n                                                                intrazonal_sum: 143.33333333333331\n                                                                Comments:\n                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: NHBW\n                                                                    level: 5\n                                                                    zone_count: 120\n                                                                    matrix_sum: 33095.0\n                                                                    interzonal_sum: 32235.0\n                                                                    intrazonal_sum: 860.0\n                                                                    Comments:\n                                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Road.csv\n                                                                    MND Raw Data\n                                                                    \n                                                                ]\n                                                                <built-in function mul>\n                                                                [\n                                                                    0.16666666666666666\n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Bus\n                                                        value_type: proportions\n                                                        time_period: Inter_peak\n                                                        purpose: NHBW\n                                                        level: 5\n                                                        zone_count: 168\n                                                        matrix_sum: 25921.63963095064\n                                                        interzonal_sum: 25761.42875325735\n                                                        intrazonal_sum: 160.2108776932899\n                                                        Comments:\n                                                        Created by copy operation on the following matrix:\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Bus\n                                                            value_type: proportions\n                                                            time_period: Inter_peak\n                                                            purpose: NHBW\n                                                            level: 5\n                                                            zone_count: 168\n                                                            matrix_sum: 25921.63963095064\n                                                            interzonal_sum: 25761.42875325735\n                                                            intrazonal_sum: 160.2108776932899\n                                                            Comments:\n                                                            Created by operation <built-in function sub> (reverse: True) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: NHBW\n                                                                level: 5\n                                                                zone_count: 168\n                                                                matrix_sum: 2302.360369049361\n                                                                interzonal_sum: 2294.571246742651\n                                                                intrazonal_sum: 7.789122306710133\n                                                                Comments:\n                                                                Created by generate_proportion_matrix operation on the following matrices:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: NHBW\n                                                                    level: 5\n                                                                    zone_count: 168\n                                                                    matrix_sum: 57.878730000000004\n                                                                    interzonal_sum: 40.68838000000001\n                                                                    intrazonal_sum: 17.19035\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: NHBW\n                                                                        level: 5\n                                                                        zone_count: 168\n                                                                        matrix_sum: 57.878730000000004\n                                                                        interzonal_sum: 40.68838000000001\n                                                                        intrazonal_sum: 17.19035\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: NHBW\n                                                                            level: 4\n                                                                            zone_count: 168\n                                                                            matrix_sum: 57.878730000000004\n                                                                            interzonal_sum: 40.68838000000001\n                                                                            intrazonal_sum: 17.19035\n                                                                            Comments:\n                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: NHBW\n                                                                            level: 4\n                                                                            zone_count: 168\n                                                                            matrix_sum: 57.878730000000004\n                                                                            interzonal_sum: 40.68838000000001\n                                                                            intrazonal_sum: 17.19035\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: NHBW\n                                                                    level: 5\n                                                                    zone_count: 168\n                                                                    matrix_sum: 5515.833333333332\n                                                                    interzonal_sum: 4586.9693468978385\n                                                                    intrazonal_sum: 928.8639864354935\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: NHBW\n                                                                        level: 5\n                                                                        zone_count: 168\n                                                                        matrix_sum: 5515.833333333332\n                                                                        interzonal_sum: 4586.9693468978385\n                                                                        intrazonal_sum: 928.8639864354935\n                                                                        Comments:\n                                                                        Created by disaggregate_matrix operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: NHBW\n                                                                            level: 5\n                                                                            zone_count: 120\n                                                                            matrix_sum: 5515.833333333333\n                                                                            interzonal_sum: 5372.5\n                                                                            intrazonal_sum: 143.33333333333331\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: NHBW\n                                                                                level: 5\n                                                                                zone_count: 120\n                                                                                matrix_sum: 5515.833333333333\n                                                                                interzonal_sum: 5372.5\n                                                                                intrazonal_sum: 143.33333333333331\n                                                                                Comments:\n                                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: NHBW\n                                                                                    level: 5\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 33095.0\n                                                                                    interzonal_sum: 32235.0\n                                                                                    intrazonal_sum: 860.0\n                                                                                    Comments:\n                                                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Road.csv\n                                                                                    MND Raw Data\n                                                                                    \n                                                                                ]\n                                                                                <built-in function mul>\n                                                                                [\n                                                                                    0.16666666666666666\n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function sub>\n                                                            [\n                                                                [[1. 1. 1. ... 1. 1. 1.]\n                                                                [1. 1. 1. ... 1. 1. 1.]\n                                                                [1. 1. 1. ... 1. 1. 1.]\n                                                                ...\n                                                                [1. 1. 1. ... 1. 1. 1.]\n                                                                [1. 1. 1. ... 1. 1. 1.]\n                                                                [1. 1. 1. ... 1. 1. 1.]]\n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    0.8367880723017845\n                                                ]\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                1.0\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            <built-in function mul>\n                            [\n                                0.9831146684909792\n                            ]\n                            \n                        ]\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        1.0\n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    1.25\n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Car\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: NHBW\n        level: 4\n        zone_count: 168\n        matrix_sum: 426.63105\n        interzonal_sum: 196.66590000000002\n        intrazonal_sum: 229.96515\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBW\n            level: 4\n            zone_count: 168\n            matrix_sum: 426.63105\n            interzonal_sum: 196.66590000000002\n            intrazonal_sum: 229.96515\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Car\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBW\n                level: 4\n                zone_count: 168\n                matrix_sum: 614.48187\n                interzonal_sum: 384.51671999999996\n                intrazonal_sum: 229.96515\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 3452.35052\n                    interzonal_sum: 1465.6079\n                    intrazonal_sum: 1986.74262\n                    Comments:\n                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_car_Inter_peak_v2.csv\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 3452.35052\n                    interzonal_sum: 1465.6079\n                    intrazonal_sum: 1986.74262\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[ True  True  True ... False False False]\n                    [ True  True  True ... False False False]\n                    [ True  True  True ... False False False]\n                    ...\n                    [False False False ... False False False]\n                    [False False False ... False False False]\n                    [False False False ... False False False]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Highway\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: NHBW\n    level: 4\n    zone_count: 168\n    matrix_sum: 5101.335017112134\n    interzonal_sum: 3344.5575471121338\n    intrazonal_sum: 1756.77747\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Highway\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: NHBW\n        level: 4\n        zone_count: 168\n        matrix_sum: 5101.335017112134\n        interzonal_sum: 3344.5575471121338\n        intrazonal_sum: 1756.77747\n        Comments:\n        Created by operation <built-in function add> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Highway\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: NHBW\n            level: 4\n            zone_count: 168\n            matrix_sum: 3045.514577112134\n            interzonal_sum: 3045.514577112134\n            intrazonal_sum: 0.0\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Highway\n                value_type: Vehicle Trips\n                time_period: Inter_peak\n                purpose: NHBW\n                level: 4\n                zone_count: 168\n                matrix_sum: 3444.49041087417\n                interzonal_sum: 3065.2562349207637\n                intrazonal_sum: 379.23417595340595\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Highway\n                    value_type: Vehicle Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 3491.7141862470717\n                    interzonal_sum: 3093.644773252783\n                    intrazonal_sum: 398.0694129942886\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Highway\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 2793.371348997658\n                        interzonal_sum: 2474.9158186022273\n                        intrazonal_sum: 318.45553039543086\n                        Comments:\n                        Created by operation <built-in function mul> (reverse: False) on\n                        [\n                            Matrix Object\n                            vehicle_type: Highway\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: NHBW\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 2793.371348997658\n                            interzonal_sum: 2474.9158186022273\n                            intrazonal_sum: 318.45553039543086\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: NHBW\n                                level: 7\n                                zone_count: 168\n                                matrix_sum: 2793.371348997658\n                                interzonal_sum: 2474.9158186022273\n                                intrazonal_sum: 318.45553039543086\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: car\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBW\n                                    level: 7\n                                    zone_count: 168\n                                    matrix_sum: 2841.3484596718627\n                                    interzonal_sum: 2517.4233463539617\n                                    intrazonal_sum: 323.9251133179008\n                                    Comments:\n                                    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: NHBW\n                                        level: 7\n                                        zone_count: 168\n                                        matrix_sum: 4586.411447092498\n                                        interzonal_sum: 3819.394365368856\n                                        intrazonal_sum: 767.0170817236417\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: NHBW\n                                            level: 7\n                                            zone_count: 168\n                                            matrix_sum: 4586.411447092498\n                                            interzonal_sum: 3819.394365368856\n                                            intrazonal_sum: 767.0170817236417\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: NHBW\n                                                level: 5\n                                                zone_count: 168\n                                                matrix_sum: 4586.411447092498\n                                                interzonal_sum: 3819.394365368856\n                                                intrazonal_sum: 767.0170817236417\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: NHBW\n                                                    level: 5\n                                                    zone_count: 168\n                                                    matrix_sum: 4586.411447092498\n                                                    interzonal_sum: 3819.394365368856\n                                                    intrazonal_sum: 767.0170817236417\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: NHBW\n                                                        level: 5\n                                                        zone_count: 168\n                                                        matrix_sum: 5480.971346157556\n                                                        interzonal_sum: 4564.3508694653165\n                                                        intrazonal_sum: 916.6204766922392\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Road\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: NHBW\n                                                            level: 5\n                                                            zone_count: 168\n                                                            matrix_sum: 5515.833333333332\n                                                            interzonal_sum: 4586.9693468978385\n                                                            intrazonal_sum: 928.8639864354935\n                                                            Comments:\n                                                            Created by disaggregate_matrix operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: NHBW\n                                                                level: 5\n                                                                zone_count: 120\n                                                                matrix_sum: 5515.833333333333\n                                                                interzonal_sum: 5372.5\n                                                                intrazonal_sum: 143.33333333333331\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: NHBW\n                                                                    level: 5\n                                                                    zone_count: 120\n                                                                    matrix_sum: 5515.833333333333\n                                                                    interzonal_sum: 5372.5\n                                                                    intrazonal_sum: 143.33333333333331\n                                                                    Comments:\n                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: NHBW\n                                                                        level: 5\n                                                                        zone_count: 120\n                                                                        matrix_sum: 33095.0\n                                                                        interzonal_sum: 32235.0\n                                                                        intrazonal_sum: 860.0\n                                                                        Comments:\n                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Road.csv\n                                                                        MND Raw Data\n                                                                        \n                                                                    ]\n                                                                    <built-in function mul>\n                                                                    [\n                                                                        0.16666666666666666\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Bus\n                                                            value_type: proportions\n                                                            time_period: Inter_peak\n                                                            purpose: NHBW\n                                                            level: 5\n                                                            zone_count: 168\n                                                            matrix_sum: 25921.63963095064\n                                                            interzonal_sum: 25761.42875325735\n                                                            intrazonal_sum: 160.2108776932899\n                                                            Comments:\n                                                            Created by copy operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: NHBW\n                                                                level: 5\n                                                                zone_count: 168\n                                                                matrix_sum: 25921.63963095064\n                                                                interzonal_sum: 25761.42875325735\n                                                                intrazonal_sum: 160.2108776932899\n                                                                Comments:\n                                                                Created by operation <built-in function sub> (reverse: True) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: NHBW\n                                                                    level: 5\n                                                                    zone_count: 168\n                                                                    matrix_sum: 2302.360369049361\n                                                                    interzonal_sum: 2294.571246742651\n                                                                    intrazonal_sum: 7.789122306710133\n                                                                    Comments:\n                                                                    Created by generate_proportion_matrix operation on the following matrices:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: NHBW\n                                                                        level: 5\n                                                                        zone_count: 168\n                                                                        matrix_sum: 57.878730000000004\n                                                                        interzonal_sum: 40.68838000000001\n                                                                        intrazonal_sum: 17.19035\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: NHBW\n                                                                            level: 5\n                                                                            zone_count: 168\n                                                                            matrix_sum: 57.878730000000004\n                                                                            interzonal_sum: 40.68838000000001\n                                                                            intrazonal_sum: 17.19035\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: NHBW\n                                                                                level: 4\n                                                                                zone_count: 168\n                                                                                matrix_sum: 57.878730000000004\n                                                                                interzonal_sum: 40.68838000000001\n                                                                                intrazonal_sum: 17.19035\n                                                                                Comments:\n                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: NHBW\n                                                                                level: 4\n                                                                                zone_count: 168\n                                                                                matrix_sum: 57.878730000000004\n                                                                                interzonal_sum: 40.68838000000001\n                                                                                intrazonal_sum: 17.19035\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: NHBW\n                                                                        level: 5\n                                                                        zone_count: 168\n                                                                        matrix_sum: 5515.833333333332\n                                                                        interzonal_sum: 4586.9693468978385\n                                                                        intrazonal_sum: 928.8639864354935\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: NHBW\n                                                                            level: 5\n                                                                            zone_count: 168\n                                                                            matrix_sum: 5515.833333333332\n                                                                            interzonal_sum: 4586.9693468978385\n                                                                            intrazonal_sum: 928.8639864354935\n                                                                            Comments:\n                                                                            Created by disaggregate_matrix operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: NHBW\n                                                                                level: 5\n                                                                                zone_count: 120\n                                                                                matrix_sum: 5515.833333333333\n                                                                                interzonal_sum: 5372.5\n                                                                                intrazonal_sum: 143.33333333333331\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: NHBW\n                                                                                    level: 5\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 5515.833333333333\n                                                                                    interzonal_sum: 5372.5\n                                                                                    intrazonal_sum: 143.33333333333331\n                                                                                    Comments:\n                                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: NHBW\n                                                                                        level: 5\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 33095.0\n                                                                                        interzonal_sum: 32235.0\n                                                                                        intrazonal_sum: 860.0\n                                                                                        Comments:\n                                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Road.csv\n                                                                                        MND Raw Data\n                                                                                        \n                                                                                    ]\n                                                                                    <built-in function mul>\n                                                                                    [\n                                                                                        0.16666666666666666\n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                <built-in function sub>\n                                                                [\n                                                                    [[1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    ...\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]]\n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        0.8367880723017845\n                                                    ]\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    1.0\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    0.9831146684909792\n                                ]\n                                \n                            ]\n                            \n                        ]\n                        <built-in function mul>\n                        [\n                            1.0\n                        ]\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        1.25\n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        <built-in function add>\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBW\n            level: 4\n            zone_count: 168\n            matrix_sum: 2055.82044\n            interzonal_sum: 299.04296999999997\n            intrazonal_sum: 1756.77747\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Car\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBW\n                level: 4\n                zone_count: 168\n                matrix_sum: 2055.82044\n                interzonal_sum: 299.04296999999997\n                intrazonal_sum: 1756.77747\n                Comments:\n                Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 2837.8686500000003\n                    interzonal_sum: 1081.0911800000003\n                    intrazonal_sum: 1756.77747\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Car\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 3452.35052\n                        interzonal_sum: 1465.6079\n                        intrazonal_sum: 1986.74262\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_car_Inter_peak_v2.csv\n                        Matrix Object\n                        vehicle_type: Car\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 3452.35052\n                        interzonal_sum: 1465.6079\n                        intrazonal_sum: 1986.74262\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        [[False False False ...  True  True  True]\n                        [False False False ...  True  True  True]\n                        [False False False ...  True  True  True]\n                        ...\n                        [ True  True  True ...  True  True  True]\n                        [ True  True  True ...  True  True  True]\n                        [ True  True  True ...  True  True  True]]\n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Car\nvalue_type: Vehicle Trips\ntime_period: Inter_peak\npurpose: NHBW\nlevel: 4\nzone_count: 168\nmatrix_sum: 18.968625045499312\ninterzonal_sum: 18.968625045499312\nintrazonal_sum: 0.0\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Car\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: NHBW\n    level: 4\n    zone_count: 168\n    matrix_sum: 18.968625045499312\n    interzonal_sum: 18.968625045499312\n    intrazonal_sum: 0.0\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Car\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: NHBW\n        level: 7\n        zone_count: 168\n        matrix_sum: 18.968625045499312\n        interzonal_sum: 18.968625045499312\n        intrazonal_sum: 0.0\n        Comments:\n        Created by redistribute_matrix (remaining matrix) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBW\n            level: 7\n            zone_count: 168\n            matrix_sum: 54.99999999999999\n            interzonal_sum: 54.59816107740889\n            intrazonal_sum: 0.4018389225911059\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBW\n                level: 7\n                zone_count: 168\n                matrix_sum: 54.99999999999999\n                interzonal_sum: 54.59816107740889\n                intrazonal_sum: 0.4018389225911059\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 54.99999999999999\n                    interzonal_sum: 54.59816107740889\n                    intrazonal_sum: 0.4018389225911059\n                    Comments:\n                    Created by disaggregate_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 5\n                        zone_count: 120\n                        matrix_sum: 54.99999999999999\n                        interzonal_sum: 54.49999999999999\n                        intrazonal_sum: 0.5\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBW\n                            level: 5\n                            zone_count: 120\n                            matrix_sum: 54.99999999999999\n                            interzonal_sum: 54.49999999999999\n                            intrazonal_sum: 0.5\n                            Comments:\n                            Created by operation <built-in function mul> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBW\n                                level: 5\n                                zone_count: 120\n                                matrix_sum: 330.0\n                                interzonal_sum: 327.0\n                                intrazonal_sum: 3.0\n                                Comments:\n                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Rail.csv\n                                MND Raw Data\n                                \n                            ]\n                            <built-in function mul>\n                            [\n                                0.16666666666666666\n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://5": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {}, "_zones": {"py/id": 3}, "_source_file": {"py/id": 5}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 5, "_purpose": "NHBO", "_time_period": "Inter_peak", "_vehicle_type": "Highway", "_value_type": "Vehicle Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Highway\nvalue_type: Vehicle Trips\ntime_period: Inter_peak\npurpose: NHBO\nlevel: 5\nzone_count: 168\nmatrix_sum: 11279.088673680917\ninterzonal_sum: 6871.655823680918\nintrazonal_sum: 4407.432849999999\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Highway\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: NHBO\n    level: 5\n    zone_count: 168\n    matrix_sum: 1198.6311281788448\n    interzonal_sum: 562.7651081788448\n    intrazonal_sum: 635.86602\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Highway\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: NHBO\n        level: 5\n        zone_count: 168\n        matrix_sum: 20.68058817884491\n        interzonal_sum: 20.68058817884491\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Highway\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: NHBO\n            level: 5\n            zone_count: 168\n            matrix_sum: 44.679358255649404\n            interzonal_sum: 31.087663469819454\n            intrazonal_sum: 13.59169478582995\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Highway\n                value_type: Vehicle Trips\n                time_period: Inter_peak\n                purpose: NHBO\n                level: 5\n                zone_count: 168\n                matrix_sum: 6248.427999847749\n                interzonal_sum: 5581.2629171111\n                intrazonal_sum: 667.1650827366481\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Highway\n                    value_type: Vehicle Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 4998.7423998782\n                    interzonal_sum: 4465.0103336888815\n                    intrazonal_sum: 533.7320661893185\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Highway\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 4998.7423998782\n                        interzonal_sum: 4465.0103336888815\n                        intrazonal_sum: 533.7320661893185\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Highway\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: NHBO\n                            level: 8\n                            zone_count: 168\n                            matrix_sum: 4998.7423998782\n                            interzonal_sum: 4465.0103336888815\n                            intrazonal_sum: 533.7320661893185\n                            Comments:\n                            Created by operation <built-in function mul> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: car\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: NHBO\n                                level: 8\n                                zone_count: 168\n                                matrix_sum: 5084.597514500484\n                                interzonal_sum: 4541.698417075191\n                                intrazonal_sum: 542.8990974252928\n                                Comments:\n                                Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: car+lgv\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBO\n                                    level: 8\n                                    zone_count: 168\n                                    matrix_sum: 6847.632355006126\n                                    interzonal_sum: 5856.410708543197\n                                    intrazonal_sum: 991.2216464629287\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: NHBO\n                                        level: 8\n                                        zone_count: 168\n                                        matrix_sum: 6847.632355006126\n                                        interzonal_sum: 5856.410708543197\n                                        intrazonal_sum: 991.2216464629287\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: NHBO\n                                            level: 6\n                                            zone_count: 168\n                                            matrix_sum: 6847.632355006126\n                                            interzonal_sum: 5856.410708543197\n                                            intrazonal_sum: 991.2216464629287\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: NHBO\n                                                level: 6\n                                                zone_count: 168\n                                                matrix_sum: 6847.632355006126\n                                                interzonal_sum: 5856.410708543197\n                                                intrazonal_sum: 991.2216464629287\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: NHBO\n                                                    level: 6\n                                                    zone_count: 168\n                                                    matrix_sum: 10935.805786614672\n                                                    interzonal_sum: 9352.804998133042\n                                                    intrazonal_sum: 1583.0007884816296\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Road\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: NHBO\n                                                        level: 6\n                                                        zone_count: 168\n                                                        matrix_sum: 11222.166666666664\n                                                        interzonal_sum: 9592.506630616705\n                                                        intrazonal_sum: 1629.6600360499597\n                                                        Comments:\n                                                        Created by disaggregate_matrix operation on the following matrix:\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Road\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: NHBO\n                                                            level: 6\n                                                            zone_count: 120\n                                                            matrix_sum: 11222.166666666664\n                                                            interzonal_sum: 10988.999999999998\n                                                            intrazonal_sum: 233.16666666666663\n                                                            Comments:\n                                                            Created by copy operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: NHBO\n                                                                level: 6\n                                                                zone_count: 120\n                                                                matrix_sum: 11222.166666666664\n                                                                interzonal_sum: 10988.999999999998\n                                                                intrazonal_sum: 233.16666666666663\n                                                                Comments:\n                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: NHBO\n                                                                    level: 6\n                                                                    zone_count: 120\n                                                                    matrix_sum: 67333.0\n                                                                    interzonal_sum: 65934.0\n                                                                    intrazonal_sum: 1399.0\n                                                                    Comments:\n                                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Road.csv\n                                                                    MND Raw Data\n                                                                    \n                                                                ]\n                                                                <built-in function mul>\n                                                                [\n                                                                    0.16666666666666666\n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Bus\n                                                        value_type: proportions\n                                                        time_period: Inter_peak\n                                                        purpose: NHBO\n                                                        level: 6\n                                                        zone_count: 168\n                                                        matrix_sum: 23221.914504880937\n                                                        interzonal_sum: 23071.107214164425\n                                                        intrazonal_sum: 150.8072907165112\n                                                        Comments:\n                                                        Created by copy operation on the following matrix:\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Bus\n                                                            value_type: proportions\n                                                            time_period: Inter_peak\n                                                            purpose: NHBO\n                                                            level: 6\n                                                            zone_count: 168\n                                                            matrix_sum: 23221.914504880937\n                                                            interzonal_sum: 23071.107214164425\n                                                            intrazonal_sum: 150.8072907165112\n                                                            Comments:\n                                                            Created by operation <built-in function sub> (reverse: True) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: NHBO\n                                                                level: 6\n                                                                zone_count: 168\n                                                                matrix_sum: 5002.085495119061\n                                                                interzonal_sum: 4984.892785835573\n                                                                intrazonal_sum: 17.19270928348882\n                                                                Comments:\n                                                                Created by generate_proportion_matrix operation on the following matrices:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: NHBO\n                                                                    level: 6\n                                                                    zone_count: 168\n                                                                    matrix_sum: 551.6708\n                                                                    interzonal_sum: 476.33559\n                                                                    intrazonal_sum: 75.33520999999999\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: NHBO\n                                                                        level: 6\n                                                                        zone_count: 168\n                                                                        matrix_sum: 551.6708\n                                                                        interzonal_sum: 476.33559\n                                                                        intrazonal_sum: 75.33520999999999\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: NHBO\n                                                                            level: 5\n                                                                            zone_count: 168\n                                                                            matrix_sum: 551.6708\n                                                                            interzonal_sum: 476.33559\n                                                                            intrazonal_sum: 75.33520999999999\n                                                                            Comments:\n                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: NHBO\n                                                                            level: 5\n                                                                            zone_count: 168\n                                                                            matrix_sum: 551.6708\n                                                                            interzonal_sum: 476.33559\n                                                                            intrazonal_sum: 75.33520999999999\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: NHBO\n                                                                    level: 6\n                                                                    zone_count: 168\n                                                                    matrix_sum: 11222.166666666664\n                                                                    interzonal_sum: 9592.506630616705\n                                                                    intrazonal_sum: 1629.6600360499597\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: NHBO\n                                                                        level: 6\n                                                                        zone_count: 168\n                                                                        matrix_sum: 11222.166666666664\n                                                                        interzonal_sum: 9592.506630616705\n                                                                        intrazonal_sum: 1629.6600360499597\n                                                                        Comments:\n                                                                        Created by disaggregate_matrix operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: NHBO\n                                                                            level: 6\n                                                                            zone_count: 120\n                                                                            matrix_sum: 11222.166666666664\n                                                                            interzonal_sum: 10988.999999999998\n                                                                            intrazonal_sum: 233.16666666666663\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: NHBO\n                                                                                level: 6\n                                                                                zone_count: 120\n                                                                                matrix_sum: 11222.166666666664\n                                                                                interzonal_sum: 10988.999999999998\n                                                                                intrazonal_sum: 233.16666666666663\n                                                                                Comments:\n                                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: NHBO\n                                                                                    level: 6\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 67333.0\n                                                                                    interzonal_sum: 65934.0\n                                                                                    intrazonal_sum: 1399.0\n                                                                                    Comments:\n                                                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Road.csv\n                                                                                    MND Raw Data\n                                                                                    \n                                                                                ]\n                                                                                <built-in function mul>\n                                                                                [\n                                                                                    0.16666666666666666\n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function sub>\n                                                            [\n                                                                [[1. 1. 1. ... 1. 1. 1.]\n                                                                [1. 1. 1. ... 1. 1. 1.]\n                                                                [1. 1. 1. ... 1. 1. 1.]\n                                                                ...\n                                                                [1. 1. 1. ... 1. 1. 1.]\n                                                                [1. 1. 1. ... 1. 1. 1.]\n                                                                [1. 1. 1. ... 1. 1. 1.]]\n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    0.6261662367292192\n                                                ]\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                1.0\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            <built-in function mul>\n                            [\n                                0.9831146684909792\n                            ]\n                            \n                        ]\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        1.0\n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    1.25\n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Car\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: NHBO\n        level: 5\n        zone_count: 168\n        matrix_sum: 1177.95054\n        interzonal_sum: 542.08452\n        intrazonal_sum: 635.86602\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBO\n            level: 5\n            zone_count: 168\n            matrix_sum: 1177.95054\n            interzonal_sum: 542.08452\n            intrazonal_sum: 635.86602\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Car\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBO\n                level: 5\n                zone_count: 168\n                matrix_sum: 1388.0952499999999\n                interzonal_sum: 752.2292299999998\n                intrazonal_sum: 635.86602\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 6952.91053\n                    interzonal_sum: 2545.477680000001\n                    intrazonal_sum: 4407.432849999999\n                    Comments:\n                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_car_Inter_peak_v2.csv\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 6952.91053\n                    interzonal_sum: 2545.477680000001\n                    intrazonal_sum: 4407.432849999999\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[ True  True  True ... False False False]\n                    [ True  True  True ... False False False]\n                    [ True  True  True ... False False False]\n                    ...\n                    [False False False ... False False False]\n                    [False False False ... False False False]\n                    [False False False ... False False False]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Highway\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: NHBO\n    level: 5\n    zone_count: 168\n    matrix_sum: 10080.457545502073\n    interzonal_sum: 6308.890715502073\n    intrazonal_sum: 3771.56683\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Highway\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: NHBO\n        level: 5\n        zone_count: 168\n        matrix_sum: 10080.457545502073\n        interzonal_sum: 6308.890715502073\n        intrazonal_sum: 3771.56683\n        Comments:\n        Created by operation <built-in function add> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Highway\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: NHBO\n            level: 5\n            zone_count: 168\n            matrix_sum: 5529.876745502073\n            interzonal_sum: 5529.876745502073\n            intrazonal_sum: 0.0\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Highway\n                value_type: Vehicle Trips\n                time_period: Inter_peak\n                purpose: NHBO\n                level: 5\n                zone_count: 168\n                matrix_sum: 6203.748641592099\n                interzonal_sum: 5550.175253641281\n                intrazonal_sum: 653.5733879508182\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Highway\n                    value_type: Vehicle Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 6248.427999847749\n                    interzonal_sum: 5581.2629171111\n                    intrazonal_sum: 667.1650827366481\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Highway\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 4998.7423998782\n                        interzonal_sum: 4465.0103336888815\n                        intrazonal_sum: 533.7320661893185\n                        Comments:\n                        Created by operation <built-in function mul> (reverse: False) on\n                        [\n                            Matrix Object\n                            vehicle_type: Highway\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: NHBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 4998.7423998782\n                            interzonal_sum: 4465.0103336888815\n                            intrazonal_sum: 533.7320661893185\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Highway\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: NHBO\n                                level: 8\n                                zone_count: 168\n                                matrix_sum: 4998.7423998782\n                                interzonal_sum: 4465.0103336888815\n                                intrazonal_sum: 533.7320661893185\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: car\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBO\n                                    level: 8\n                                    zone_count: 168\n                                    matrix_sum: 5084.597514500484\n                                    interzonal_sum: 4541.698417075191\n                                    intrazonal_sum: 542.8990974252928\n                                    Comments:\n                                    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: NHBO\n                                        level: 8\n                                        zone_count: 168\n                                        matrix_sum: 6847.632355006126\n                                        interzonal_sum: 5856.410708543197\n                                        intrazonal_sum: 991.2216464629287\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: NHBO\n                                            level: 8\n                                            zone_count: 168\n                                            matrix_sum: 6847.632355006126\n                                            interzonal_sum: 5856.410708543197\n                                            intrazonal_sum: 991.2216464629287\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: NHBO\n                                                level: 6\n                                                zone_count: 168\n                                                matrix_sum: 6847.632355006126\n                                                interzonal_sum: 5856.410708543197\n                                                intrazonal_sum: 991.2216464629287\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: NHBO\n                                                    level: 6\n                                                    zone_count: 168\n                                                    matrix_sum: 6847.632355006126\n                                                    interzonal_sum: 5856.410708543197\n                                                    intrazonal_sum: 991.2216464629287\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: NHBO\n                                                        level: 6\n                                                        zone_count: 168\n                                                        matrix_sum: 10935.805786614672\n                                                        interzonal_sum: 9352.804998133042\n                                                        intrazonal_sum: 1583.0007884816296\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Road\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: NHBO\n                                                            level: 6\n                                                            zone_count: 168\n                                                            matrix_sum: 11222.166666666664\n                                                            interzonal_sum: 9592.506630616705\n                                                            intrazonal_sum: 1629.6600360499597\n                                                            Comments:\n                                                            Created by disaggregate_matrix operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: NHBO\n                                                                level: 6\n                                                                zone_count: 120\n                                                                matrix_sum: 11222.166666666664\n                                                                interzonal_sum: 10988.999999999998\n                                                                intrazonal_sum: 233.16666666666663\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: NHBO\n                                                                    level: 6\n                                                                    zone_count: 120\n                                                                    matrix_sum: 11222.166666666664\n                                                                    interzonal_sum: 10988.999999999998\n                                                                    intrazonal_sum: 233.16666666666663\n                                                                    Comments:\n                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: NHBO\n                                                                        level: 6\n                                                                        zone_count: 120\n                                                                        matrix_sum: 67333.0\n                                                                        interzonal_sum: 65934.0\n                                                                        intrazonal_sum: 1399.0\n                                                                        Comments:\n                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Road.csv\n                                                                        MND Raw Data\n                                                                        \n                                                                    ]\n                                                                    <built-in function mul>\n                                                                    [\n                                                                        0.16666666666666666\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Bus\n                                                            value_type: proportions\n                                                            time_period: Inter_peak\n                                                            purpose: NHBO\n                                                            level: 6\n                                                            zone_count: 168\n                                                            matrix_sum: 23221.914504880937\n                                                            interzonal_sum: 23071.107214164425\n                                                            intrazonal_sum: 150.8072907165112\n                                                            Comments:\n                                                            Created by copy operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: NHBO\n                                                                level: 6\n                                                                zone_count: 168\n                                                                matrix_sum: 23221.914504880937\n                                                                interzonal_sum: 23071.107214164425\n                                                                intrazonal_sum: 150.8072907165112\n                                                                Comments:\n                                                                Created by operation <built-in function sub> (reverse: True) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: NHBO\n                                                                    level: 6\n                                                                    zone_count: 168\n                                                                    matrix_sum: 5002.085495119061\n                                                                    interzonal_sum: 4984.892785835573\n                                                                    intrazonal_sum: 17.19270928348882\n                                                                    Comments:\n                                                                    Created by generate_proportion_matrix operation on the following matrices:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: NHBO\n                                                                        level: 6\n                                                                        zone_count: 168\n                                                                        matrix_sum: 551.6708\n                                                                        interzonal_sum: 476.33559\n                                                                        intrazonal_sum: 75.33520999999999\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: NHBO\n                                                                            level: 6\n                                                                            zone_count: 168\n                                                                            matrix_sum: 551.6708\n                                                                            interzonal_sum: 476.33559\n                                                                            intrazonal_sum: 75.33520999999999\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: NHBO\n                                                                                level: 5\n                                                                                zone_count: 168\n                                                                                matrix_sum: 551.6708\n                                                                                interzonal_sum: 476.33559\n                                                                                intrazonal_sum: 75.33520999999999\n                                                                                Comments:\n                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: NHBO\n                                                                                level: 5\n                                                                                zone_count: 168\n                                                                                matrix_sum: 551.6708\n                                                                                interzonal_sum: 476.33559\n                                                                                intrazonal_sum: 75.33520999999999\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: NHBO\n                                                                        level: 6\n                                                                        zone_count: 168\n                                                                        matrix_sum: 11222.166666666664\n                                                                        interzonal_sum: 9592.506630616705\n                                                                        intrazonal_sum: 1629.6600360499597\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: NHBO\n                                                                            level: 6\n                                                                            zone_count: 168\n                                                                            matrix_sum: 11222.166666666664\n                                                                            interzonal_sum: 9592.506630616705\n                                                                            intrazonal_sum: 1629.6600360499597\n                                                                            Comments:\n                                                                            Created by disaggregate_matrix operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: NHBO\n                                                                                level: 6\n                                                                                zone_count: 120\n                                                                                matrix_sum: 11222.166666666664\n                                                                                interzonal_sum: 10988.999999999998\n                                                                                intrazonal_sum: 233.16666666666663\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: NHBO\n                                                                                    level: 6\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 11222.166666666664\n                                                                                    interzonal_sum: 10988.999999999998\n                                                                                    intrazonal_sum: 233.16666666666663\n                                                                                    Comments:\n                                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: NHBO\n                                                                                        level: 6\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 67333.0\n                                                                                        interzonal_sum: 65934.0\n                                                                                        intrazonal_sum: 1399.0\n                                                                                        Comments:\n                                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Road.csv\n                                                                                        MND Raw Data\n                                                                                        \n                                                                                    ]\n                                                                                    <built-in function mul>\n                                                                                    [\n                                                                                        0.16666666666666666\n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                <built-in function sub>\n                                                                [\n                                                                    [[1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    ...\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]]\n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        0.6261662367292192\n                                                    ]\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    1.0\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    0.9831146684909792\n                                ]\n                                \n                            ]\n                            \n                        ]\n                        <built-in function mul>\n                        [\n                            1.0\n                        ]\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        1.25\n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        <built-in function add>\n        [\n            Matrix Object\n            vehicle_type: Car\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBO\n            level: 5\n            zone_count: 168\n            matrix_sum: 4550.5808\n            interzonal_sum: 779.0139699999995\n            intrazonal_sum: 3771.56683\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Car\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBO\n                level: 5\n                zone_count: 168\n                matrix_sum: 4550.5808\n                interzonal_sum: 779.0139699999995\n                intrazonal_sum: 3771.56683\n                Comments:\n                Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Car\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 5564.81528\n                    interzonal_sum: 1793.2484499999996\n                    intrazonal_sum: 3771.56683\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Car\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 6952.91053\n                        interzonal_sum: 2545.477680000001\n                        intrazonal_sum: 4407.432849999999\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_car_Inter_peak_v2.csv\n                        Matrix Object\n                        vehicle_type: Car\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 6952.91053\n                        interzonal_sum: 2545.477680000001\n                        intrazonal_sum: 4407.432849999999\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        [[False False False ...  True  True  True]\n                        [False False False ...  True  True  True]\n                        [False False False ...  True  True  True]\n                        ...\n                        [ True  True  True ...  True  True  True]\n                        [ True  True  True ...  True  True  True]\n                        [ True  True  True ...  True  True  True]]\n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Car\nvalue_type: Vehicle Trips\ntime_period: Inter_peak\npurpose: NHBO\nlevel: 5\nzone_count: 168\nmatrix_sum: 61.49764756940213\ninterzonal_sum: 61.49764756940213\nintrazonal_sum: 0.0\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Car\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: NHBO\n    level: 5\n    zone_count: 168\n    matrix_sum: 61.49764756940213\n    interzonal_sum: 61.49764756940213\n    intrazonal_sum: 0.0\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Car\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: NHBO\n        level: 8\n        zone_count: 168\n        matrix_sum: 61.49764756940213\n        interzonal_sum: 61.49764756940213\n        intrazonal_sum: 0.0\n        Comments:\n        Created by redistribute_matrix (remaining matrix) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBO\n            level: 8\n            zone_count: 168\n            matrix_sum: 184.83333333333331\n            interzonal_sum: 183.52128000091085\n            intrazonal_sum: 1.312053332422464\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBO\n                level: 8\n                zone_count: 168\n                matrix_sum: 184.83333333333331\n                interzonal_sum: 183.52128000091085\n                intrazonal_sum: 1.312053332422464\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 6\n                    zone_count: 168\n                    matrix_sum: 184.83333333333331\n                    interzonal_sum: 183.52128000091085\n                    intrazonal_sum: 1.312053332422464\n                    Comments:\n                    Created by disaggregate_matrix operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 6\n                        zone_count: 120\n                        matrix_sum: 184.8333333333333\n                        interzonal_sum: 183.66666666666663\n                        intrazonal_sum: 1.1666666666666667\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBO\n                            level: 6\n                            zone_count: 120\n                            matrix_sum: 184.8333333333333\n                            interzonal_sum: 183.66666666666663\n                            intrazonal_sum: 1.1666666666666667\n                            Comments:\n                            Created by operation <built-in function mul> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBO\n                                level: 6\n                                zone_count: 120\n                                matrix_sum: 1109.0\n                                interzonal_sum: 1102.0\n                                intrazonal_sum: 7.0\n                                Comments:\n                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Rail.csv\n                                MND Raw Data\n                                \n                            ]\n                            <built-in function mul>\n                            [\n                                0.16666666666666666\n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://6": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {}, "_zones": {"py/id": 3}, "_source_file": {"py/id": 5}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 6, "_purpose": "LGV", "_time_period": "Inter_peak", "_vehicle_type": "Highway", "_value_type": "Vehicle Trips", "_comments": "Created by operation <built-in function mul> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Highway\nvalue_type: Vehicle Trips\ntime_period: Inter_peak\npurpose: LGV\nlevel: 6\nzone_count: 168\nmatrix_sum: 5023.456590873323\ninterzonal_sum: 3784.4757763382604\nintrazonal_sum: 1238.9808145350626\nComments:\nCreated by operation <built-in function mul> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Highway\n    value_type: Vehicle Trips\n    time_period: Inter_peak\n    purpose: LGV\n    level: 6\n    zone_count: 168\n    matrix_sum: 5023.456590873323\n    interzonal_sum: 3784.4757763382604\n    intrazonal_sum: 1238.9808145350626\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: LGV\n        value_type: Vehicle Trips\n        time_period: Inter_peak\n        purpose: LGV\n        level: 9\n        zone_count: 168\n        matrix_sum: 5023.456590873323\n        interzonal_sum: 3784.4757763382604\n        intrazonal_sum: 1238.9808145350626\n        Comments:\n        Created by operation <built-in function mul> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: LGV\n            value_type: Vehicle Trips\n            time_period: Inter_peak\n            purpose: LGV\n            level: 1\n            zone_count: 168\n            matrix_sum: 4425.753095572585\n            interzonal_sum: 3334.189333432001\n            intrazonal_sum: 1091.5637621405838\n            Comments:\n            Created by operation <built-in function add> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: LGV\n                value_type: Vehicle Trips\n                time_period: Inter_peak\n                purpose: LGV\n                level: 1\n                zone_count: 168\n                matrix_sum: 2662.718255066941\n                interzonal_sum: 2019.477041963993\n                intrazonal_sum: 643.2412131029478\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: LGV\n                    value_type: Vehicle Trips\n                    time_period: Inter_peak\n                    purpose: LGV\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 917.6552676463064\n                    interzonal_sum: 717.5060229490994\n                    intrazonal_sum: 200.14924469720694\n                    Comments:\n                    Created by operation <built-in function add> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: LGV\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: LGV\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 917.6552676463064\n                        interzonal_sum: 717.5060229490994\n                        intrazonal_sum: 200.14924469720694\n                        Comments:\n                        Created by operation <built-in function add> (reverse: False) on\n                        [\n                            Matrix Object\n                            vehicle_type: LGV\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: LGV\n                            level: 1\n                            zone_count: 168\n                            matrix_sum: 917.6552676463064\n                            interzonal_sum: 717.5060229490994\n                            intrazonal_sum: 200.14924469720694\n                            Comments:\n                            Created by operation <built-in function add> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: LGV\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: LGV\n                                level: 1\n                                zone_count: 168\n                                matrix_sum: 917.6552676463064\n                                interzonal_sum: 717.5060229490994\n                                intrazonal_sum: 200.14924469720694\n                                Comments:\n                                Created by operation <built-in function add> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: LGV\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: LGV\n                                    level: 1\n                                    zone_count: 168\n                                    matrix_sum: 917.6552676463064\n                                    interzonal_sum: 717.5060229490994\n                                    intrazonal_sum: 200.14924469720694\n                                    Comments:\n                                    Created by operation <built-in function add> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: LGV\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: LGV\n                                        level: 1\n                                        zone_count: 168\n                                        matrix_sum: 602.0401860773138\n                                        interzonal_sum: 470.0674521701616\n                                        intrazonal_sum: 131.97273390715225\n                                        Comments:\n                                        Created by operation <built-in function add> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: LGV\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: LGV\n                                            level: 1\n                                            zone_count: 168\n                                            matrix_sum: 0.0\n                                            interzonal_sum: 0.0\n                                            intrazonal_sum: 0.0\n                                            \n                                        ]\n                                        <built-in function add>\n                                        [\n                                            Matrix Object\n                                            vehicle_type: lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBW\n                                            level: 1\n                                            zone_count: 168\n                                            matrix_sum: 602.0401860773138\n                                            interzonal_sum: 470.0674521701616\n                                            intrazonal_sum: 131.97273390715225\n                                            Comments:\n                                            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBW\n                                                level: 1\n                                                zone_count: 168\n                                                matrix_sum: 5071.609184687709\n                                                interzonal_sum: 4303.824785493672\n                                                intrazonal_sum: 767.7843991940372\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBW\n                                                    level: 1\n                                                    zone_count: 168\n                                                    matrix_sum: 5071.609184687709\n                                                    interzonal_sum: 4303.824785493672\n                                                    intrazonal_sum: 767.7843991940372\n                                                    Comments:\n                                                    Created by copy operation on the following matrix:\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Vehicle Trips\n                                                        time_period: Inter_peak\n                                                        purpose: IB_HBW\n                                                        level: 1\n                                                        zone_count: 168\n                                                        matrix_sum: 5071.609184687709\n                                                        interzonal_sum: 4303.824785493672\n                                                        intrazonal_sum: 767.7843991940372\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: car+lgv\n                                                            value_type: Vehicle Trips\n                                                            time_period: Inter_peak\n                                                            purpose: IB_HBW\n                                                            level: 1\n                                                            zone_count: 168\n                                                            matrix_sum: 5071.609184687709\n                                                            interzonal_sum: 4303.824785493672\n                                                            intrazonal_sum: 767.7843991940372\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: car+lgv\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBW\n                                                                level: 1\n                                                                zone_count: 168\n                                                                matrix_sum: 5883.530349436854\n                                                                interzonal_sum: 4992.8302481512665\n                                                                intrazonal_sum: 890.7001012855874\n                                                                Comments:\n                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBW\n                                                                    level: 1\n                                                                    zone_count: 168\n                                                                    matrix_sum: 6139.333333333334\n                                                                    interzonal_sum: 5147.136433007419\n                                                                    intrazonal_sum: 992.1969003259146\n                                                                    Comments:\n                                                                    Created by disaggregate_matrix operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBW\n                                                                        level: 1\n                                                                        zone_count: 120\n                                                                        matrix_sum: 6139.333333333333\n                                                                        interzonal_sum: 6005.666666666666\n                                                                        intrazonal_sum: 133.66666666666666\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBW\n                                                                            level: 1\n                                                                            zone_count: 120\n                                                                            matrix_sum: 6139.333333333333\n                                                                            interzonal_sum: 6005.666666666666\n                                                                            intrazonal_sum: 133.66666666666666\n                                                                            Comments:\n                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBW\n                                                                                level: 1\n                                                                                zone_count: 120\n                                                                                matrix_sum: 36836.0\n                                                                                interzonal_sum: 36034.0\n                                                                                intrazonal_sum: 802.0\n                                                                                Comments:\n                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Road.csv\n                                                                                MND Raw Data\n                                                                                \n                                                                            ]\n                                                                            <built-in function mul>\n                                                                            [\n                                                                                0.16666666666666666\n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                <built-in function mul>\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBW\n                                                                    level: 1\n                                                                    zone_count: 168\n                                                                    matrix_sum: 19963.04156085114\n                                                                    interzonal_sum: 19850.930635286815\n                                                                    intrazonal_sum: 112.11092556432493\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: proportions\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBW\n                                                                        level: 1\n                                                                        zone_count: 168\n                                                                        matrix_sum: 19963.04156085114\n                                                                        interzonal_sum: 19850.930635286815\n                                                                        intrazonal_sum: 112.11092556432493\n                                                                        Comments:\n                                                                        Created by operation <built-in function sub> (reverse: True) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: proportions\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBW\n                                                                            level: 1\n                                                                            zone_count: 168\n                                                                            matrix_sum: 8260.958439148859\n                                                                            interzonal_sum: 8205.069364713183\n                                                                            intrazonal_sum: 55.88907443567507\n                                                                            Comments:\n                                                                            Created by generate_proportion_matrix operation on the following matrices:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBW\n                                                                                level: 1\n                                                                                zone_count: 168\n                                                                                matrix_sum: 617.5941578025438\n                                                                                interzonal_sum: 364.2108118323465\n                                                                                intrazonal_sum: 253.38334597019733\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: IB_HBW\n                                                                                    level: 1\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 617.5941578025438\n                                                                                    interzonal_sum: 364.2108118323465\n                                                                                    intrazonal_sum: 253.38334597019733\n                                                                                    Comments:\n                                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBW\n                                                                                        level: 1\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 937.2388699999999\n                                                                                        interzonal_sum: 552.7133399999999\n                                                                                        intrazonal_sum: 384.52553\n                                                                                        Comments:\n                                                                                        Created by copy operation on the following matrix:\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Bus\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: HBW\n                                                                                            level: 1\n                                                                                            zone_count: 168\n                                                                                            matrix_sum: 937.2388699999999\n                                                                                            interzonal_sum: 552.7133399999999\n                                                                                            intrazonal_sum: 384.52553\n                                                                                            Comments:\n                                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Bus\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: HBW\n                                                                                            level: 1\n                                                                                            zone_count: 168\n                                                                                            matrix_sum: 937.2388699999999\n                                                                                            interzonal_sum: 552.7133399999999\n                                                                                            intrazonal_sum: 384.52553\n                                                                                            \n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    <built-in function mul>\n                                                                                    [\n                                                                                        0.6589506448900736\n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBW\n                                                                                level: 1\n                                                                                zone_count: 168\n                                                                                matrix_sum: 6139.333333333334\n                                                                                interzonal_sum: 5147.136433007419\n                                                                                intrazonal_sum: 992.1969003259146\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: IB_HBW\n                                                                                    level: 1\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 6139.333333333334\n                                                                                    interzonal_sum: 5147.136433007419\n                                                                                    intrazonal_sum: 992.1969003259146\n                                                                                    Comments:\n                                                                                    Created by disaggregate_matrix operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: IB_HBW\n                                                                                        level: 1\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 6139.333333333333\n                                                                                        interzonal_sum: 6005.666666666666\n                                                                                        intrazonal_sum: 133.66666666666666\n                                                                                        Comments:\n                                                                                        Created by copy operation on the following matrix:\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Road\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: IB_HBW\n                                                                                            level: 1\n                                                                                            zone_count: 120\n                                                                                            matrix_sum: 6139.333333333333\n                                                                                            interzonal_sum: 6005.666666666666\n                                                                                            intrazonal_sum: 133.66666666666666\n                                                                                            Comments:\n                                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                                            [\n                                                                                                Matrix Object\n                                                                                                vehicle_type: Road\n                                                                                                value_type: Person Trips\n                                                                                                time_period: Inter_peak\n                                                                                                purpose: IB_HBW\n                                                                                                level: 1\n                                                                                                zone_count: 120\n                                                                                                matrix_sum: 36836.0\n                                                                                                interzonal_sum: 36034.0\n                                                                                                intrazonal_sum: 802.0\n                                                                                                Comments:\n                                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Road.csv\n                                                                                                MND Raw Data\n                                                                                                \n                                                                                            ]\n                                                                                            <built-in function mul>\n                                                                                            [\n                                                                                                0.16666666666666666\n                                                                                            ]\n                                                                                            \n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        <built-in function sub>\n                                                                        [\n                                                                            [[1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            ...\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                                            [1. 1. 1. ... 1. 1. 1.]]\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                0.8620010237855137\n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            1.0\n                                                        ]\n                                                        \n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    <built-in function add>\n                                    [\n                                        Matrix Object\n                                        vehicle_type: lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBW\n                                        level: 2\n                                        zone_count: 168\n                                        matrix_sum: 315.61508156899265\n                                        interzonal_sum: 247.43857077893796\n                                        intrazonal_sum: 68.17651079005469\n                                        Comments:\n                                        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBW\n                                            level: 2\n                                            zone_count: 168\n                                            matrix_sum: 2630.125679741606\n                                            interzonal_sum: 2184.362093997899\n                                            intrazonal_sum: 445.7635857437069\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBW\n                                                level: 2\n                                                zone_count: 168\n                                                matrix_sum: 2630.125679741606\n                                                interzonal_sum: 2184.362093997899\n                                                intrazonal_sum: 445.7635857437069\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBW\n                                                    level: 2\n                                                    zone_count: 168\n                                                    matrix_sum: 2630.125679741606\n                                                    interzonal_sum: 2184.362093997899\n                                                    intrazonal_sum: 445.7635857437069\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Vehicle Trips\n                                                        time_period: Inter_peak\n                                                        purpose: OB_HBW\n                                                        level: 2\n                                                        zone_count: 168\n                                                        matrix_sum: 2630.125679741606\n                                                        interzonal_sum: 2184.362093997899\n                                                        intrazonal_sum: 445.7635857437069\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: car+lgv\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: OB_HBW\n                                                            level: 2\n                                                            zone_count: 168\n                                                            matrix_sum: 3051.18625983911\n                                                            interzonal_sum: 2534.0597443900706\n                                                            intrazonal_sum: 517.1265154490391\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBW\n                                                                level: 2\n                                                                zone_count: 168\n                                                                matrix_sum: 3177.5\n                                                                interzonal_sum: 2606.7013184764573\n                                                                intrazonal_sum: 570.7986815235428\n                                                                Comments:\n                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBW\n                                                                    level: 2\n                                                                    zone_count: 120\n                                                                    matrix_sum: 3177.5\n                                                                    interzonal_sum: 3106.5\n                                                                    intrazonal_sum: 71.0\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBW\n                                                                        level: 2\n                                                                        zone_count: 120\n                                                                        matrix_sum: 3177.5\n                                                                        interzonal_sum: 3106.5\n                                                                        intrazonal_sum: 71.0\n                                                                        Comments:\n                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBW\n                                                                            level: 2\n                                                                            zone_count: 120\n                                                                            matrix_sum: 19065.0\n                                                                            interzonal_sum: 18639.0\n                                                                            intrazonal_sum: 426.0\n                                                                            Comments:\n                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Road.csv\n                                                                            MND Raw Data\n                                                                            \n                                                                        ]\n                                                                        <built-in function mul>\n                                                                        [\n                                                                            0.16666666666666666\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBW\n                                                                level: 2\n                                                                zone_count: 168\n                                                                matrix_sum: 19758.683090014063\n                                                                interzonal_sum: 19648.139165167122\n                                                                intrazonal_sum: 110.54392484694247\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBW\n                                                                    level: 2\n                                                                    zone_count: 168\n                                                                    matrix_sum: 19758.683090014063\n                                                                    interzonal_sum: 19648.139165167122\n                                                                    intrazonal_sum: 110.54392484694247\n                                                                    Comments:\n                                                                    Created by operation <built-in function sub> (reverse: True) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: proportions\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBW\n                                                                        level: 2\n                                                                        zone_count: 168\n                                                                        matrix_sum: 8465.316909985935\n                                                                        interzonal_sum: 8407.860834832878\n                                                                        intrazonal_sum: 57.456075153057526\n                                                                        Comments:\n                                                                        Created by generate_proportion_matrix operation on the following matrices:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBW\n                                                                            level: 2\n                                                                            zone_count: 168\n                                                                            matrix_sum: 319.64471219745616\n                                                                            interzonal_sum: 188.5025281676535\n                                                                            intrazonal_sum: 131.14218402980265\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBW\n                                                                                level: 2\n                                                                                zone_count: 168\n                                                                                matrix_sum: 319.64471219745616\n                                                                                interzonal_sum: 188.5025281676535\n                                                                                intrazonal_sum: 131.14218402980265\n                                                                                Comments:\n                                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBW\n                                                                                    level: 1\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 937.2388699999999\n                                                                                    interzonal_sum: 552.7133399999999\n                                                                                    intrazonal_sum: 384.52553\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBW\n                                                                                        level: 1\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 937.2388699999999\n                                                                                        interzonal_sum: 552.7133399999999\n                                                                                        intrazonal_sum: 384.52553\n                                                                                        Comments:\n                                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBW\n                                                                                        level: 1\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 937.2388699999999\n                                                                                        interzonal_sum: 552.7133399999999\n                                                                                        intrazonal_sum: 384.52553\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                <built-in function mul>\n                                                                                [\n                                                                                    0.3410493551099264\n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBW\n                                                                            level: 2\n                                                                            zone_count: 168\n                                                                            matrix_sum: 3177.5\n                                                                            interzonal_sum: 2606.7013184764573\n                                                                            intrazonal_sum: 570.7986815235428\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBW\n                                                                                level: 2\n                                                                                zone_count: 168\n                                                                                matrix_sum: 3177.5\n                                                                                interzonal_sum: 2606.7013184764573\n                                                                                intrazonal_sum: 570.7986815235428\n                                                                                Comments:\n                                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: OB_HBW\n                                                                                    level: 2\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 3177.5\n                                                                                    interzonal_sum: 3106.5\n                                                                                    intrazonal_sum: 71.0\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: OB_HBW\n                                                                                        level: 2\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 3177.5\n                                                                                        interzonal_sum: 3106.5\n                                                                                        intrazonal_sum: 71.0\n                                                                                        Comments:\n                                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Road\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: OB_HBW\n                                                                                            level: 2\n                                                                                            zone_count: 120\n                                                                                            matrix_sum: 19065.0\n                                                                                            interzonal_sum: 18639.0\n                                                                                            intrazonal_sum: 426.0\n                                                                                            Comments:\n                                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Road.csv\n                                                                                            MND Raw Data\n                                                                                            \n                                                                                        ]\n                                                                                        <built-in function mul>\n                                                                                        [\n                                                                                            0.16666666666666666\n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    <built-in function sub>\n                                                                    [\n                                                                        [[1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        ...\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]]\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            0.8620010237855137\n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                <built-in function add>\n                                [\n                                    Matrix Object\n                                    vehicle_type: lgv\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBEmp\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 0.0\n                                    interzonal_sum: 0.0\n                                    intrazonal_sum: 0.0\n                                    Comments:\n                                    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBEmp\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 493.721892849333\n                                        interzonal_sum: 431.1847196481406\n                                        intrazonal_sum: 62.53717320119243\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBEmp\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 493.721892849333\n                                            interzonal_sum: 431.1847196481406\n                                            intrazonal_sum: 62.53717320119243\n                                            Comments:\n                                            Created by furness_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 168\n                                                matrix_sum: 10736.370183347668\n                                                interzonal_sum: 9313.561353652323\n                                                intrazonal_sum: 1422.8088296953451\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 168\n                                                    matrix_sum: 10736.370183347668\n                                                    interzonal_sum: 9313.561353652323\n                                                    intrazonal_sum: 1422.8088296953451\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Vehicle Trips\n                                                        time_period: Inter_peak\n                                                        purpose: IB_HBO\n                                                        level: 3\n                                                        zone_count: 168\n                                                        matrix_sum: 10736.370183347668\n                                                        interzonal_sum: 9313.561353652323\n                                                        intrazonal_sum: 1422.8088296953451\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: car+lgv\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: IB_HBO\n                                                            level: 3\n                                                            zone_count: 168\n                                                            matrix_sum: 17146.197852233498\n                                                            interzonal_sum: 14873.943702716606\n                                                            intrazonal_sum: 2272.2541495168925\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBO\n                                                                level: 3\n                                                                zone_count: 168\n                                                                matrix_sum: 18644.166666666664\n                                                                interzonal_sum: 15586.982047541609\n                                                                intrazonal_sum: 3057.1846191250543\n                                                                Comments:\n                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBO\n                                                                    level: 3\n                                                                    zone_count: 120\n                                                                    matrix_sum: 18644.166666666664\n                                                                    interzonal_sum: 18218.333333333332\n                                                                    intrazonal_sum: 425.83333333333337\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBO\n                                                                        level: 3\n                                                                        zone_count: 120\n                                                                        matrix_sum: 18644.166666666664\n                                                                        interzonal_sum: 18218.333333333332\n                                                                        intrazonal_sum: 425.83333333333337\n                                                                        Comments:\n                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 120\n                                                                            matrix_sum: 111865.0\n                                                                            interzonal_sum: 109310.0\n                                                                            intrazonal_sum: 2555.0\n                                                                            Comments:\n                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                                            MND Raw Data\n                                                                            \n                                                                        ]\n                                                                        <built-in function mul>\n                                                                        [\n                                                                            0.16666666666666666\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBO\n                                                                level: 3\n                                                                zone_count: 168\n                                                                matrix_sum: 19905.914423117276\n                                                                interzonal_sum: 19769.841921683088\n                                                                intrazonal_sum: 136.07250143418923\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBO\n                                                                    level: 3\n                                                                    zone_count: 168\n                                                                    matrix_sum: 19905.914423117276\n                                                                    interzonal_sum: 19769.841921683088\n                                                                    intrazonal_sum: 136.07250143418923\n                                                                    Comments:\n                                                                    Created by operation <built-in function sub> (reverse: True) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: proportions\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBO\n                                                                        level: 3\n                                                                        zone_count: 168\n                                                                        matrix_sum: 8318.085576882724\n                                                                        interzonal_sum: 8286.158078316914\n                                                                        intrazonal_sum: 31.927498565810748\n                                                                        Comments:\n                                                                        Created by generate_proportion_matrix operation on the following matrices:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 168\n                                                                            matrix_sum: 4798.478509209596\n                                                                            interzonal_sum: 2233.4337989913206\n                                                                            intrazonal_sum: 2565.0447102182757\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBO\n                                                                                level: 3\n                                                                                zone_count: 168\n                                                                                matrix_sum: 4798.478509209596\n                                                                                interzonal_sum: 2233.4337989913206\n                                                                                intrazonal_sum: 2565.0447102182757\n                                                                                Comments:\n                                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBO\n                                                                                    level: 3\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 9232.433079999999\n                                                                                    interzonal_sum: 4297.201299999999\n                                                                                    intrazonal_sum: 4935.23178\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        Comments:\n                                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Bus\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: HBO\n                                                                                        level: 3\n                                                                                        zone_count: 168\n                                                                                        matrix_sum: 9232.433079999999\n                                                                                        interzonal_sum: 4297.201299999999\n                                                                                        intrazonal_sum: 4935.23178\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                <built-in function mul>\n                                                                                [\n                                                                                    0.5197414882545346\n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 168\n                                                                            matrix_sum: 18644.166666666664\n                                                                            interzonal_sum: 15586.982047541609\n                                                                            intrazonal_sum: 3057.1846191250543\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBO\n                                                                                level: 3\n                                                                                zone_count: 168\n                                                                                matrix_sum: 18644.166666666664\n                                                                                interzonal_sum: 15586.982047541609\n                                                                                intrazonal_sum: 3057.1846191250543\n                                                                                Comments:\n                                                                                Created by disaggregate_matrix operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: IB_HBO\n                                                                                    level: 3\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 18644.166666666664\n                                                                                    interzonal_sum: 18218.333333333332\n                                                                                    intrazonal_sum: 425.83333333333337\n                                                                                    Comments:\n                                                                                    Created by copy operation on the following matrix:\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: IB_HBO\n                                                                                        level: 3\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 18644.166666666664\n                                                                                        interzonal_sum: 18218.333333333332\n                                                                                        intrazonal_sum: 425.83333333333337\n                                                                                        Comments:\n                                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                                        [\n                                                                                            Matrix Object\n                                                                                            vehicle_type: Road\n                                                                                            value_type: Person Trips\n                                                                                            time_period: Inter_peak\n                                                                                            purpose: IB_HBO\n                                                                                            level: 3\n                                                                                            zone_count: 120\n                                                                                            matrix_sum: 111865.0\n                                                                                            interzonal_sum: 109310.0\n                                                                                            intrazonal_sum: 2555.0\n                                                                                            Comments:\n                                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                                                            MND Raw Data\n                                                                                            \n                                                                                        ]\n                                                                                        <built-in function mul>\n                                                                                        [\n                                                                                            0.16666666666666666\n                                                                                        ]\n                                                                                        \n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    <built-in function sub>\n                                                                    [\n                                                                        [[1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        ...\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]\n                                                                        [1. 1. 1. ... 1. 1. 1.]]\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            0.6261662367292192\n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            Convergence Information:\n                                            1: count: 168, col_pass: 19, row_pass: 27\n                                            2: count: 168, col_pass: 13, row_pass: 24\n                                            3: count: 168, col_pass: 34, row_pass: 38\n                                            4: count: 168, col_pass: 46, row_pass: 81\n                                            5: count: 168, col_pass: 167, row_pass: 168\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            <built-in function add>\n                            [\n                                Matrix Object\n                                vehicle_type: lgv\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBEmp\n                                level: 4\n                                zone_count: 168\n                                matrix_sum: 0.0\n                                interzonal_sum: 0.0\n                                intrazonal_sum: 0.0\n                                Comments:\n                                Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: car+lgv\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBEmp\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 455.0390724944645\n                                    interzonal_sum: 395.0816107250254\n                                    intrazonal_sum: 59.957461769439064\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBEmp\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 455.0390724944645\n                                        interzonal_sum: 395.0816107250254\n                                        intrazonal_sum: 59.957461769439064\n                                        Comments:\n                                        Created by furness_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 168\n                                            matrix_sum: 9952.580488478656\n                                            interzonal_sum: 8557.152615828738\n                                            intrazonal_sum: 1395.427872649917\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 168\n                                                matrix_sum: 9952.580488478656\n                                                interzonal_sum: 8557.152615828738\n                                                intrazonal_sum: 1395.427872649917\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Vehicle Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 168\n                                                    matrix_sum: 9952.580488478656\n                                                    interzonal_sum: 8557.152615828738\n                                                    intrazonal_sum: 1395.427872649917\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: car+lgv\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: OB_HBO\n                                                        level: 4\n                                                        zone_count: 168\n                                                        matrix_sum: 15894.47003796625\n                                                        interzonal_sum: 13665.94382432219\n                                                        intrazonal_sum: 2228.5262136440597\n                                                        Comments:\n                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Road\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: OB_HBO\n                                                            level: 4\n                                                            zone_count: 168\n                                                            matrix_sum: 17227.833333333332\n                                                            interzonal_sum: 14274.684396516754\n                                                            intrazonal_sum: 2953.1489368165776\n                                                            Comments:\n                                                            Created by disaggregate_matrix operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBO\n                                                                level: 4\n                                                                zone_count: 120\n                                                                matrix_sum: 17227.833333333332\n                                                                interzonal_sum: 16815.0\n                                                                intrazonal_sum: 412.8333333333333\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBO\n                                                                    level: 4\n                                                                    zone_count: 120\n                                                                    matrix_sum: 17227.833333333332\n                                                                    interzonal_sum: 16815.0\n                                                                    intrazonal_sum: 412.8333333333333\n                                                                    Comments:\n                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBO\n                                                                        level: 4\n                                                                        zone_count: 120\n                                                                        matrix_sum: 103367.0\n                                                                        interzonal_sum: 100890.0\n                                                                        intrazonal_sum: 2477.0\n                                                                        Comments:\n                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                                        MND Raw Data\n                                                                        \n                                                                    ]\n                                                                    <built-in function mul>\n                                                                    [\n                                                                        0.16666666666666666\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function mul>\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Bus\n                                                            value_type: proportions\n                                                            time_period: Inter_peak\n                                                            purpose: OB_HBO\n                                                            level: 4\n                                                            zone_count: 168\n                                                            matrix_sum: 19921.737968770776\n                                                            interzonal_sum: 19789.43480495916\n                                                            intrazonal_sum: 132.30316381161484\n                                                            Comments:\n                                                            Created by copy operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBO\n                                                                level: 4\n                                                                zone_count: 168\n                                                                matrix_sum: 19921.737968770776\n                                                                interzonal_sum: 19789.43480495916\n                                                                intrazonal_sum: 132.30316381161484\n                                                                Comments:\n                                                                Created by operation <built-in function sub> (reverse: True) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: proportions\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBO\n                                                                    level: 4\n                                                                    zone_count: 168\n                                                                    matrix_sum: 8302.262031229224\n                                                                    interzonal_sum: 8266.56519504084\n                                                                    intrazonal_sum: 35.69683618838515\n                                                                    Comments:\n                                                                    Created by generate_proportion_matrix operation on the following matrices:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBO\n                                                                        level: 4\n                                                                        zone_count: 168\n                                                                        matrix_sum: 4433.9545707904035\n                                                                        interzonal_sum: 2063.7675010086796\n                                                                        intrazonal_sum: 2370.187069781724\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBO\n                                                                            level: 4\n                                                                            zone_count: 168\n                                                                            matrix_sum: 4433.9545707904035\n                                                                            interzonal_sum: 2063.7675010086796\n                                                                            intrazonal_sum: 2370.187069781724\n                                                                            Comments:\n                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: HBO\n                                                                                level: 3\n                                                                                zone_count: 168\n                                                                                matrix_sum: 9232.433079999999\n                                                                                interzonal_sum: 4297.201299999999\n                                                                                intrazonal_sum: 4935.23178\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBO\n                                                                                    level: 3\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 9232.433079999999\n                                                                                    interzonal_sum: 4297.201299999999\n                                                                                    intrazonal_sum: 4935.23178\n                                                                                    Comments:\n                                                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Bus\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: HBO\n                                                                                    level: 3\n                                                                                    zone_count: 168\n                                                                                    matrix_sum: 9232.433079999999\n                                                                                    interzonal_sum: 4297.201299999999\n                                                                                    intrazonal_sum: 4935.23178\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            <built-in function mul>\n                                                                            [\n                                                                                0.4802585117454654\n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBO\n                                                                        level: 4\n                                                                        zone_count: 168\n                                                                        matrix_sum: 17227.833333333332\n                                                                        interzonal_sum: 14274.684396516754\n                                                                        intrazonal_sum: 2953.1489368165776\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBO\n                                                                            level: 4\n                                                                            zone_count: 168\n                                                                            matrix_sum: 17227.833333333332\n                                                                            interzonal_sum: 14274.684396516754\n                                                                            intrazonal_sum: 2953.1489368165776\n                                                                            Comments:\n                                                                            Created by disaggregate_matrix operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBO\n                                                                                level: 4\n                                                                                zone_count: 120\n                                                                                matrix_sum: 17227.833333333332\n                                                                                interzonal_sum: 16815.0\n                                                                                intrazonal_sum: 412.8333333333333\n                                                                                Comments:\n                                                                                Created by copy operation on the following matrix:\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: OB_HBO\n                                                                                    level: 4\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 17227.833333333332\n                                                                                    interzonal_sum: 16815.0\n                                                                                    intrazonal_sum: 412.8333333333333\n                                                                                    Comments:\n                                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                                    [\n                                                                                        Matrix Object\n                                                                                        vehicle_type: Road\n                                                                                        value_type: Person Trips\n                                                                                        time_period: Inter_peak\n                                                                                        purpose: OB_HBO\n                                                                                        level: 4\n                                                                                        zone_count: 120\n                                                                                        matrix_sum: 103367.0\n                                                                                        interzonal_sum: 100890.0\n                                                                                        intrazonal_sum: 2477.0\n                                                                                        Comments:\n                                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                                                        MND Raw Data\n                                                                                        \n                                                                                    ]\n                                                                                    <built-in function mul>\n                                                                                    [\n                                                                                        0.16666666666666666\n                                                                                    ]\n                                                                                    \n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                <built-in function sub>\n                                                                [\n                                                                    [[1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    ...\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                                    [1. 1. 1. ... 1. 1. 1.]]\n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        0.6261662367292192\n                                                    ]\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    1.0\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        Convergence Information:\n                                        1: count: 168, col_pass: 11, row_pass: 19\n                                        2: count: 168, col_pass: 16, row_pass: 16\n                                        3: count: 168, col_pass: 21, row_pass: 21\n                                        4: count: 168, col_pass: 26, row_pass: 31\n                                        5: count: 168, col_pass: 38, row_pass: 42\n                                        6: count: 168, col_pass: 64, row_pass: 143\n                                        7: count: 168, col_pass: 168, row_pass: 168\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        <built-in function add>\n                        [\n                            Matrix Object\n                            vehicle_type: lgv\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 0.0\n                            interzonal_sum: 0.0\n                            intrazonal_sum: 0.0\n                            Comments:\n                            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: car+lgv\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBO\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 10242.232149578638\n                                interzonal_sum: 8877.575296936142\n                                intrazonal_sum: 1364.6568526424956\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: car+lgv\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 5\n                                    zone_count: 168\n                                    matrix_sum: 10242.232149578638\n                                    interzonal_sum: 8877.575296936142\n                                    intrazonal_sum: 1364.6568526424956\n                                    Comments:\n                                    Created by furness_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 10736.370183347668\n                                        interzonal_sum: 9313.561353652323\n                                        intrazonal_sum: 1422.8088296953451\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 10736.370183347668\n                                            interzonal_sum: 9313.561353652323\n                                            intrazonal_sum: 1422.8088296953451\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Vehicle Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 168\n                                                matrix_sum: 10736.370183347668\n                                                interzonal_sum: 9313.561353652323\n                                                intrazonal_sum: 1422.8088296953451\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: car+lgv\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 168\n                                                    matrix_sum: 17146.197852233498\n                                                    interzonal_sum: 14873.943702716606\n                                                    intrazonal_sum: 2272.2541495168925\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Road\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: IB_HBO\n                                                        level: 3\n                                                        zone_count: 168\n                                                        matrix_sum: 18644.166666666664\n                                                        interzonal_sum: 15586.982047541609\n                                                        intrazonal_sum: 3057.1846191250543\n                                                        Comments:\n                                                        Created by disaggregate_matrix operation on the following matrix:\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Road\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: IB_HBO\n                                                            level: 3\n                                                            zone_count: 120\n                                                            matrix_sum: 18644.166666666664\n                                                            interzonal_sum: 18218.333333333332\n                                                            intrazonal_sum: 425.83333333333337\n                                                            Comments:\n                                                            Created by copy operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBO\n                                                                level: 3\n                                                                zone_count: 120\n                                                                matrix_sum: 18644.166666666664\n                                                                interzonal_sum: 18218.333333333332\n                                                                intrazonal_sum: 425.83333333333337\n                                                                Comments:\n                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBO\n                                                                    level: 3\n                                                                    zone_count: 120\n                                                                    matrix_sum: 111865.0\n                                                                    interzonal_sum: 109310.0\n                                                                    intrazonal_sum: 2555.0\n                                                                    Comments:\n                                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                                    MND Raw Data\n                                                                    \n                                                                ]\n                                                                <built-in function mul>\n                                                                [\n                                                                    0.16666666666666666\n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Bus\n                                                        value_type: proportions\n                                                        time_period: Inter_peak\n                                                        purpose: IB_HBO\n                                                        level: 3\n                                                        zone_count: 168\n                                                        matrix_sum: 19905.914423117276\n                                                        interzonal_sum: 19769.841921683088\n                                                        intrazonal_sum: 136.07250143418923\n                                                        Comments:\n                                                        Created by copy operation on the following matrix:\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Bus\n                                                            value_type: proportions\n                                                            time_period: Inter_peak\n                                                            purpose: IB_HBO\n                                                            level: 3\n                                                            zone_count: 168\n                                                            matrix_sum: 19905.914423117276\n                                                            interzonal_sum: 19769.841921683088\n                                                            intrazonal_sum: 136.07250143418923\n                                                            Comments:\n                                                            Created by operation <built-in function sub> (reverse: True) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: proportions\n                                                                time_period: Inter_peak\n                                                                purpose: IB_HBO\n                                                                level: 3\n                                                                zone_count: 168\n                                                                matrix_sum: 8318.085576882724\n                                                                interzonal_sum: 8286.158078316914\n                                                                intrazonal_sum: 31.927498565810748\n                                                                Comments:\n                                                                Created by generate_proportion_matrix operation on the following matrices:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBO\n                                                                    level: 3\n                                                                    zone_count: 168\n                                                                    matrix_sum: 4798.478509209596\n                                                                    interzonal_sum: 2233.4337989913206\n                                                                    intrazonal_sum: 2565.0447102182757\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBO\n                                                                        level: 3\n                                                                        zone_count: 168\n                                                                        matrix_sum: 4798.478509209596\n                                                                        interzonal_sum: 2233.4337989913206\n                                                                        intrazonal_sum: 2565.0447102182757\n                                                                        Comments:\n                                                                        Created by operation <built-in function mul> (reverse: False) on\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: HBO\n                                                                            level: 3\n                                                                            zone_count: 168\n                                                                            matrix_sum: 9232.433079999999\n                                                                            interzonal_sum: 4297.201299999999\n                                                                            intrazonal_sum: 4935.23178\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: HBO\n                                                                                level: 3\n                                                                                zone_count: 168\n                                                                                matrix_sum: 9232.433079999999\n                                                                                interzonal_sum: 4297.201299999999\n                                                                                intrazonal_sum: 4935.23178\n                                                                                Comments:\n                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                                Matrix Object\n                                                                                vehicle_type: Bus\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: HBO\n                                                                                level: 3\n                                                                                zone_count: 168\n                                                                                matrix_sum: 9232.433079999999\n                                                                                interzonal_sum: 4297.201299999999\n                                                                                intrazonal_sum: 4935.23178\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        <built-in function mul>\n                                                                        [\n                                                                            0.5197414882545346\n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: IB_HBO\n                                                                    level: 3\n                                                                    zone_count: 168\n                                                                    matrix_sum: 18644.166666666664\n                                                                    interzonal_sum: 15586.982047541609\n                                                                    intrazonal_sum: 3057.1846191250543\n                                                                    Comments:\n                                                                    Created by copy operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: IB_HBO\n                                                                        level: 3\n                                                                        zone_count: 168\n                                                                        matrix_sum: 18644.166666666664\n                                                                        interzonal_sum: 15586.982047541609\n                                                                        intrazonal_sum: 3057.1846191250543\n                                                                        Comments:\n                                                                        Created by disaggregate_matrix operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: IB_HBO\n                                                                            level: 3\n                                                                            zone_count: 120\n                                                                            matrix_sum: 18644.166666666664\n                                                                            interzonal_sum: 18218.333333333332\n                                                                            intrazonal_sum: 425.83333333333337\n                                                                            Comments:\n                                                                            Created by copy operation on the following matrix:\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: IB_HBO\n                                                                                level: 3\n                                                                                zone_count: 120\n                                                                                matrix_sum: 18644.166666666664\n                                                                                interzonal_sum: 18218.333333333332\n                                                                                intrazonal_sum: 425.83333333333337\n                                                                                Comments:\n                                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                                [\n                                                                                    Matrix Object\n                                                                                    vehicle_type: Road\n                                                                                    value_type: Person Trips\n                                                                                    time_period: Inter_peak\n                                                                                    purpose: IB_HBO\n                                                                                    level: 3\n                                                                                    zone_count: 120\n                                                                                    matrix_sum: 111865.0\n                                                                                    interzonal_sum: 109310.0\n                                                                                    intrazonal_sum: 2555.0\n                                                                                    Comments:\n                                                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n                                                                                    MND Raw Data\n                                                                                    \n                                                                                ]\n                                                                                <built-in function mul>\n                                                                                [\n                                                                                    0.16666666666666666\n                                                                                ]\n                                                                                \n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            <built-in function sub>\n                                                            [\n                                                                [[1. 1. 1. ... 1. 1. 1.]\n                                                                [1. 1. 1. ... 1. 1. 1.]\n                                                                [1. 1. 1. ... 1. 1. 1.]\n                                                                ...\n                                                                [1. 1. 1. ... 1. 1. 1.]\n                                                                [1. 1. 1. ... 1. 1. 1.]\n                                                                [1. 1. 1. ... 1. 1. 1.]]\n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    0.6261662367292192\n                                                ]\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                1.0\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    Convergence Information:\n                                    1: count: 168, col_pass: 135, row_pass: 168\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    <built-in function add>\n                    [\n                        Matrix Object\n                        vehicle_type: lgv\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBO\n                        level: 6\n                        zone_count: 168\n                        matrix_sum: 0.0\n                        interzonal_sum: 0.0\n                        intrazonal_sum: 0.0\n                        Comments:\n                        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: car+lgv\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBO\n                            level: 6\n                            zone_count: 168\n                            matrix_sum: 9496.775842551866\n                            interzonal_sum: 8156.443670989143\n                            intrazonal_sum: 1340.3321715627226\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: car+lgv\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 9496.775842551866\n                                interzonal_sum: 8156.443670989143\n                                intrazonal_sum: 1340.3321715627226\n                                Comments:\n                                Created by furness_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: car+lgv\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 9952.580488478656\n                                    interzonal_sum: 8557.152615828738\n                                    intrazonal_sum: 1395.427872649917\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Vehicle Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 9952.580488478656\n                                        interzonal_sum: 8557.152615828738\n                                        intrazonal_sum: 1395.427872649917\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: car+lgv\n                                            value_type: Vehicle Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 168\n                                            matrix_sum: 9952.580488478656\n                                            interzonal_sum: 8557.152615828738\n                                            intrazonal_sum: 1395.427872649917\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: car+lgv\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 168\n                                                matrix_sum: 15894.47003796625\n                                                interzonal_sum: 13665.94382432219\n                                                intrazonal_sum: 2228.5262136440597\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Road\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 168\n                                                    matrix_sum: 17227.833333333332\n                                                    interzonal_sum: 14274.684396516754\n                                                    intrazonal_sum: 2953.1489368165776\n                                                    Comments:\n                                                    Created by disaggregate_matrix operation on the following matrix:\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Road\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: OB_HBO\n                                                        level: 4\n                                                        zone_count: 120\n                                                        matrix_sum: 17227.833333333332\n                                                        interzonal_sum: 16815.0\n                                                        intrazonal_sum: 412.8333333333333\n                                                        Comments:\n                                                        Created by copy operation on the following matrix:\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Road\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: OB_HBO\n                                                            level: 4\n                                                            zone_count: 120\n                                                            matrix_sum: 17227.833333333332\n                                                            interzonal_sum: 16815.0\n                                                            intrazonal_sum: 412.8333333333333\n                                                            Comments:\n                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBO\n                                                                level: 4\n                                                                zone_count: 120\n                                                                matrix_sum: 103367.0\n                                                                interzonal_sum: 100890.0\n                                                                intrazonal_sum: 2477.0\n                                                                Comments:\n                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                                MND Raw Data\n                                                                \n                                                            ]\n                                                            <built-in function mul>\n                                                            [\n                                                                0.16666666666666666\n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Bus\n                                                    value_type: proportions\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 168\n                                                    matrix_sum: 19921.737968770776\n                                                    interzonal_sum: 19789.43480495916\n                                                    intrazonal_sum: 132.30316381161484\n                                                    Comments:\n                                                    Created by copy operation on the following matrix:\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Bus\n                                                        value_type: proportions\n                                                        time_period: Inter_peak\n                                                        purpose: OB_HBO\n                                                        level: 4\n                                                        zone_count: 168\n                                                        matrix_sum: 19921.737968770776\n                                                        interzonal_sum: 19789.43480495916\n                                                        intrazonal_sum: 132.30316381161484\n                                                        Comments:\n                                                        Created by operation <built-in function sub> (reverse: True) on\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Bus\n                                                            value_type: proportions\n                                                            time_period: Inter_peak\n                                                            purpose: OB_HBO\n                                                            level: 4\n                                                            zone_count: 168\n                                                            matrix_sum: 8302.262031229224\n                                                            interzonal_sum: 8266.56519504084\n                                                            intrazonal_sum: 35.69683618838515\n                                                            Comments:\n                                                            Created by generate_proportion_matrix operation on the following matrices:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBO\n                                                                level: 4\n                                                                zone_count: 168\n                                                                matrix_sum: 4433.9545707904035\n                                                                interzonal_sum: 2063.7675010086796\n                                                                intrazonal_sum: 2370.187069781724\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Bus\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBO\n                                                                    level: 4\n                                                                    zone_count: 168\n                                                                    matrix_sum: 4433.9545707904035\n                                                                    interzonal_sum: 2063.7675010086796\n                                                                    intrazonal_sum: 2370.187069781724\n                                                                    Comments:\n                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Bus\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: HBO\n                                                                        level: 3\n                                                                        zone_count: 168\n                                                                        matrix_sum: 9232.433079999999\n                                                                        interzonal_sum: 4297.201299999999\n                                                                        intrazonal_sum: 4935.23178\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: HBO\n                                                                            level: 3\n                                                                            zone_count: 168\n                                                                            matrix_sum: 9232.433079999999\n                                                                            interzonal_sum: 4297.201299999999\n                                                                            intrazonal_sum: 4935.23178\n                                                                            Comments:\n                                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                            Matrix Object\n                                                                            vehicle_type: Bus\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: HBO\n                                                                            level: 3\n                                                                            zone_count: 168\n                                                                            matrix_sum: 9232.433079999999\n                                                                            interzonal_sum: 4297.201299999999\n                                                                            intrazonal_sum: 4935.23178\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    <built-in function mul>\n                                                                    [\n                                                                        0.4802585117454654\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: OB_HBO\n                                                                level: 4\n                                                                zone_count: 168\n                                                                matrix_sum: 17227.833333333332\n                                                                interzonal_sum: 14274.684396516754\n                                                                intrazonal_sum: 2953.1489368165776\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: OB_HBO\n                                                                    level: 4\n                                                                    zone_count: 168\n                                                                    matrix_sum: 17227.833333333332\n                                                                    interzonal_sum: 14274.684396516754\n                                                                    intrazonal_sum: 2953.1489368165776\n                                                                    Comments:\n                                                                    Created by disaggregate_matrix operation on the following matrix:\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: OB_HBO\n                                                                        level: 4\n                                                                        zone_count: 120\n                                                                        matrix_sum: 17227.833333333332\n                                                                        interzonal_sum: 16815.0\n                                                                        intrazonal_sum: 412.8333333333333\n                                                                        Comments:\n                                                                        Created by copy operation on the following matrix:\n                                                                        [\n                                                                            Matrix Object\n                                                                            vehicle_type: Road\n                                                                            value_type: Person Trips\n                                                                            time_period: Inter_peak\n                                                                            purpose: OB_HBO\n                                                                            level: 4\n                                                                            zone_count: 120\n                                                                            matrix_sum: 17227.833333333332\n                                                                            interzonal_sum: 16815.0\n                                                                            intrazonal_sum: 412.8333333333333\n                                                                            Comments:\n                                                                            Created by operation <built-in function mul> (reverse: False) on\n                                                                            [\n                                                                                Matrix Object\n                                                                                vehicle_type: Road\n                                                                                value_type: Person Trips\n                                                                                time_period: Inter_peak\n                                                                                purpose: OB_HBO\n                                                                                level: 4\n                                                                                zone_count: 120\n                                                                                matrix_sum: 103367.0\n                                                                                interzonal_sum: 100890.0\n                                                                                intrazonal_sum: 2477.0\n                                                                                Comments:\n                                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n                                                                                MND Raw Data\n                                                                                \n                                                                            ]\n                                                                            <built-in function mul>\n                                                                            [\n                                                                                0.16666666666666666\n                                                                            ]\n                                                                            \n                                                                        ]\n                                                                        \n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        <built-in function sub>\n                                                        [\n                                                            [[1. 1. 1. ... 1. 1. 1.]\n                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                            ...\n                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                            [1. 1. 1. ... 1. 1. 1.]\n                                                            [1. 1. 1. ... 1. 1. 1.]]\n                                                        ]\n                                                        \n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                0.6261662367292192\n                                            ]\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            1.0\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                Convergence Information:\n                                1: count: 168, col_pass: 129, row_pass: 166\n                                2: count: 168, col_pass: 168, row_pass: 168\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: lgv\n                    value_type: Vehicle Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 7\n                    zone_count: 168\n                    matrix_sum: 1745.062987420635\n                    interzonal_sum: 1301.971019014894\n                    intrazonal_sum: 443.0919684057409\n                    Comments:\n                    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: car+lgv\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 7\n                        zone_count: 168\n                        matrix_sum: 4586.411447092498\n                        interzonal_sum: 3819.394365368856\n                        intrazonal_sum: 767.0170817236417\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: car+lgv\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: NHBW\n                            level: 7\n                            zone_count: 168\n                            matrix_sum: 4586.411447092498\n                            interzonal_sum: 3819.394365368856\n                            intrazonal_sum: 767.0170817236417\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: car+lgv\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: NHBW\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 4586.411447092498\n                                interzonal_sum: 3819.394365368856\n                                intrazonal_sum: 767.0170817236417\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: car+lgv\n                                    value_type: Vehicle Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBW\n                                    level: 5\n                                    zone_count: 168\n                                    matrix_sum: 4586.411447092498\n                                    interzonal_sum: 3819.394365368856\n                                    intrazonal_sum: 767.0170817236417\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: car+lgv\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: NHBW\n                                        level: 5\n                                        zone_count: 168\n                                        matrix_sum: 5480.971346157556\n                                        interzonal_sum: 4564.3508694653165\n                                        intrazonal_sum: 916.6204766922392\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Road\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: NHBW\n                                            level: 5\n                                            zone_count: 168\n                                            matrix_sum: 5515.833333333332\n                                            interzonal_sum: 4586.9693468978385\n                                            intrazonal_sum: 928.8639864354935\n                                            Comments:\n                                            Created by disaggregate_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Road\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: NHBW\n                                                level: 5\n                                                zone_count: 120\n                                                matrix_sum: 5515.833333333333\n                                                interzonal_sum: 5372.5\n                                                intrazonal_sum: 143.33333333333331\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Road\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: NHBW\n                                                    level: 5\n                                                    zone_count: 120\n                                                    matrix_sum: 5515.833333333333\n                                                    interzonal_sum: 5372.5\n                                                    intrazonal_sum: 143.33333333333331\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Road\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: NHBW\n                                                        level: 5\n                                                        zone_count: 120\n                                                        matrix_sum: 33095.0\n                                                        interzonal_sum: 32235.0\n                                                        intrazonal_sum: 860.0\n                                                        Comments:\n                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Road.csv\n                                                        MND Raw Data\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        0.16666666666666666\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Bus\n                                            value_type: proportions\n                                            time_period: Inter_peak\n                                            purpose: NHBW\n                                            level: 5\n                                            zone_count: 168\n                                            matrix_sum: 25921.63963095064\n                                            interzonal_sum: 25761.42875325735\n                                            intrazonal_sum: 160.2108776932899\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Bus\n                                                value_type: proportions\n                                                time_period: Inter_peak\n                                                purpose: NHBW\n                                                level: 5\n                                                zone_count: 168\n                                                matrix_sum: 25921.63963095064\n                                                interzonal_sum: 25761.42875325735\n                                                intrazonal_sum: 160.2108776932899\n                                                Comments:\n                                                Created by operation <built-in function sub> (reverse: True) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Bus\n                                                    value_type: proportions\n                                                    time_period: Inter_peak\n                                                    purpose: NHBW\n                                                    level: 5\n                                                    zone_count: 168\n                                                    matrix_sum: 2302.360369049361\n                                                    interzonal_sum: 2294.571246742651\n                                                    intrazonal_sum: 7.789122306710133\n                                                    Comments:\n                                                    Created by generate_proportion_matrix operation on the following matrices:\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Bus\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: NHBW\n                                                        level: 5\n                                                        zone_count: 168\n                                                        matrix_sum: 57.878730000000004\n                                                        interzonal_sum: 40.68838000000001\n                                                        intrazonal_sum: 17.19035\n                                                        Comments:\n                                                        Created by copy operation on the following matrix:\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Bus\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: NHBW\n                                                            level: 5\n                                                            zone_count: 168\n                                                            matrix_sum: 57.878730000000004\n                                                            interzonal_sum: 40.68838000000001\n                                                            intrazonal_sum: 17.19035\n                                                            Comments:\n                                                            Created by copy operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: NHBW\n                                                                level: 4\n                                                                zone_count: 168\n                                                                matrix_sum: 57.878730000000004\n                                                                interzonal_sum: 40.68838000000001\n                                                                intrazonal_sum: 17.19035\n                                                                Comments:\n                                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                                Matrix Object\n                                                                vehicle_type: Bus\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: NHBW\n                                                                level: 4\n                                                                zone_count: 168\n                                                                matrix_sum: 57.878730000000004\n                                                                interzonal_sum: 40.68838000000001\n                                                                intrazonal_sum: 17.19035\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Road\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: NHBW\n                                                        level: 5\n                                                        zone_count: 168\n                                                        matrix_sum: 5515.833333333332\n                                                        interzonal_sum: 4586.9693468978385\n                                                        intrazonal_sum: 928.8639864354935\n                                                        Comments:\n                                                        Created by copy operation on the following matrix:\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Road\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: NHBW\n                                                            level: 5\n                                                            zone_count: 168\n                                                            matrix_sum: 5515.833333333332\n                                                            interzonal_sum: 4586.9693468978385\n                                                            intrazonal_sum: 928.8639864354935\n                                                            Comments:\n                                                            Created by disaggregate_matrix operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: NHBW\n                                                                level: 5\n                                                                zone_count: 120\n                                                                matrix_sum: 5515.833333333333\n                                                                interzonal_sum: 5372.5\n                                                                intrazonal_sum: 143.33333333333331\n                                                                Comments:\n                                                                Created by copy operation on the following matrix:\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: NHBW\n                                                                    level: 5\n                                                                    zone_count: 120\n                                                                    matrix_sum: 5515.833333333333\n                                                                    interzonal_sum: 5372.5\n                                                                    intrazonal_sum: 143.33333333333331\n                                                                    Comments:\n                                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                                    [\n                                                                        Matrix Object\n                                                                        vehicle_type: Road\n                                                                        value_type: Person Trips\n                                                                        time_period: Inter_peak\n                                                                        purpose: NHBW\n                                                                        level: 5\n                                                                        zone_count: 120\n                                                                        matrix_sum: 33095.0\n                                                                        interzonal_sum: 32235.0\n                                                                        intrazonal_sum: 860.0\n                                                                        Comments:\n                                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Road.csv\n                                                                        MND Raw Data\n                                                                        \n                                                                    ]\n                                                                    <built-in function mul>\n                                                                    [\n                                                                        0.16666666666666666\n                                                                    ]\n                                                                    \n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    \n                                                ]\n                                                <built-in function sub>\n                                                [\n                                                    [[1. 1. 1. ... 1. 1. 1.]\n                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                    ...\n                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                    [1. 1. 1. ... 1. 1. 1.]\n                                                    [1. 1. 1. ... 1. 1. 1.]]\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        0.8367880723017845\n                                    ]\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    1.0\n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function add>\n            [\n                Matrix Object\n                vehicle_type: lgv\n                value_type: Vehicle Trips\n                time_period: Inter_peak\n                purpose: NHBO\n                level: 8\n                zone_count: 168\n                matrix_sum: 1763.034840505644\n                interzonal_sum: 1314.712291468008\n                intrazonal_sum: 448.32254903763595\n                Comments:\n                Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: car+lgv\n                    value_type: Vehicle Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 8\n                    zone_count: 168\n                    matrix_sum: 6847.632355006126\n                    interzonal_sum: 5856.410708543197\n                    intrazonal_sum: 991.2216464629287\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: car+lgv\n                        value_type: Vehicle Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 8\n                        zone_count: 168\n                        matrix_sum: 6847.632355006126\n                        interzonal_sum: 5856.410708543197\n                        intrazonal_sum: 991.2216464629287\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: car+lgv\n                            value_type: Vehicle Trips\n                            time_period: Inter_peak\n                            purpose: NHBO\n                            level: 6\n                            zone_count: 168\n                            matrix_sum: 6847.632355006126\n                            interzonal_sum: 5856.410708543197\n                            intrazonal_sum: 991.2216464629287\n                            Comments:\n                            Created by operation <built-in function mul> (reverse: False) on\n                            [\n                                Matrix Object\n                                vehicle_type: car+lgv\n                                value_type: Vehicle Trips\n                                time_period: Inter_peak\n                                purpose: NHBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 6847.632355006126\n                                interzonal_sum: 5856.410708543197\n                                intrazonal_sum: 991.2216464629287\n                                Comments:\n                                Created by operation <built-in function mul> (reverse: False) on\n                                [\n                                    Matrix Object\n                                    vehicle_type: car+lgv\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBO\n                                    level: 6\n                                    zone_count: 168\n                                    matrix_sum: 10935.805786614672\n                                    interzonal_sum: 9352.804998133042\n                                    intrazonal_sum: 1583.0007884816296\n                                    Comments:\n                                    Created by operation <built-in function mul> (reverse: False) on\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Road\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: NHBO\n                                        level: 6\n                                        zone_count: 168\n                                        matrix_sum: 11222.166666666664\n                                        interzonal_sum: 9592.506630616705\n                                        intrazonal_sum: 1629.6600360499597\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Road\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: NHBO\n                                            level: 6\n                                            zone_count: 120\n                                            matrix_sum: 11222.166666666664\n                                            interzonal_sum: 10988.999999999998\n                                            intrazonal_sum: 233.16666666666663\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Road\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: NHBO\n                                                level: 6\n                                                zone_count: 120\n                                                matrix_sum: 11222.166666666664\n                                                interzonal_sum: 10988.999999999998\n                                                intrazonal_sum: 233.16666666666663\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Road\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: NHBO\n                                                    level: 6\n                                                    zone_count: 120\n                                                    matrix_sum: 67333.0\n                                                    interzonal_sum: 65934.0\n                                                    intrazonal_sum: 1399.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Road.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    0.16666666666666666\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    <built-in function mul>\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Bus\n                                        value_type: proportions\n                                        time_period: Inter_peak\n                                        purpose: NHBO\n                                        level: 6\n                                        zone_count: 168\n                                        matrix_sum: 23221.914504880937\n                                        interzonal_sum: 23071.107214164425\n                                        intrazonal_sum: 150.8072907165112\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Bus\n                                            value_type: proportions\n                                            time_period: Inter_peak\n                                            purpose: NHBO\n                                            level: 6\n                                            zone_count: 168\n                                            matrix_sum: 23221.914504880937\n                                            interzonal_sum: 23071.107214164425\n                                            intrazonal_sum: 150.8072907165112\n                                            Comments:\n                                            Created by operation <built-in function sub> (reverse: True) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Bus\n                                                value_type: proportions\n                                                time_period: Inter_peak\n                                                purpose: NHBO\n                                                level: 6\n                                                zone_count: 168\n                                                matrix_sum: 5002.085495119061\n                                                interzonal_sum: 4984.892785835573\n                                                intrazonal_sum: 17.19270928348882\n                                                Comments:\n                                                Created by generate_proportion_matrix operation on the following matrices:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Bus\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: NHBO\n                                                    level: 6\n                                                    zone_count: 168\n                                                    matrix_sum: 551.6708\n                                                    interzonal_sum: 476.33559\n                                                    intrazonal_sum: 75.33520999999999\n                                                    Comments:\n                                                    Created by copy operation on the following matrix:\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Bus\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: NHBO\n                                                        level: 6\n                                                        zone_count: 168\n                                                        matrix_sum: 551.6708\n                                                        interzonal_sum: 476.33559\n                                                        intrazonal_sum: 75.33520999999999\n                                                        Comments:\n                                                        Created by copy operation on the following matrix:\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Bus\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: NHBO\n                                                            level: 5\n                                                            zone_count: 168\n                                                            matrix_sum: 551.6708\n                                                            interzonal_sum: 476.33559\n                                                            intrazonal_sum: 75.33520999999999\n                                                            Comments:\n                                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_bus_Inter_peak.csv\n                                                            Matrix Object\n                                                            vehicle_type: Bus\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: NHBO\n                                                            level: 5\n                                                            zone_count: 168\n                                                            matrix_sum: 551.6708\n                                                            interzonal_sum: 476.33559\n                                                            intrazonal_sum: 75.33520999999999\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    \n                                                ]\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Road\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: NHBO\n                                                    level: 6\n                                                    zone_count: 168\n                                                    matrix_sum: 11222.166666666664\n                                                    interzonal_sum: 9592.506630616705\n                                                    intrazonal_sum: 1629.6600360499597\n                                                    Comments:\n                                                    Created by copy operation on the following matrix:\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Road\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: NHBO\n                                                        level: 6\n                                                        zone_count: 168\n                                                        matrix_sum: 11222.166666666664\n                                                        interzonal_sum: 9592.506630616705\n                                                        intrazonal_sum: 1629.6600360499597\n                                                        Comments:\n                                                        Created by disaggregate_matrix operation on the following matrix:\n                                                        [\n                                                            Matrix Object\n                                                            vehicle_type: Road\n                                                            value_type: Person Trips\n                                                            time_period: Inter_peak\n                                                            purpose: NHBO\n                                                            level: 6\n                                                            zone_count: 120\n                                                            matrix_sum: 11222.166666666664\n                                                            interzonal_sum: 10988.999999999998\n                                                            intrazonal_sum: 233.16666666666663\n                                                            Comments:\n                                                            Created by copy operation on the following matrix:\n                                                            [\n                                                                Matrix Object\n                                                                vehicle_type: Road\n                                                                value_type: Person Trips\n                                                                time_period: Inter_peak\n                                                                purpose: NHBO\n                                                                level: 6\n                                                                zone_count: 120\n                                                                matrix_sum: 11222.166666666664\n                                                                interzonal_sum: 10988.999999999998\n                                                                intrazonal_sum: 233.16666666666663\n                                                                Comments:\n                                                                Created by operation <built-in function mul> (reverse: False) on\n                                                                [\n                                                                    Matrix Object\n                                                                    vehicle_type: Road\n                                                                    value_type: Person Trips\n                                                                    time_period: Inter_peak\n                                                                    purpose: NHBO\n                                                                    level: 6\n                                                                    zone_count: 120\n                                                                    matrix_sum: 67333.0\n                                                                    interzonal_sum: 65934.0\n                                                                    intrazonal_sum: 1399.0\n                                                                    Comments:\n                                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Road.csv\n                                                                    MND Raw Data\n                                                                    \n                                                                ]\n                                                                <built-in function mul>\n                                                                [\n                                                                    0.16666666666666666\n                                                                ]\n                                                                \n                                                            ]\n                                                            \n                                                        ]\n                                                        \n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            <built-in function sub>\n                                            [\n                                                [[1. 1. 1. ... 1. 1. 1.]\n                                                [1. 1. 1. ... 1. 1. 1.]\n                                                [1. 1. 1. ... 1. 1. 1.]\n                                                ...\n                                                [1. 1. 1. ... 1. 1. 1.]\n                                                [1. 1. 1. ... 1. 1. 1.]\n                                                [1. 1. 1. ... 1. 1. 1.]]\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                <built-in function mul>\n                                [\n                                    0.6261662367292192\n                                ]\n                                \n                            ]\n                            <built-in function mul>\n                            [\n                                1.0\n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        <built-in function mul>\n        [\n            1.135051251706442\n        ]\n        \n    ]\n    \n]\n<built-in function mul>\n[\n    1.0\n]\n\n]\n<built-in function mul>\n[\n1.25\n]\n"}, "json://7": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {}, "_zones": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJy9W0uP28gRvi+w/0G3vfDQVf2o7muAZBEkyCEPBDkZyoy8FnYsBZIcr/PrU1USu0kNRTbJ1WIAe8bW9Mfqrv7qqwf3h9fdL83nw+uH/x0Pu+aXDy/H4+m1+Xb7e3vabT+cdh+b8+7lcjw1n8/HbfO6P19O+5dL84/Tv7eHzcv+8m2zPbxuLsevh+avX07bt81/929v2592t58+bT+/7S5n/dD+fHzbXnavm9evu7e3/eGn8+1D8tv6iY8n/tddf6HNnv9vc/7P9nTebc67y4U/UrX4yC/eAQ5+8otYeJKPNy+8H8fDh/3hsDu1Pxy/XPiHPx74z8P27fvvTAPGp8YHIG8aCyk42/zeoDGe/63xzZ940R/Omz9/O1yh/7k7XzZ/OZ4+Ht9+3hiA5nen4/b1Tf6rgcZ0vvRJmv3hvH/dtX/9/fRl9/13kEFDYlA0DuNiUKwExRYUjU0CimCebqkt25ucgqbloKb3dT3jIVCXLUX0ur1u+fbWWuozqIuklkZ4OmjIoNao90ZY7r2120vF0mD1yuByS12lpVFASUH5MBkUXWpB5WEmQE1asr2pXJlAAuqMf7qlUCgpeS+oZJe7r61FLZxEpP5rAJ9PhB1SutJv8s93YLDZmSKhEkSipzsTuIxKxipDOL8YtZb1wWfUZPS2elxua7U3ZWKCmNSHgc2fda78/df9y6cZ+0sdTGDMCDTz3mTMak+KGdMbxXR+OUNUW5p5yZBXMhTwp+uHwkuQNKxCeL5UwsxLxke2FQFDeD6q8pKXWwNGxVLE7L9ym6ZuDS1CtRnVsngQ1ECLUWvjDbqMSlF5KfnlqNXe5DOqwSCoAZejVu9wKDtsNMoFk56PShnVg6hgcGE5avW5xhaVtaGi2hifj5oKqp4rJLsctTrNUG5yghr1vrJoKrE1TKOGLmqsRYWM6p14E3iAxai1sdVii+o8KCMm5xajplpU26J6G9Sb+ICfb6vLqCGJN6GhmbbO1hE2Kybr9N4wH8Z5imk+pvJSlDPFoIo0FUUazHSUMwWTajGpxfRoNZ5TwnmYS25qLJayJ4vihzQXdffy8w3V1MKmfKj+mimnjiPNlcG1BOGKZFL3ZXk4V5IuCK2upHIxOkH1cab4XnCwLqdyzL1qa/wN6ksuF5gQnQpwVuLPRy0VppsUNvAbnGshpuCUmGKaSUxLbC3URBpuDPPiYpqotrVTZLLXcgQtP9c+S4wUDjvpnCQbfGt/5SLe8ctlADbnc9ZeK2pgZxtbOLFyi30mJ0wsR/nqkF9e8andYp/JCUmrW9GtqB5Wo5Y6E2evjEoUZto6uzbghZoYhS+O0UjnQywx3U1jugWYOZfjFEOIidNl+3T17XMuB2Sviqnsbh3qfEtD3l0A9SNDMG93l/gRtajWRglyAWOai5pvqunt8Agq01LjERMzIetuJmD+uG2mDGi5pv37D9u3s6wmkcKr/mqQHCBdVysC0jTMSFIWQKxZMAiRMF1qu4UvF3/vcokm8X8WEX7nYDVPfWt0yB3lJMtHvknG2/R+C4YymUdPLHQgx+VNBI4uvKNU6GA6rYDQPcahZOaBFbbFRcvPgImYjubidnZPHA5qdk8+yJuWnICGZNO73WN06ETn8e3zehjsHpGXA0M04I+yGlQ5pBrOywF/g9E779a4d9ArqmSEoleYe0PRodNkBD0PtUN1jwebLOKBL44ng8Tx1EGIhXunY4wZjGx8Cxt+pNHTVfnAm8juLCEVbSxNFFFuU8CxDxz4yw5udb8NqPpBuDBRYnvlWpaKwDQXmgEGBho94huwSgje0EDSebSWPJXSoZ0Gto9ci/1lFBiFh1k6cOoodWgf1zgq2UacxSKrTqQQjX+3mmQ3chrBVy2ot9wIDTN785Jh1ePpJWcz0cjjMWWtWk3CNbCzRL4VIMxnSvOAo2LqEKp8rqdC+BZPUcntgOTuc5DkVCUakVzMBDkSMelR8+Npt71s/rU9febflHiEy+IRxfbORUm9tGCDK+6celbFndPYbUOQQ0lp0GfUjWMu2I4yeZQ7zAchBIWS8DjZvpYs/TRZ+r6e8WzIuGa4dfOv4TwiSQRhvhyi/KvDVThXxFaVea2esQAple4FqsxXOkHMCj+AzHywNEszFf5dOIcHuP1RCBH5knlzfCFtrqIpGTlOw+J736uBvUZ9D/aq8fA9vYR0O7Ya1ws3LeRikAzfUESzWAt1j2w8TEdSM9BJzRNsgPfihbmGOg2Pcd8TIhBZERIwEWBCifWtGdNFGUh3sok1UK4vjjqfRn32gojRWgm/oTCqn/aCe+YD9QKnxzeGm5QyQLQzeKkuku1UF6ejL9xFX//Q++5wISd8RFLBZZq1Ky5bXeqV8CZyiF1eRvU8dVo8lSKnQy2uky2MWqt1TSvUEiW95XhexnH8NDEbP2Xt4B1ProWFKPEA2auXww51IoZhfc6LkPNO1uxyLZfnRRwDqsJQCq25eG27WFbti82tniqjFtUlrW1a3ufFqLWttBRbVH+tHmPotEifhpqyrRi1gUdhua31I3Qmwyo5srF2ubHVs1acwklAcyZE7VWqbsfmPso7YfmK2ALM0bJe0tk4lMRuYD2JXlClk1gbCzqKZm1sMN4Pr1ep6TnbleUsL8fPYFnGD5k7Yzkvy4XABsvTCWOvWi7IckzSvDmWj4RWLke6XJIGtDUuQlq3nCh0jmQy+Y0s5ADXLZfEU9CDVvJBqq5rlgN1Uz4DCQImiuRbtZzeC4OeFZ4lJ359W64TGmcsp9eCxRsIZ3up79w/HXMs/6s1kg5VLZmlPJ+t18Iu+pXqol+ZGx66dS0sRHkTAFzqiKllVezhguAd7k3LRyYqljRDWn7WgWgFD6IMGMnYjzXrlstVdudQ/Dl4mr0ro541fBhR3YoZQ73U+fduNcsKvZIWdQDWWVrp9KhXMrEOlXjGe+LWLQe39IES7y7Td7KdAsaS9EF9z6v2GtNccJ2tlPJdDDJfw9AU5pbvepL6ht2MV+9Axyslb+azJa3ZCKnPzJs7wLzcRH2iBc4Je4J2Om0NMD085bvhep/rIiQ7zT5kZ5NaBxcnvasFDu1OG2k5MK1R8CsMxg70ODDdgCM4HfMJaeUR11oc20IaI1/rI2l2Ia1HM3VZMei85RWYzLWiEddU8B4Xg+6AdeTyGjHdtQ7gVjhX9ei7bcsABCQVHJMI13Rg5YTHq+stMDZSWLZRmrBRhpzaGLeIf2WeUgeCA7D+82ZdeR1kUJIVTwq8PxzQmeHWLefL0I+ocRnpKoc7ezawDz12ukocqfEc50R6chpQXvMitlA6yZdPj8NQ4o+AUKyA8kUcP1JhC7JNYN+VtxOtlnFbND+AFuZuaIsk9MCcHzBd34NMNub9pPQeqb+Bc5CED6Jpgo3XIIc25ZJGxAGkh92wCSQdbmQZEVCyIR2pLFPtqDlpWXiw21cHIxeesyWfQtDKc2JyzZ0j0+8c9dsqIm6DdEMg9lzvEZI4jZEeVdDXcoG8zxVpfv7YQ7ovokOTbppgyiCRIeyjwZDR8g9AKXyLLOvv2z0OW8N3vabrDzqmyPGPYxKnFxKUqFA0C5G+Qe8mM0BmQGpgmCykFsCOQCwlMUEJQWykPOzftNs2Y4jrEZTwA3NdYDkt76oYF4p2FPLoetldK38OjBADCKGiEDMml0rVF+xdt7JnTLJCO3zGoQ5JiEGyseiBZPzBdl754efvI70TCbX2pLZmz7mV0LmhztDd3Jq9a6jTbxkF9m1/MRhN1vlJyrsKC2TRYwV699IjtLisAKUz13trbJkcGy/ZtcDaigwaOKUUw97R2enpvjD0CMwKc1VKX59ni4KUkzkNxzB7pqmX0NV1KkC7INJQ43QDvZq9RnroMKHmDoFk2AtkJ1d0Nx93Pu7tyBOFVspB2hv8dRtMD3y1zBQafZvTS2hdV+3o8/bwe8Gx6HedlWAqXSOkuznLGGyS3kyInjHJW5G/8ntLvUWKfI1jv5fJiJDEVVYtJ15vvb434QKnkyuXk2KIdMxZuDiO7SauW066WkiJnIzkAGkXYXmBKkiz10aN1pzRxJVF3qC1H0hORglRBnLXLScDiV7CBjuqd3ZliZKjatCasSSQlIILek0WLvd/pZs0hQ==", "txt": false, "meta": {"dtypes": {"index": "int64", "mnd_zone": "int64", "x_coord": "int64", "y_coord": "int64", "area_ref": "object", "sector": "int64", "msoa": "object", "district": "object", "Urban city and town": "int64", "Rural village": "int64", "Rural hamlets and isolated dwellings": "int64", "Rural town and fringe": "int64", "Rural village in a sparse setting": "int64", "Rural hamlets and isolated dwellings in a sparse setting": "int64", "Rural town and fringe in a sparse setting": "int64", "urbanrural": "object", "cordon_inner": "object", "cordon_outer": "object", "Internal": "bool"}, "index": "{\"py/object\": \"pandas.core.indexes.numeric.Int64Index\", \"comp\": true, \"values\": \"eJwtk8FtRSEQA1tJATnYsMCnlij9txE8m4ulp7VXMPj9LPn7a2lEKrIiO3KfOFNn6hmJxbE4Fp9IfEORmEd8I74R34hvxDc+T2YsM/tmfDO+Gd+Mb8Y38WVpZWklUUlUEpVEJVFJVBKVxIpvx7cz2BmcLDgZnAzOW7Bz3537bvFZkRXZkRP5RN4JtrNAjagZJfQUVM2qYSX49IPm8OosAAVBgVAwFBAFRYFRJgtNgVOjn4YsWAVXAVaQFWgFWw2ykyygBWmBWrAWsAVtgVvwFsAFcYFc1Z0gC3BBXCAXzFWkFikeQIvUIrW6UGQX2d3tYsNmw2YDD2W1UjloG9qGtqFtaBvahrb/e0q269p97Zp2T7uoEDaEDWGPrjd+2Bq2hq1ha9gatoatYevZfwUnhK1ha9gatoatYWvYGraGrcP20q5Luy7turTr0q5Luy7turTr6f39AzjkrWM=\", \"txt\": false, \"meta\": {\"dtype\": \"int64\", \"name\": \"reference\"}}", "column_level_names": [null], "header": [0]}}, "_source_file": {"py/id": 5}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 7, "_purpose": "HGV", "_time_period": "Inter_peak", "_vehicle_type": "HGV", "_value_type": "Vehicle Trips", "_comments": "Created by operation <built-in function mul> (reverse: False) on\n[\nMatrix Object\nvehicle_type: HGV\nvalue_type: Vehicle Trips\ntime_period: Inter_peak\npurpose: HGV\nlevel: 1\nzone_count: 168\nmatrix_sum: 2016.333333333333\ninterzonal_sum: 1892.9515518668995\nintrazonal_sum: 123.3817814664336\nComments:\nCreated by operation <built-in function mul> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: HGV\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: HGV\n    level: 1\n    zone_count: 168\n    matrix_sum: 876.6666666666665\n    interzonal_sum: 823.0224138551737\n    intrazonal_sum: 53.64425281149286\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: HGV\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: HGV\n        level: 1\n        zone_count: 168\n        matrix_sum: 203.0\n        interzonal_sum: 190.18779673698987\n        intrazonal_sum: 12.812203263010133\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: HGV\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBW\n            level: 1\n            zone_count: 168\n            matrix_sum: 203.0\n            interzonal_sum: 190.18779673698987\n            intrazonal_sum: 12.812203263010133\n            Comments:\n            Created by disaggregate_matrix operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: HGV\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBW\n                level: 1\n                zone_count: 120\n                matrix_sum: 202.99999999999997\n                interzonal_sum: 199.99999999999997\n                intrazonal_sum: 3.0\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: HGV\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 1\n                    zone_count: 120\n                    matrix_sum: 202.99999999999997\n                    interzonal_sum: 199.99999999999997\n                    intrazonal_sum: 3.0\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: HGV\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 1\n                        zone_count: 120\n                        matrix_sum: 1218.0\n                        interzonal_sum: 1200.0\n                        intrazonal_sum: 18.0\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_HGV.csv\n                        MND Raw Data\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        0.16666666666666666\n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: HGV\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: NHBO\n        level: 2\n        zone_count: 168\n        matrix_sum: 673.6666666666665\n        interzonal_sum: 632.8346171181838\n        intrazonal_sum: 40.83204954848274\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: HGV\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBO\n            level: 2\n            zone_count: 168\n            matrix_sum: 673.6666666666665\n            interzonal_sum: 632.8346171181838\n            intrazonal_sum: 40.83204954848274\n            Comments:\n            Created by disaggregate_matrix operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: HGV\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBO\n                level: 2\n                zone_count: 120\n                matrix_sum: 673.6666666666665\n                interzonal_sum: 661.8333333333331\n                intrazonal_sum: 11.833333333333332\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: HGV\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 2\n                    zone_count: 120\n                    matrix_sum: 673.6666666666665\n                    interzonal_sum: 661.8333333333331\n                    intrazonal_sum: 11.833333333333332\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: HGV\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 2\n                        zone_count: 120\n                        matrix_sum: 4042.0\n                        interzonal_sum: 3971.0\n                        intrazonal_sum: 71.0\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_HGV.csv\n                        MND Raw Data\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        0.16666666666666666\n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n<built-in function mul>\n[\n    2.3\n]\n\n]\n<built-in function mul>\n[\n2.5\n]\n"}}}