{"py/object": "matrix_class_v2.MatrixStack", "_name": "combined_mndsynth", "_vehicle_type": "Rail", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"json://501": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 501, "_targets": {"json://501": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://502": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 502, "_targets": {"json://502": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://504": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 504, "_targets": {"json://504": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://505": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 505, "_targets": {"json://505": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://506": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 506, "_targets": {"json://506": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://509": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 509, "_targets": {"json://509": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://511": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 511, "_targets": {"json://511": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://512": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 512, "_targets": {"json://512": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://513": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 513, "_targets": {"json://513": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://514": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 514, "_targets": {"json://514": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://515": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 515, "_targets": {"json://515": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://516": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 516, "_targets": {"json://516": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://517": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 517, "_targets": {"json://517": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://519": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 519, "_targets": {"json://519": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://520": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 520, "_targets": {"json://520": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://521": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 521, "_targets": {"json://521": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://523": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 523, "_targets": {"json://523": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://524": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 524, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://525": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 525, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://526": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 526, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://527": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 527, "_targets": {"json://527": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://528": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 528, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://531": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 531, "_targets": {"json://531": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://532": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 532, "_targets": {"json://532": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://533": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 533, "_targets": {"json://533": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://534": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 534, "_targets": {"json://534": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://535": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 535, "_targets": {"json://535": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://536": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 536, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://537": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 537, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://538": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 538, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://539": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 539, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://540": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 540, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://541": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 541, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://542": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 542, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://543": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 543, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://544": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 544, "_targets": {"json://544": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://545": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 545, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://546": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 546, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://547": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 547, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://548": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 548, "_targets": {"json://548": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://551": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 551, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://562": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 562, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://566": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 566, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://567": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 567, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://570": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 570, "_targets": {"json://570": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://571": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 571, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://572": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 572, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://573": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 573, "_targets": {"json://573": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://601": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 601, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://602": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 602, "_targets": {"json://602": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://603": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 603, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://604": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 604, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://605": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 605, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://606": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 606, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://607": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 607, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://608": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 608, "_targets": {"json://608": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://609": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 609, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://610": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 610, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5001": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5001, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5002": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5002, "_targets": {"json://5002": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5003": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5003, "_targets": {"json://5003": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5004": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5004, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5005": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5005, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7105265186923027}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2894734813076974}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5006": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5006, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6336305213085214}, "json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3663694786914786}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5007": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5007, "_targets": {"json://5007": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5008": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5008, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5009": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5009, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.12574033987473257}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8742596601252675}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5010": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5010, "_targets": {"json://5010": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5011": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5011, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5012": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5012, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5013": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5013, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5014": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5014, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5015": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5015, "_targets": {"json://5015": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5016": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5016, "_targets": {"json://5019": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.23915238262142025}, "json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7608476173785798}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5017": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5017, "_targets": {"json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5018": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5018, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5019": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5019, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7224258444377175}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5020": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5020, "_targets": {"json://5020": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5021": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5021, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5022": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5022, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5023": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5023, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16270700178727196}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8372929982127281}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5024": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5024, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5025": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5025, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5924220607039576}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.40757793929604236}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5026": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5026, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5027": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5027, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5028": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5028, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8675205867701657}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13247941322983423}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5029": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5029, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5147106005829688}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.48528939941703114}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5030": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5030, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.38833292989011636}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6116670701098836}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5031": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5031, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9863284020535221}, "json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.013671597946477902}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5032": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5032, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5033": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5033, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5034": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5034, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5035": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5035, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5036": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5036, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5037": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5037, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5038": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5038, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5039": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5039, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5040": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5040, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5041": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5041, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5042": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5042, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5043": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5043, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5045": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5045, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5046": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5046, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5047": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5047, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5048": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5048, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5049": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5049, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5050": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5050, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5051": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5051, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5052": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5052, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5053": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5053, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5054": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5054, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5055": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5055, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5056": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5056, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5065": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5065, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5067": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5067, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06201399661995637}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9379860033800437}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5068": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5068, "_targets": {"json://5068": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5069": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5069, "_targets": {"json://5069": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5070": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5070, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5100": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5100, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5101": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5101, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5102": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5102, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5103": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5103, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5104": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5104, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5105": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5105, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5106": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5106, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5107": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5107, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.29235456942551624}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7076454305744838}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5108": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5108, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5109": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5109, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5110": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5110, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7387638702178395}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.26123612978216043}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5111": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5111, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2515912022033352}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7484087977966648}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5112": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5112, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5115": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5115, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.22736056963670478}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7726394303632952}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5116": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5116, "_targets": {"json://5116": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5117": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5117, "_targets": {"json://5139": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.28054378071849867}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7194562192815013}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5118": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5118, "_targets": {"json://5118": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5119": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5119, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5120": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5120, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5121": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5121, "_targets": {"json://5121": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5122": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5122, "_targets": {"json://5122": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5124": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5124, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4437572194572055}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5125": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5125, "_targets": {"json://5124": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13644820554642537}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8635517944535747}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5126": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5126, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5127": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5127, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5128": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5128, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.028333630736165107}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9716663692638349}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5129": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5129, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11436485547237808}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8856351445276219}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5130": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5130, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.29984251486319297}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7001574851368071}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5131": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5131, "_targets": {"json://5131": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5132": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5132, "_targets": {"json://5132": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5133": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5133, "_targets": {"json://5133": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5134": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5134, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.32382409830106296}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.676175901698937}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5135": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5135, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08645655874211541}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9135434412578846}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5136": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5136, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.239089678008408}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5137": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5137, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5138": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5138, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5139": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5139, "_targets": {"json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5140": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5140, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5141": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5141, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2216693993246311}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.778330600675369}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5142": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5142, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.026609684324048147}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9733903156759518}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5143": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5143, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0716213365076186}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9283786634923814}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9001": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9001, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9002": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9002, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9003": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9003, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9004": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9004, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9005": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9005, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9006": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9006, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9007": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9007, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9008": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9008, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9009": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9009, "_targets": {"json://9009": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}}}, "_zones": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "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", "txt": false, "meta": {"dtypes": {"index": "int64", "mnd_zone": "int64", "x_coord": "int64", "y_coord": "int64", "area_ref": "object", "sector": "int64", "msoa": "object", "district": "object", "Urban city and town": "int64", "Rural village": "int64", "Rural hamlets and isolated dwellings": "int64", "Rural town and fringe": "int64", "Rural village in a sparse setting": "int64", "Rural hamlets and isolated dwellings in a sparse setting": "int64", "Rural town and fringe in a sparse setting": "int64", "urbanrural": "object", "cordon_inner": "object", "cordon_outer": "object", "Internal": "bool"}, "index": "{\"py/object\": \"pandas.core.indexes.numeric.Int64Index\", \"comp\": true, \"values\": \"eJwtk8FtRSEQA1tJATnYsMCnlij9txE8m4ulp7VXMPj9LPn7a2lEKrIiO3KfOFNn6hmJxbE4Fp9IfEORmEd8I74R34hvxDc+T2YsM/tmfDO+Gd+Mb8Y38WVpZWklUUlUEpVEJVFJVBKVxIpvx7cz2BmcLDgZnAzOW7Bz3537bvFZkRXZkRP5RN4JtrNAjagZJfQUVM2qYSX49IPm8OosAAVBgVAwFBAFRYFRJgtNgVOjn4YsWAVXAVaQFWgFWw2ykyygBWmBWrAWsAVtgVvwFsAFcYFc1Z0gC3BBXCAXzFWkFikeQIvUIrW6UGQX2d3tYsNmw2YDD2W1UjloG9qGtqFtaBvahrb/e0q269p97Zp2T7uoEDaEDWGPrjd+2Bq2hq1ha9gatoatYevZfwUnhK1ha9gatoatYWvYGraGrcP20q5Luy7turTr0q5Luy7turTr6f39AzjkrWM=\", \"txt\": false, \"meta\": {\"dtype\": \"int64\", \"name\": \"reference\"}}", "column_level_names": [null], "header": [0]}}, "_source_file": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["C:\\", "Users", "UKTMB001", "Documents", "Python Scripts", "MND", "ZoningTemplate_Model_v2.xlsx"]}]}, "_source_sheet": "zones"}, "_time_period": "Inter_peak", "_value_type": "Person Trips", "_levels": {"json://1": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "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", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 1, "_purpose": "Commuting", "_time_period": "Inter_peak", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: Commuting\nlevel: 1\nzone_count: 168\nmatrix_sum: 20.083651685583263\ninterzonal_sum: 20.083651685583263\nintrazonal_sum: 0.0\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Commuting\n    level: 1\n    zone_count: 168\n    matrix_sum: 0.09691168558326269\n    interzonal_sum: 0.09691168558326269\n    intrazonal_sum: 0.0\n    Comments:\n    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Commuting\n        level: 1\n        zone_count: 168\n        matrix_sum: 0.31936935327254223\n        interzonal_sum: 0.3187403914063939\n        intrazonal_sum: 0.0006289618661483677\n        Comments:\n        Created by operation <built-in function mul> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Commuting\n            level: 1\n            zone_count: 168\n            matrix_sum: 45.66666666666667\n            interzonal_sum: 43.046232382989565\n            intrazonal_sum: 2.6204342836771066\n            Comments:\n            Created by operation <built-in function add> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: Commuting\n                level: 1\n                zone_count: 168\n                matrix_sum: 28.83333333333333\n                interzonal_sum: 27.273707625023444\n                intrazonal_sum: 1.5596257083098855\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: IB_HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 28.83333333333333\n                    interzonal_sum: 27.273707625023444\n                    intrazonal_sum: 1.5596257083098855\n                    Comments:\n                    Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 28.83333333333333\n                        interzonal_sum: 28.629303271931317\n                        intrazonal_sum: 0.2040300614020109\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBW\n                            level: 1\n                            zone_count: 168\n                            matrix_sum: 28.83333333333333\n                            interzonal_sum: 28.629303271931317\n                            intrazonal_sum: 0.2040300614020109\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBW\n                                level: 1\n                                zone_count: 168\n                                matrix_sum: 28.83333333333333\n                                interzonal_sum: 28.629303271931317\n                                intrazonal_sum: 0.2040300614020109\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBW\n                                    level: 1\n                                    zone_count: 120\n                                    matrix_sum: 28.83333333333333\n                                    interzonal_sum: 28.66666666666666\n                                    intrazonal_sum: 0.16666666666666666\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBW\n                                        level: 1\n                                        zone_count: 120\n                                        matrix_sum: 28.83333333333333\n                                        interzonal_sum: 28.66666666666666\n                                        intrazonal_sum: 0.16666666666666666\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBW\n                                            level: 1\n                                            zone_count: 120\n                                            matrix_sum: 173.0\n                                            interzonal_sum: 172.0\n                                            intrazonal_sum: 1.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Rail.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            0.16666666666666666\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function add>\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: OB_HBW\n                level: 2\n                zone_count: 168\n                matrix_sum: 16.833333333333332\n                interzonal_sum: 15.77252475796611\n                intrazonal_sum: 1.0608085753672216\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBW\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 16.833333333333332\n                    interzonal_sum: 15.77252475796611\n                    intrazonal_sum: 1.0608085753672216\n                    Comments:\n                    Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBW\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 16.833333333333332\n                        interzonal_sum: 16.333333333333332\n                        intrazonal_sum: 0.5\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBW\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 16.833333333333332\n                            interzonal_sum: 16.333333333333332\n                            intrazonal_sum: 0.5\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBW\n                                level: 2\n                                zone_count: 168\n                                matrix_sum: 16.833333333333332\n                                interzonal_sum: 16.333333333333332\n                                intrazonal_sum: 0.5\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBW\n                                    level: 2\n                                    zone_count: 120\n                                    matrix_sum: 16.833333333333332\n                                    interzonal_sum: 16.833333333333332\n                                    intrazonal_sum: 0.0\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBW\n                                        level: 2\n                                        zone_count: 120\n                                        matrix_sum: 16.833333333333332\n                                        interzonal_sum: 16.833333333333332\n                                        intrazonal_sum: 0.0\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBW\n                                            level: 2\n                                            zone_count: 120\n                                            matrix_sum: 101.0\n                                            interzonal_sum: 101.0\n                                            intrazonal_sum: 0.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Rail.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            0.16666666666666666\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        <built-in function mul>\n        [\n            [[ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            ...\n            [False False False ... False False False]\n            [False False False ... False False False]\n            [False False False ... False False False]]\n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: SynthRail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Commuting\n    level: 1\n    zone_count: 168\n    matrix_sum: 19.986739999999998\n    interzonal_sum: 19.986739999999998\n    intrazonal_sum: 0.0\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Commuting\n        level: 1\n        zone_count: 168\n        matrix_sum: 19.986739999999998\n        interzonal_sum: 19.986739999999998\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Commuting\n            level: 1\n            zone_count: 168\n            matrix_sum: 204.86249999999998\n            interzonal_sum: 204.86249999999998\n            intrazonal_sum: 0.0\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: Commuting\n                level: 1\n                zone_count: 168\n                matrix_sum: 1512.48818\n                interzonal_sum: 1298.20306\n                intrazonal_sum: 214.28512\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 1512.48818\n                    interzonal_sum: 1298.20306\n                    intrazonal_sum: 214.28512\n                    Comments:\n                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_Inter_peak.csv\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 1512.48818\n                    interzonal_sum: 1298.20306\n                    intrazonal_sum: 214.28512\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: Commuting\nlevel: 1\nzone_count: 168\nmatrix_sum: 564.4597812821783\ninterzonal_sum: 350.17466128217825\nintrazonal_sum: 214.28512\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Commuting\n    level: 1\n    zone_count: 168\n    matrix_sum: 564.4597812821783\n    interzonal_sum: 350.17466128217825\n    intrazonal_sum: 214.28512\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Commuting\n        level: 1\n        zone_count: 168\n        matrix_sum: 38.40643128217836\n        interzonal_sum: 38.40643128217836\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Commuting\n            level: 1\n            zone_count: 168\n            matrix_sum: 45.34729731339412\n            interzonal_sum: 42.727491991583165\n            intrazonal_sum: 2.6198053218109583\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: Commuting\n                level: 1\n                zone_count: 168\n                matrix_sum: 45.66666666666667\n                interzonal_sum: 43.046232382989565\n                intrazonal_sum: 2.6204342836771066\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: Commuting\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 28.83333333333333\n                    interzonal_sum: 27.273707625023444\n                    intrazonal_sum: 1.5596257083098855\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 28.83333333333333\n                        interzonal_sum: 27.273707625023444\n                        intrazonal_sum: 1.5596257083098855\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBW\n                            level: 1\n                            zone_count: 168\n                            matrix_sum: 28.83333333333333\n                            interzonal_sum: 28.629303271931317\n                            intrazonal_sum: 0.2040300614020109\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBW\n                                level: 1\n                                zone_count: 168\n                                matrix_sum: 28.83333333333333\n                                interzonal_sum: 28.629303271931317\n                                intrazonal_sum: 0.2040300614020109\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBW\n                                    level: 1\n                                    zone_count: 168\n                                    matrix_sum: 28.83333333333333\n                                    interzonal_sum: 28.629303271931317\n                                    intrazonal_sum: 0.2040300614020109\n                                    Comments:\n                                    Created by disaggregate_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBW\n                                        level: 1\n                                        zone_count: 120\n                                        matrix_sum: 28.83333333333333\n                                        interzonal_sum: 28.66666666666666\n                                        intrazonal_sum: 0.16666666666666666\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBW\n                                            level: 1\n                                            zone_count: 120\n                                            matrix_sum: 28.83333333333333\n                                            interzonal_sum: 28.66666666666666\n                                            intrazonal_sum: 0.16666666666666666\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBW\n                                                level: 1\n                                                zone_count: 120\n                                                matrix_sum: 173.0\n                                                interzonal_sum: 172.0\n                                                intrazonal_sum: 1.0\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Rail.csv\n                                                MND Raw Data\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                0.16666666666666666\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBW\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 16.833333333333332\n                    interzonal_sum: 15.77252475796611\n                    intrazonal_sum: 1.0608085753672216\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBW\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 16.833333333333332\n                        interzonal_sum: 15.77252475796611\n                        intrazonal_sum: 1.0608085753672216\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBW\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 16.833333333333332\n                            interzonal_sum: 16.333333333333332\n                            intrazonal_sum: 0.5\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBW\n                                level: 2\n                                zone_count: 168\n                                matrix_sum: 16.833333333333332\n                                interzonal_sum: 16.333333333333332\n                                intrazonal_sum: 0.5\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBW\n                                    level: 2\n                                    zone_count: 168\n                                    matrix_sum: 16.833333333333332\n                                    interzonal_sum: 16.333333333333332\n                                    intrazonal_sum: 0.5\n                                    Comments:\n                                    Created by disaggregate_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBW\n                                        level: 2\n                                        zone_count: 120\n                                        matrix_sum: 16.833333333333332\n                                        interzonal_sum: 16.833333333333332\n                                        intrazonal_sum: 0.0\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBW\n                                            level: 2\n                                            zone_count: 120\n                                            matrix_sum: 16.833333333333332\n                                            interzonal_sum: 16.833333333333332\n                                            intrazonal_sum: 0.0\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBW\n                                                level: 2\n                                                zone_count: 120\n                                                matrix_sum: 101.0\n                                                interzonal_sum: 101.0\n                                                intrazonal_sum: 0.0\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Rail.csv\n                                                MND Raw Data\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                0.16666666666666666\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                ...\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Commuting\n        level: 1\n        zone_count: 168\n        matrix_sum: 526.05335\n        interzonal_sum: 311.76823\n        intrazonal_sum: 214.28512\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Commuting\n            level: 1\n            zone_count: 168\n            matrix_sum: 526.05335\n            interzonal_sum: 311.76823\n            intrazonal_sum: 214.28512\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: Commuting\n                level: 1\n                zone_count: 168\n                matrix_sum: 1307.62568\n                interzonal_sum: 1093.34056\n                intrazonal_sum: 214.28512\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: Commuting\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 1512.48818\n                    interzonal_sum: 1298.20306\n                    intrazonal_sum: 214.28512\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 1512.48818\n                        interzonal_sum: 1298.20306\n                        intrazonal_sum: 214.28512\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_Inter_peak.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 1512.48818\n                        interzonal_sum: 1298.20306\n                        intrazonal_sum: 214.28512\n                        \n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://2": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 2, "_purpose": "Employers Business", "_time_period": "Inter_peak", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: Employers Business\nlevel: 2\nzone_count: 168\nmatrix_sum: 37.81937386060831\ninterzonal_sum: 17.100393860608307\nintrazonal_sum: 20.718980000000002\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Employers Business\n    level: 2\n    zone_count: 168\n    matrix_sum: 0.06380386060830846\n    interzonal_sum: 0.06380386060830846\n    intrazonal_sum: 0.0\n    Comments:\n    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Employers Business\n        level: 2\n        zone_count: 168\n        matrix_sum: 0.0800341716146163\n        interzonal_sum: 0.07969082402499648\n        intrazonal_sum: 0.0003433475896198212\n        Comments:\n        Created by operation <built-in function mul> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Employers Business\n            level: 2\n            zone_count: 168\n            matrix_sum: 98.75364910044465\n            interzonal_sum: 95.8315599615114\n            intrazonal_sum: 2.922089138933241\n            Comments:\n            Created by operation <built-in function add> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: Employers Business\n                level: 3\n                zone_count: 168\n                matrix_sum: 43.75364910044465\n                interzonal_sum: 42.13038247932409\n                intrazonal_sum: 1.6232666211205546\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: Employers Business\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 21.54551471108961\n                    interzonal_sum: 20.924003797638598\n                    intrazonal_sum: 0.6215109134510111\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBEmp\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 21.54551471108961\n                        interzonal_sum: 20.924003797638598\n                        intrazonal_sum: 0.6215109134510111\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBEmp\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 21.545514711089606\n                            interzonal_sum: 21.23240812799026\n                            intrazonal_sum: 0.31310658309934547\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBEmp\n                                level: 3\n                                zone_count: 168\n                                matrix_sum: 21.545514711089606\n                                interzonal_sum: 21.23240812799026\n                                intrazonal_sum: 0.31310658309934547\n                                Comments:\n                                Created by furness_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 157.16666666666666\n                                    interzonal_sum: 155.75512940409635\n                                    intrazonal_sum: 1.411537262570307\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 157.16666666666666\n                                        interzonal_sum: 155.75512940409635\n                                        intrazonal_sum: 1.411537262570307\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 120\n                                            matrix_sum: 157.16666666666663\n                                            interzonal_sum: 156.3333333333333\n                                            intrazonal_sum: 0.8333333333333333\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 157.16666666666663\n                                                interzonal_sum: 156.3333333333333\n                                                intrazonal_sum: 0.8333333333333333\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 943.0\n                                                    interzonal_sum: 938.0\n                                                    intrazonal_sum: 5.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    0.16666666666666666\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                Convergence Information:\n                                1: count: 168, col_pass: 16, row_pass: 26\n                                2: count: 168, col_pass: 7, row_pass: 27\n                                3: count: 168, col_pass: 24, row_pass: 30\n                                4: count: 168, col_pass: 28, row_pass: 38\n                                5: count: 168, col_pass: 50, row_pass: 121\n                                6: count: 168, col_pass: 168, row_pass: 168\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBEmp\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 22.208134389355035\n                    interzonal_sum: 21.206378681685493\n                    intrazonal_sum: 1.0017557076695436\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBEmp\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 22.208134389355035\n                        interzonal_sum: 21.206378681685493\n                        intrazonal_sum: 1.0017557076695436\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBEmp\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 22.20813438935504\n                            interzonal_sum: 21.915930182929074\n                            intrazonal_sum: 0.29220420642596434\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBEmp\n                                level: 4\n                                zone_count: 168\n                                matrix_sum: 22.20813438935504\n                                interzonal_sum: 21.915930182929074\n                                intrazonal_sum: 0.29220420642596434\n                                Comments:\n                                Created by furness_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 155.33333333333334\n                                    interzonal_sum: 154.010461458477\n                                    intrazonal_sum: 1.3228718748563326\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 155.33333333333334\n                                        interzonal_sum: 154.010461458477\n                                        intrazonal_sum: 1.3228718748563326\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 120\n                                            matrix_sum: 155.33333333333331\n                                            interzonal_sum: 154.66666666666666\n                                            intrazonal_sum: 0.6666666666666666\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 155.33333333333331\n                                                interzonal_sum: 154.66666666666666\n                                                intrazonal_sum: 0.6666666666666666\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 932.0\n                                                    interzonal_sum: 928.0\n                                                    intrazonal_sum: 4.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    0.16666666666666666\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                Convergence Information:\n                                1: count: 168, col_pass: 31, row_pass: 5\n                                2: count: 168, col_pass: 26, row_pass: 24\n                                3: count: 168, col_pass: 46, row_pass: 25\n                                4: count: 168, col_pass: 47, row_pass: 29\n                                5: count: 168, col_pass: 64, row_pass: 45\n                                6: count: 168, col_pass: 106, row_pass: 167\n                                7: count: 168, col_pass: 168, row_pass: 168\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function add>\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBW\n                level: 7\n                zone_count: 168\n                matrix_sum: 55.0\n                interzonal_sum: 53.70117748218731\n                intrazonal_sum: 1.2988225178126864\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 7\n                    zone_count: 168\n                    matrix_sum: 55.0\n                    interzonal_sum: 53.70117748218731\n                    intrazonal_sum: 1.2988225178126864\n                    Comments:\n                    Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 7\n                        zone_count: 168\n                        matrix_sum: 54.99999999999999\n                        interzonal_sum: 54.59816107740889\n                        intrazonal_sum: 0.4018389225911059\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBW\n                            level: 7\n                            zone_count: 168\n                            matrix_sum: 54.99999999999999\n                            interzonal_sum: 54.59816107740889\n                            intrazonal_sum: 0.4018389225911059\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBW\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 54.99999999999999\n                                interzonal_sum: 54.59816107740889\n                                intrazonal_sum: 0.4018389225911059\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBW\n                                    level: 5\n                                    zone_count: 120\n                                    matrix_sum: 54.99999999999999\n                                    interzonal_sum: 54.49999999999999\n                                    intrazonal_sum: 0.5\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: NHBW\n                                        level: 5\n                                        zone_count: 120\n                                        matrix_sum: 54.99999999999999\n                                        interzonal_sum: 54.49999999999999\n                                        intrazonal_sum: 0.5\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: NHBW\n                                            level: 5\n                                            zone_count: 120\n                                            matrix_sum: 330.0\n                                            interzonal_sum: 327.0\n                                            intrazonal_sum: 3.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Rail.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            0.16666666666666666\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        <built-in function mul>\n        [\n            [[ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            ...\n            [False False False ... False False False]\n            [False False False ... False False False]\n            [False False False ... False False False]]\n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: SynthRail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Employers Business\n    level: 2\n    zone_count: 168\n    matrix_sum: 37.75557\n    interzonal_sum: 17.036589999999997\n    intrazonal_sum: 20.718980000000002\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Employers Business\n        level: 2\n        zone_count: 168\n        matrix_sum: 37.75557\n        interzonal_sum: 17.036589999999997\n        intrazonal_sum: 20.718980000000002\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Employers Business\n            level: 2\n            zone_count: 168\n            matrix_sum: 49.56755\n            interzonal_sum: 28.848569999999995\n            intrazonal_sum: 20.718980000000002\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: Employers Business\n                level: 2\n                zone_count: 168\n                matrix_sum: 356.31149\n                interzonal_sum: 242.64893999999998\n                intrazonal_sum: 113.66255\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: Employers Business\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 256.16513999999995\n                    interzonal_sum: 215.37982999999997\n                    intrazonal_sum: 40.785309999999996\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: HBEmp\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 256.16513999999995\n                        interzonal_sum: 215.37982999999997\n                        intrazonal_sum: 40.785309999999996\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_Inter_peak.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: HBEmp\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 256.16513999999995\n                        interzonal_sum: 215.37982999999997\n                        intrazonal_sum: 40.785309999999996\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 100.14635000000001\n                    interzonal_sum: 27.269110000000012\n                    intrazonal_sum: 72.87724\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 100.14635000000001\n                        interzonal_sum: 27.269110000000012\n                        intrazonal_sum: 72.87724\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_Inter_peak.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 100.14635000000001\n                        interzonal_sum: 27.269110000000012\n                        intrazonal_sum: 72.87724\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: Employers Business\nlevel: 2\nzone_count: 168\nmatrix_sum: 217.58471093453238\ninterzonal_sum: 124.64114093453239\nintrazonal_sum: 92.94357\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Employers Business\n    level: 2\n    zone_count: 168\n    matrix_sum: 217.58471093453238\n    interzonal_sum: 124.64114093453239\n    intrazonal_sum: 92.94357\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Employers Business\n        level: 2\n        zone_count: 168\n        matrix_sum: 91.45812093453242\n        interzonal_sum: 91.45812093453242\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Employers Business\n            level: 2\n            zone_count: 168\n            matrix_sum: 98.67361492883003\n            interzonal_sum: 95.75186913748641\n            intrazonal_sum: 2.9217457913436213\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: Employers Business\n                level: 2\n                zone_count: 168\n                matrix_sum: 98.75364910044465\n                interzonal_sum: 95.8315599615114\n                intrazonal_sum: 2.922089138933241\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: Employers Business\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 43.75364910044465\n                    interzonal_sum: 42.13038247932409\n                    intrazonal_sum: 1.6232666211205546\n                    Comments:\n                    Created by operation <built-in function add> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: Employers Business\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 21.54551471108961\n                        interzonal_sum: 20.924003797638598\n                        intrazonal_sum: 0.6215109134510111\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBEmp\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 21.54551471108961\n                            interzonal_sum: 20.924003797638598\n                            intrazonal_sum: 0.6215109134510111\n                            Comments:\n                            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBEmp\n                                level: 3\n                                zone_count: 168\n                                matrix_sum: 21.545514711089606\n                                interzonal_sum: 21.23240812799026\n                                intrazonal_sum: 0.31310658309934547\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBEmp\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 21.545514711089606\n                                    interzonal_sum: 21.23240812799026\n                                    intrazonal_sum: 0.31310658309934547\n                                    Comments:\n                                    Created by furness_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 157.16666666666666\n                                        interzonal_sum: 155.75512940409635\n                                        intrazonal_sum: 1.411537262570307\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 157.16666666666666\n                                            interzonal_sum: 155.75512940409635\n                                            intrazonal_sum: 1.411537262570307\n                                            Comments:\n                                            Created by disaggregate_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 157.16666666666663\n                                                interzonal_sum: 156.3333333333333\n                                                intrazonal_sum: 0.8333333333333333\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 157.16666666666663\n                                                    interzonal_sum: 156.3333333333333\n                                                    intrazonal_sum: 0.8333333333333333\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Rail\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: IB_HBO\n                                                        level: 3\n                                                        zone_count: 120\n                                                        matrix_sum: 943.0\n                                                        interzonal_sum: 938.0\n                                                        intrazonal_sum: 5.0\n                                                        Comments:\n                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                                        MND Raw Data\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        0.16666666666666666\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    Convergence Information:\n                                    1: count: 168, col_pass: 16, row_pass: 26\n                                    2: count: 168, col_pass: 7, row_pass: 27\n                                    3: count: 168, col_pass: 24, row_pass: 30\n                                    4: count: 168, col_pass: 28, row_pass: 38\n                                    5: count: 168, col_pass: 50, row_pass: 121\n                                    6: count: 168, col_pass: 168, row_pass: 168\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    <built-in function add>\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBEmp\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 22.208134389355035\n                        interzonal_sum: 21.206378681685493\n                        intrazonal_sum: 1.0017557076695436\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBEmp\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 22.208134389355035\n                            interzonal_sum: 21.206378681685493\n                            intrazonal_sum: 1.0017557076695436\n                            Comments:\n                            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBEmp\n                                level: 4\n                                zone_count: 168\n                                matrix_sum: 22.20813438935504\n                                interzonal_sum: 21.915930182929074\n                                intrazonal_sum: 0.29220420642596434\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBEmp\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 22.20813438935504\n                                    interzonal_sum: 21.915930182929074\n                                    intrazonal_sum: 0.29220420642596434\n                                    Comments:\n                                    Created by furness_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 155.33333333333334\n                                        interzonal_sum: 154.010461458477\n                                        intrazonal_sum: 1.3228718748563326\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 168\n                                            matrix_sum: 155.33333333333334\n                                            interzonal_sum: 154.010461458477\n                                            intrazonal_sum: 1.3228718748563326\n                                            Comments:\n                                            Created by disaggregate_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 155.33333333333331\n                                                interzonal_sum: 154.66666666666666\n                                                intrazonal_sum: 0.6666666666666666\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 155.33333333333331\n                                                    interzonal_sum: 154.66666666666666\n                                                    intrazonal_sum: 0.6666666666666666\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Rail\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: OB_HBO\n                                                        level: 4\n                                                        zone_count: 120\n                                                        matrix_sum: 932.0\n                                                        interzonal_sum: 928.0\n                                                        intrazonal_sum: 4.0\n                                                        Comments:\n                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                                        MND Raw Data\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        0.16666666666666666\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    Convergence Information:\n                                    1: count: 168, col_pass: 31, row_pass: 5\n                                    2: count: 168, col_pass: 26, row_pass: 24\n                                    3: count: 168, col_pass: 46, row_pass: 25\n                                    4: count: 168, col_pass: 47, row_pass: 29\n                                    5: count: 168, col_pass: 64, row_pass: 45\n                                    6: count: 168, col_pass: 106, row_pass: 167\n                                    7: count: 168, col_pass: 168, row_pass: 168\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 7\n                    zone_count: 168\n                    matrix_sum: 55.0\n                    interzonal_sum: 53.70117748218731\n                    intrazonal_sum: 1.2988225178126864\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 7\n                        zone_count: 168\n                        matrix_sum: 55.0\n                        interzonal_sum: 53.70117748218731\n                        intrazonal_sum: 1.2988225178126864\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBW\n                            level: 7\n                            zone_count: 168\n                            matrix_sum: 54.99999999999999\n                            interzonal_sum: 54.59816107740889\n                            intrazonal_sum: 0.4018389225911059\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBW\n                                level: 7\n                                zone_count: 168\n                                matrix_sum: 54.99999999999999\n                                interzonal_sum: 54.59816107740889\n                                intrazonal_sum: 0.4018389225911059\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBW\n                                    level: 5\n                                    zone_count: 168\n                                    matrix_sum: 54.99999999999999\n                                    interzonal_sum: 54.59816107740889\n                                    intrazonal_sum: 0.4018389225911059\n                                    Comments:\n                                    Created by disaggregate_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: NHBW\n                                        level: 5\n                                        zone_count: 120\n                                        matrix_sum: 54.99999999999999\n                                        interzonal_sum: 54.49999999999999\n                                        intrazonal_sum: 0.5\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: NHBW\n                                            level: 5\n                                            zone_count: 120\n                                            matrix_sum: 54.99999999999999\n                                            interzonal_sum: 54.49999999999999\n                                            intrazonal_sum: 0.5\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: NHBW\n                                                level: 5\n                                                zone_count: 120\n                                                matrix_sum: 330.0\n                                                interzonal_sum: 327.0\n                                                intrazonal_sum: 3.0\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Rail.csv\n                                                MND Raw Data\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                0.16666666666666666\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                ...\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Employers Business\n        level: 2\n        zone_count: 168\n        matrix_sum: 126.12659\n        interzonal_sum: 33.18302\n        intrazonal_sum: 92.94357\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Employers Business\n            level: 2\n            zone_count: 168\n            matrix_sum: 126.12659\n            interzonal_sum: 33.18302\n            intrazonal_sum: 92.94357\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: Employers Business\n                level: 2\n                zone_count: 168\n                matrix_sum: 306.74394\n                interzonal_sum: 213.80037000000002\n                intrazonal_sum: 92.94357\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: Employers Business\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 356.31149\n                    interzonal_sum: 242.64893999999998\n                    intrazonal_sum: 113.66255\n                    Comments:\n                    Created by operation <built-in function add> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: SynthRail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: Employers Business\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 256.16513999999995\n                        interzonal_sum: 215.37982999999997\n                        intrazonal_sum: 40.785309999999996\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: HBEmp\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 256.16513999999995\n                            interzonal_sum: 215.37982999999997\n                            intrazonal_sum: 40.785309999999996\n                            Comments:\n                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_Inter_peak.csv\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: HBEmp\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 256.16513999999995\n                            interzonal_sum: 215.37982999999997\n                            intrazonal_sum: 40.785309999999996\n                            \n                        ]\n                        \n                    ]\n                    <built-in function add>\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBW\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 100.14635000000001\n                        interzonal_sum: 27.269110000000012\n                        intrazonal_sum: 72.87724\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBW\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 100.14635000000001\n                            interzonal_sum: 27.269110000000012\n                            intrazonal_sum: 72.87724\n                            Comments:\n                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_Inter_peak.csv\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBW\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 100.14635000000001\n                            interzonal_sum: 27.269110000000012\n                            intrazonal_sum: 72.87724\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://3": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 3, "_purpose": "Other", "_time_period": "Inter_peak", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: Other\nlevel: 3\nzone_count: 168\nmatrix_sum: 12.753706670953173\ninterzonal_sum: 6.3036466709531735\nintrazonal_sum: 6.45006\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Other\n    level: 3\n    zone_count: 168\n    matrix_sum: 0.4256966709531735\n    interzonal_sum: 0.4256966709531735\n    intrazonal_sum: 0.0\n    Comments:\n    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Other\n        level: 3\n        zone_count: 168\n        matrix_sum: 0.5159615722321718\n        interzonal_sum: 0.5128990638640231\n        intrazonal_sum: 0.003062508368148704\n        Comments:\n        Created by operation <built-in function mul> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Other\n            level: 3\n            zone_count: 168\n            matrix_sum: 453.5645525426243\n            interzonal_sum: 446.0273942302385\n            intrazonal_sum: 7.537158312385808\n            Comments:\n            Created by operation <built-in function add> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: Other\n                level: 5\n                zone_count: 168\n                matrix_sum: 268.73121920929094\n                interzonal_sum: 263.2633474555544\n                intrazonal_sum: 5.467871753736505\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: Other\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 135.61337046677883\n                    interzonal_sum: 132.9014476158065\n                    intrazonal_sum: 2.7119228509723334\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 135.61337046677883\n                        interzonal_sum: 132.9014476158065\n                        intrazonal_sum: 2.7119228509723334\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 135.61337046677883\n                            interzonal_sum: 134.47348881028233\n                            intrazonal_sum: 1.1398816564965029\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBO\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 135.61337046677883\n                                interzonal_sum: 134.47348881028233\n                                intrazonal_sum: 1.1398816564965029\n                                Comments:\n                                Created by furness_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 157.16666666666666\n                                    interzonal_sum: 155.75512940409635\n                                    intrazonal_sum: 1.411537262570307\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 157.16666666666666\n                                        interzonal_sum: 155.75512940409635\n                                        intrazonal_sum: 1.411537262570307\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 120\n                                            matrix_sum: 157.16666666666663\n                                            interzonal_sum: 156.3333333333333\n                                            intrazonal_sum: 0.8333333333333333\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 157.16666666666663\n                                                interzonal_sum: 156.3333333333333\n                                                intrazonal_sum: 0.8333333333333333\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 943.0\n                                                    interzonal_sum: 938.0\n                                                    intrazonal_sum: 5.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    0.16666666666666666\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                Convergence Information:\n                                1: count: 168, col_pass: 28, row_pass: 34\n                                2: count: 168, col_pass: 46, row_pass: 109\n                                3: count: 168, col_pass: 168, row_pass: 168\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBO\n                    level: 6\n                    zone_count: 168\n                    matrix_sum: 133.11784874251214\n                    interzonal_sum: 130.36189983974796\n                    intrazonal_sum: 2.75594890276417\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBO\n                        level: 6\n                        zone_count: 168\n                        matrix_sum: 133.11784874251214\n                        interzonal_sum: 130.36189983974796\n                        intrazonal_sum: 2.75594890276417\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBO\n                            level: 6\n                            zone_count: 168\n                            matrix_sum: 133.11784874251214\n                            interzonal_sum: 132.05695191396674\n                            intrazonal_sum: 1.060896828545399\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 133.11784874251214\n                                interzonal_sum: 132.05695191396674\n                                intrazonal_sum: 1.060896828545399\n                                Comments:\n                                Created by furness_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 155.33333333333334\n                                    interzonal_sum: 154.010461458477\n                                    intrazonal_sum: 1.3228718748563326\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 155.33333333333334\n                                        interzonal_sum: 154.010461458477\n                                        intrazonal_sum: 1.3228718748563326\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 120\n                                            matrix_sum: 155.33333333333331\n                                            interzonal_sum: 154.66666666666666\n                                            intrazonal_sum: 0.6666666666666666\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 155.33333333333331\n                                                interzonal_sum: 154.66666666666666\n                                                intrazonal_sum: 0.6666666666666666\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 932.0\n                                                    interzonal_sum: 928.0\n                                                    intrazonal_sum: 4.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    0.16666666666666666\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                Convergence Information:\n                                1: count: 168, col_pass: 37, row_pass: 30\n                                2: count: 168, col_pass: 64, row_pass: 60\n                                3: count: 168, col_pass: 110, row_pass: 168\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function add>\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBO\n                level: 8\n                zone_count: 168\n                matrix_sum: 184.83333333333331\n                interzonal_sum: 182.764046774684\n                intrazonal_sum: 2.0692865586493046\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 8\n                    zone_count: 168\n                    matrix_sum: 184.83333333333331\n                    interzonal_sum: 182.764046774684\n                    intrazonal_sum: 2.0692865586493046\n                    Comments:\n                    Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 8\n                        zone_count: 168\n                        matrix_sum: 184.83333333333331\n                        interzonal_sum: 183.52128000091085\n                        intrazonal_sum: 1.312053332422464\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBO\n                            level: 8\n                            zone_count: 168\n                            matrix_sum: 184.83333333333331\n                            interzonal_sum: 183.52128000091085\n                            intrazonal_sum: 1.312053332422464\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 184.83333333333331\n                                interzonal_sum: 183.52128000091085\n                                intrazonal_sum: 1.312053332422464\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBO\n                                    level: 6\n                                    zone_count: 120\n                                    matrix_sum: 184.8333333333333\n                                    interzonal_sum: 183.66666666666663\n                                    intrazonal_sum: 1.1666666666666667\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: NHBO\n                                        level: 6\n                                        zone_count: 120\n                                        matrix_sum: 184.8333333333333\n                                        interzonal_sum: 183.66666666666663\n                                        intrazonal_sum: 1.1666666666666667\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: NHBO\n                                            level: 6\n                                            zone_count: 120\n                                            matrix_sum: 1109.0\n                                            interzonal_sum: 1102.0\n                                            intrazonal_sum: 7.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Rail.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            0.16666666666666666\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        <built-in function mul>\n        [\n            [[ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            ...\n            [False False False ... False False False]\n            [False False False ... False False False]\n            [False False False ... False False False]]\n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: SynthRail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Other\n    level: 3\n    zone_count: 168\n    matrix_sum: 12.328009999999999\n    interzonal_sum: 5.877949999999999\n    intrazonal_sum: 6.45006\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Other\n        level: 3\n        zone_count: 168\n        matrix_sum: 12.328009999999999\n        interzonal_sum: 5.877949999999999\n        intrazonal_sum: 6.45006\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Other\n            level: 3\n            zone_count: 168\n            matrix_sum: 91.14360999999997\n            interzonal_sum: 84.69354999999997\n            intrazonal_sum: 6.45006\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: Other\n                level: 3\n                zone_count: 168\n                matrix_sum: 1004.73931\n                interzonal_sum: 914.53524\n                intrazonal_sum: 90.20407\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: Other\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 827.68623\n                    interzonal_sum: 737.48216\n                    intrazonal_sum: 90.20407\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 827.68623\n                        interzonal_sum: 737.48216\n                        intrazonal_sum: 90.20407\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_Inter_peak.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 827.68623\n                        interzonal_sum: 737.48216\n                        intrazonal_sum: 90.20407\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 177.05308000000002\n                    interzonal_sum: 177.05308000000002\n                    intrazonal_sum: 0.0\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 177.05308000000002\n                        interzonal_sum: 177.05308000000002\n                        intrazonal_sum: 0.0\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_Inter_peak.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 177.05308000000002\n                        interzonal_sum: 177.05308000000002\n                        intrazonal_sum: 0.0\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: Other\nlevel: 3\nzone_count: 168\nmatrix_sum: 561.3453391778323\ninterzonal_sum: 477.59132917783234\nintrazonal_sum: 83.75401\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: Other\n    level: 3\n    zone_count: 168\n    matrix_sum: 561.3453391778323\n    interzonal_sum: 477.59132917783234\n    intrazonal_sum: 83.75401\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Other\n        level: 3\n        zone_count: 168\n        matrix_sum: 434.93979917783224\n        interzonal_sum: 434.93979917783224\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Other\n            level: 3\n            zone_count: 168\n            matrix_sum: 453.0485909703921\n            interzonal_sum: 445.51449516637445\n            intrazonal_sum: 7.534095804017659\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: Other\n                level: 3\n                zone_count: 168\n                matrix_sum: 453.5645525426243\n                interzonal_sum: 446.0273942302385\n                intrazonal_sum: 7.537158312385808\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: Other\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 268.73121920929094\n                    interzonal_sum: 263.2633474555544\n                    intrazonal_sum: 5.467871753736505\n                    Comments:\n                    Created by operation <built-in function add> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: Other\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 135.61337046677883\n                        interzonal_sum: 132.9014476158065\n                        intrazonal_sum: 2.7119228509723334\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: IB_HBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 135.61337046677883\n                            interzonal_sum: 132.9014476158065\n                            intrazonal_sum: 2.7119228509723334\n                            Comments:\n                            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: IB_HBO\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 135.61337046677883\n                                interzonal_sum: 134.47348881028233\n                                intrazonal_sum: 1.1398816564965029\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: IB_HBO\n                                    level: 5\n                                    zone_count: 168\n                                    matrix_sum: 135.61337046677883\n                                    interzonal_sum: 134.47348881028233\n                                    intrazonal_sum: 1.1398816564965029\n                                    Comments:\n                                    Created by furness_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 157.16666666666666\n                                        interzonal_sum: 155.75512940409635\n                                        intrazonal_sum: 1.411537262570307\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 157.16666666666666\n                                            interzonal_sum: 155.75512940409635\n                                            intrazonal_sum: 1.411537262570307\n                                            Comments:\n                                            Created by disaggregate_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 157.16666666666663\n                                                interzonal_sum: 156.3333333333333\n                                                intrazonal_sum: 0.8333333333333333\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 157.16666666666663\n                                                    interzonal_sum: 156.3333333333333\n                                                    intrazonal_sum: 0.8333333333333333\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Rail\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: IB_HBO\n                                                        level: 3\n                                                        zone_count: 120\n                                                        matrix_sum: 943.0\n                                                        interzonal_sum: 938.0\n                                                        intrazonal_sum: 5.0\n                                                        Comments:\n                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                                        MND Raw Data\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        0.16666666666666666\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    Convergence Information:\n                                    1: count: 168, col_pass: 28, row_pass: 34\n                                    2: count: 168, col_pass: 46, row_pass: 109\n                                    3: count: 168, col_pass: 168, row_pass: 168\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    <built-in function add>\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBO\n                        level: 6\n                        zone_count: 168\n                        matrix_sum: 133.11784874251214\n                        interzonal_sum: 130.36189983974796\n                        intrazonal_sum: 2.75594890276417\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: OB_HBO\n                            level: 6\n                            zone_count: 168\n                            matrix_sum: 133.11784874251214\n                            interzonal_sum: 130.36189983974796\n                            intrazonal_sum: 2.75594890276417\n                            Comments:\n                            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: OB_HBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 133.11784874251214\n                                interzonal_sum: 132.05695191396674\n                                intrazonal_sum: 1.060896828545399\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: OB_HBO\n                                    level: 6\n                                    zone_count: 168\n                                    matrix_sum: 133.11784874251214\n                                    interzonal_sum: 132.05695191396674\n                                    intrazonal_sum: 1.060896828545399\n                                    Comments:\n                                    Created by furness_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 155.33333333333334\n                                        interzonal_sum: 154.010461458477\n                                        intrazonal_sum: 1.3228718748563326\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 168\n                                            matrix_sum: 155.33333333333334\n                                            interzonal_sum: 154.010461458477\n                                            intrazonal_sum: 1.3228718748563326\n                                            Comments:\n                                            Created by disaggregate_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 155.33333333333331\n                                                interzonal_sum: 154.66666666666666\n                                                intrazonal_sum: 0.6666666666666666\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: Inter_peak\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 155.33333333333331\n                                                    interzonal_sum: 154.66666666666666\n                                                    intrazonal_sum: 0.6666666666666666\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Rail\n                                                        value_type: Person Trips\n                                                        time_period: Inter_peak\n                                                        purpose: OB_HBO\n                                                        level: 4\n                                                        zone_count: 120\n                                                        matrix_sum: 932.0\n                                                        interzonal_sum: 928.0\n                                                        intrazonal_sum: 4.0\n                                                        Comments:\n                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                                        MND Raw Data\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        0.16666666666666666\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    Convergence Information:\n                                    1: count: 168, col_pass: 37, row_pass: 30\n                                    2: count: 168, col_pass: 64, row_pass: 60\n                                    3: count: 168, col_pass: 110, row_pass: 168\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 8\n                    zone_count: 168\n                    matrix_sum: 184.83333333333331\n                    interzonal_sum: 182.764046774684\n                    intrazonal_sum: 2.0692865586493046\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 8\n                        zone_count: 168\n                        matrix_sum: 184.83333333333331\n                        interzonal_sum: 182.764046774684\n                        intrazonal_sum: 2.0692865586493046\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBO\n                            level: 8\n                            zone_count: 168\n                            matrix_sum: 184.83333333333331\n                            interzonal_sum: 183.52128000091085\n                            intrazonal_sum: 1.312053332422464\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: Inter_peak\n                                purpose: NHBO\n                                level: 8\n                                zone_count: 168\n                                matrix_sum: 184.83333333333331\n                                interzonal_sum: 183.52128000091085\n                                intrazonal_sum: 1.312053332422464\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: Inter_peak\n                                    purpose: NHBO\n                                    level: 6\n                                    zone_count: 168\n                                    matrix_sum: 184.83333333333331\n                                    interzonal_sum: 183.52128000091085\n                                    intrazonal_sum: 1.312053332422464\n                                    Comments:\n                                    Created by disaggregate_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: Inter_peak\n                                        purpose: NHBO\n                                        level: 6\n                                        zone_count: 120\n                                        matrix_sum: 184.8333333333333\n                                        interzonal_sum: 183.66666666666663\n                                        intrazonal_sum: 1.1666666666666667\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: Inter_peak\n                                            purpose: NHBO\n                                            level: 6\n                                            zone_count: 120\n                                            matrix_sum: 184.8333333333333\n                                            interzonal_sum: 183.66666666666663\n                                            intrazonal_sum: 1.1666666666666667\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: Inter_peak\n                                                purpose: NHBO\n                                                level: 6\n                                                zone_count: 120\n                                                matrix_sum: 1109.0\n                                                interzonal_sum: 1102.0\n                                                intrazonal_sum: 7.0\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Rail.csv\n                                                MND Raw Data\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                0.16666666666666666\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                ...\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: Other\n        level: 3\n        zone_count: 168\n        matrix_sum: 126.40554\n        interzonal_sum: 42.65153000000001\n        intrazonal_sum: 83.75401\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: Other\n            level: 3\n            zone_count: 168\n            matrix_sum: 126.40554\n            interzonal_sum: 42.65153000000001\n            intrazonal_sum: 83.75401\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: Other\n                level: 3\n                zone_count: 168\n                matrix_sum: 913.5957\n                interzonal_sum: 829.84169\n                intrazonal_sum: 83.75401\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: Other\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 1004.73931\n                    interzonal_sum: 914.53524\n                    intrazonal_sum: 90.20407\n                    Comments:\n                    Created by operation <built-in function add> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: SynthRail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: Other\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 827.68623\n                        interzonal_sum: 737.48216\n                        intrazonal_sum: 90.20407\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 827.68623\n                            interzonal_sum: 737.48216\n                            intrazonal_sum: 90.20407\n                            Comments:\n                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_Inter_peak.csv\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 827.68623\n                            interzonal_sum: 737.48216\n                            intrazonal_sum: 90.20407\n                            \n                        ]\n                        \n                    ]\n                    <built-in function add>\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: NHBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 177.05308000000002\n                        interzonal_sum: 177.05308000000002\n                        intrazonal_sum: 0.0\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 177.05308000000002\n                            interzonal_sum: 177.05308000000002\n                            intrazonal_sum: 0.0\n                            Comments:\n                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_Inter_peak.csv\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: Inter_peak\n                            purpose: NHBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 177.05308000000002\n                            interzonal_sum: 177.05308000000002\n                            intrazonal_sum: 0.0\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}}}