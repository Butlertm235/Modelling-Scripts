{"py/object": "matrix_class.MatrixStack", "_name": "MND_Raw", "_vehicle_type": "Road", "_zones": {"py/object": "matrix_class.Zones", "_name": "MND_Raw_Zones", "_disaggregation_maps": {"area": {"json://1059": {"py/object": "matrix_class.ZoneMapping", "_zone": 1059, "_targets": {"json://501": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.007004376634299277}, "json://502": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.011906588459000498}, "json://504": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.006733861668597757}, "json://505": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004039790110446941}, "json://506": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.007709038893622896}, "json://509": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0031005742566167015}, "json://511": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004485456738949949}, "json://512": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.007427534678109647}, "json://514": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.007951783491473586}, "json://515": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.00583474657208342}, "json://516": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004461975825528865}, "json://523": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.009253339161835966}, "json://524": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.005576878397720034}, "json://525": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.011339012088590322}, "json://526": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1387422716164915}, "json://527": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.01087332037066269}, "json://528": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.09247102489455923}, "json://551": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0059164765158919806}, "json://562": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.005448755515619047}, "json://566": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.003788460248678329}, "json://567": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.028689033904944355}, "json://570": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0026808323946460547}, "json://601": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2774912025680543}, "json://603": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.013506542292907417}, "json://604": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.028945086275620077}, "json://605": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0494028716674882}, "json://5067": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0847703522746029}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.006331034495133813}, "json://517": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.002839387007621827}, "json://5141": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0979868087246228}, "json://602": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05329158225557951}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1057": {"py/object": "matrix_class.ZoneMapping", "_zone": 1057, "_targets": {"json://512": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0658346825773895}, "json://513": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.02183988738011394}, "json://519": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.057501230820036116}, "json://520": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05077477196272414}, "json://521": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11944945366996006}, "json://544": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1266676193156997}, "json://545": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11669313656269026}, "json://548": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.41502634543384775}, "json://571": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.026212872277538518}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1055": {"py/object": "matrix_class.ZoneMapping", "_zone": 1055, "_targets": {"json://531": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.012652261031797571}, "json://532": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04225390857012272}, "json://533": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.07677754879643264}, "json://534": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.003358611955981027}, "json://535": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.00842889388053005}, "json://536": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.041800272528089516}, "json://537": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0662068894445256}, "json://538": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08288709829733024}, "json://607": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5747121443581755}, "json://608": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.09092237113701505}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1054": {"py/object": "matrix_class.ZoneMapping", "_zone": 1054, "_targets": {"json://539": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.21708189501480873}, "json://540": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0786714385833571}, "json://541": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.24699996557785828}, "json://542": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.29325459586816327}, "json://543": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1639921049558127}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1058": {"py/object": "matrix_class.ZoneMapping", "_zone": 1058, "_targets": {"json://545": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2845322046466959}, "json://546": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.22521361207879884}, "json://5119": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.23351772243643312}, "json://572": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.07237564322528178}, "json://547": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.18436081761279044}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1062": {"py/object": "matrix_class.ZoneMapping", "_zone": 1062, "_targets": {"json://606": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.01639162098808925}, "json://5034": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.009840271804145866}, "json://5065": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.015337229935482252}, "json://5067": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.016762651403253604}, "json://5026": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1360600625850998}, "json://609": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.021718376499702746}, "json://5141": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.03731282492275958}, "json://5143": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.00892957715359788}, "json://5142": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0036742149969418367}, "json://610": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0016339205391127324}, "json://5115": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.18464138590420281}, "json://5107": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.18934315133340865}, "json://5025": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.34366150724291133}, "json://5112": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.010393260814741982}, "json://5070": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004299943876549683}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5": {"py/object": "matrix_class.ZoneMapping", "_zone": 5, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.14066610010769035}, "json://5004": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.002882440211062712}, "json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.01681237948977417}, "json://5008": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.012926790659005984}, "json://5009": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.013209399613304062}, "json://5022": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05127065104356237}, "json://5024": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.005834047765250202}, "json://5028": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004037497227915902}, "json://5030": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.01102624866285752}, "json://5018": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.19701256382862303}, "json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.008786846367219095}, "json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.07415083348751109}, "json://5017": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2667223357598785}, "json://5139": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1946618657763449}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1064": {"py/object": "matrix_class.ZoneMapping", "_zone": 1064, "_targets": {"json://5038": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.09339461369864724}, "json://5006": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4163554082973387}, "json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0023933477189542114}, "json://5138": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.37440854301514}, "json://5029": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.03805377075678336}, "json://5005": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.07539431651313638}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1065": {"py/object": "matrix_class.ZoneMapping", "_zone": 1065, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1049": {"py/object": "matrix_class.ZoneMapping", "_zone": 1049, "_targets": {"json://5011": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1056": {"py/object": "matrix_class.ZoneMapping", "_zone": 1056, "_targets": {"json://5012": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.823275863365533}, "json://5021": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.17672413663446698}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1052": {"py/object": "matrix_class.ZoneMapping", "_zone": 1052, "_targets": {"json://5013": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.12890350980569798}, "json://5035": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8710964901943019}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1051": {"py/object": "matrix_class.ZoneMapping", "_zone": 1051, "_targets": {"json://5014": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.19016181841193766}, "json://5104": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8098381815880622}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1063": {"py/object": "matrix_class.ZoneMapping", "_zone": 1063, "_targets": {"json://5110": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2367767763575927}, "json://5135": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08537617207454147}, "json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.09534520484918631}, "json://5023": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.40217448795749505}, "json://5111": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.18032735876118444}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1060": {"py/object": "matrix_class.ZoneMapping", "_zone": 1060, "_targets": {"json://5140": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.19075673885605154}, "json://5027": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13712508280354485}, "json://5106": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11046537789754338}, "json://5105": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.23327268810344237}, "json://5108": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.22893519116556169}, "json://5109": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.09944492117385614}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1067": {"py/object": "matrix_class.ZoneMapping", "_zone": 1067, "_targets": {"json://5031": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1050": {"py/object": "matrix_class.ZoneMapping", "_zone": 1050, "_targets": {"json://5032": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.31189194363362555}, "json://5103": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6881080563663744}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1053": {"py/object": "matrix_class.ZoneMapping", "_zone": 1053, "_targets": {"json://5036": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2315468664254886}, "json://5037": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5400890861008213}, "json://5039": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1587421814387743}, "json://5040": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.020507773774046566}, "json://5041": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.026583966432165894}, "json://5042": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.017331376622572614}, "json://5043": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.005198749206130652}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://4": {"py/object": "matrix_class.ZoneMapping", "_zone": 4, "_targets": {"json://5045": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0030650801228995703}, "json://5046": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.002922521896172704}, "json://5053": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0034800426261534013}, "json://5056": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.03803482908001607}, "json://5100": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.112671866384611}, "json://5052": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15146741906091551}, "json://5049": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1334096395003866}, "json://5050": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004774672926947564}, "json://5047": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16322468467513904}, "json://5048": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004993157371237989}, "json://5054": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13334505893542}, "json://5051": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004693065456993374}, "json://5101": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.023135085533853815}, "json://5102": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08551471207116079}, "json://5055": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13526816435809258}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1061": {"py/object": "matrix_class.ZoneMapping", "_zone": 1061, "_targets": {"json://5033": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.26542434727216724}, "json://5134": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7345756527278329}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://3": {"py/object": "matrix_class.ZoneMapping", "_zone": 3, "_targets": {"json://9004": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.40379868799312907}, "json://9003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.37108482436967044}, "json://9002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.22511648763720044}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9": {"py/object": "matrix_class.ZoneMapping", "_zone": 9, "_targets": {"json://5016": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9545914957804217}, "json://5117": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04540850421957833}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1076": {"py/object": "matrix_class.ZoneMapping", "_zone": 1076, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1075": {"py/object": "matrix_class.ZoneMapping", "_zone": 1075, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1069": {"py/object": "matrix_class.ZoneMapping", "_zone": 1069, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1071": {"py/object": "matrix_class.ZoneMapping", "_zone": 1071, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1078": {"py/object": "matrix_class.ZoneMapping", "_zone": 1078, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1": {"py/object": "matrix_class.ZoneMapping", "_zone": 1, "_targets": {"json://5015": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13385617335487685}, "json://5001": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.059808379740153086}, "json://9008": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.694787171004711}, "json://5118": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11119404624058137}, "json://5117": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.00035422965967767854}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1012": {"py/object": "matrix_class.ZoneMapping", "_zone": 1012, "_targets": {"json://5019": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1082": {"py/object": "matrix_class.ZoneMapping", "_zone": 1082, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1086": {"py/object": "matrix_class.ZoneMapping", "_zone": 1086, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1085": {"py/object": "matrix_class.ZoneMapping", "_zone": 1085, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1084": {"py/object": "matrix_class.ZoneMapping", "_zone": 1084, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1083": {"py/object": "matrix_class.ZoneMapping", "_zone": 1083, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1090": {"py/object": "matrix_class.ZoneMapping", "_zone": 1090, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1089": {"py/object": "matrix_class.ZoneMapping", "_zone": 1089, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1088": {"py/object": "matrix_class.ZoneMapping", "_zone": 1088, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1087": {"py/object": "matrix_class.ZoneMapping", "_zone": 1087, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1093": {"py/object": "matrix_class.ZoneMapping", "_zone": 1093, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1092": {"py/object": "matrix_class.ZoneMapping", "_zone": 1092, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1091": {"py/object": "matrix_class.ZoneMapping", "_zone": 1091, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1110": {"py/object": "matrix_class.ZoneMapping", "_zone": 1110, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1111": {"py/object": "matrix_class.ZoneMapping", "_zone": 1111, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://2": {"py/object": "matrix_class.ZoneMapping", "_zone": 2, "_targets": {"json://9006": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.22559890834164745}, "json://9007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.41385245046505004}, "json://9005": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.36054864119330254}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://6": {"py/object": "matrix_class.ZoneMapping", "_zone": 6, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1066": {"py/object": "matrix_class.ZoneMapping", "_zone": 1066, "_targets": {"json://5137": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1007": {"py/object": "matrix_class.ZoneMapping", "_zone": 1007, "_targets": {"json://5129": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1002": {"py/object": "matrix_class.ZoneMapping", "_zone": 1002, "_targets": {"json://5127": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1001": {"py/object": "matrix_class.ZoneMapping", "_zone": 1001, "_targets": {"json://5128": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1019": {"py/object": "matrix_class.ZoneMapping", "_zone": 1019, "_targets": {"json://5128": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1081": {"py/object": "matrix_class.ZoneMapping", "_zone": 1081, "_targets": {"json://5124": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1080": {"py/object": "matrix_class.ZoneMapping", "_zone": 1080, "_targets": {"json://5124": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1077": {"py/object": "matrix_class.ZoneMapping", "_zone": 1077, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1079": {"py/object": "matrix_class.ZoneMapping", "_zone": 1079, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1074": {"py/object": "matrix_class.ZoneMapping", "_zone": 1074, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1070": {"py/object": "matrix_class.ZoneMapping", "_zone": 1070, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1068": {"py/object": "matrix_class.ZoneMapping", "_zone": 1068, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1073": {"py/object": "matrix_class.ZoneMapping", "_zone": 1073, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1072": {"py/object": "matrix_class.ZoneMapping", "_zone": 1072, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1038": {"py/object": "matrix_class.ZoneMapping", "_zone": 1038, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1037": {"py/object": "matrix_class.ZoneMapping", "_zone": 1037, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1036": {"py/object": "matrix_class.ZoneMapping", "_zone": 1036, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1042": {"py/object": "matrix_class.ZoneMapping", "_zone": 1042, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1041": {"py/object": "matrix_class.ZoneMapping", "_zone": 1041, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1040": {"py/object": "matrix_class.ZoneMapping", "_zone": 1040, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1039": {"py/object": "matrix_class.ZoneMapping", "_zone": 1039, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1046": {"py/object": "matrix_class.ZoneMapping", "_zone": 1046, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1045": {"py/object": "matrix_class.ZoneMapping", "_zone": 1045, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1044": {"py/object": "matrix_class.ZoneMapping", "_zone": 1044, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1043": {"py/object": "matrix_class.ZoneMapping", "_zone": 1043, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1048": {"py/object": "matrix_class.ZoneMapping", "_zone": 1048, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1047": {"py/object": "matrix_class.ZoneMapping", "_zone": 1047, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1034": {"py/object": "matrix_class.ZoneMapping", "_zone": 1034, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1033": {"py/object": "matrix_class.ZoneMapping", "_zone": 1033, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9776512767886467}, "json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.022348723211353352}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1032": {"py/object": "matrix_class.ZoneMapping", "_zone": 1032, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1031": {"py/object": "matrix_class.ZoneMapping", "_zone": 1031, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1035": {"py/object": "matrix_class.ZoneMapping", "_zone": 1035, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1026": {"py/object": "matrix_class.ZoneMapping", "_zone": 1026, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1025": {"py/object": "matrix_class.ZoneMapping", "_zone": 1025, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1030": {"py/object": "matrix_class.ZoneMapping", "_zone": 1030, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1029": {"py/object": "matrix_class.ZoneMapping", "_zone": 1029, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1101": {"py/object": "matrix_class.ZoneMapping", "_zone": 1101, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1103": {"py/object": "matrix_class.ZoneMapping", "_zone": 1103, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1094": {"py/object": "matrix_class.ZoneMapping", "_zone": 1094, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1018": {"py/object": "matrix_class.ZoneMapping", "_zone": 1018, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1022": {"py/object": "matrix_class.ZoneMapping", "_zone": 1022, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1021": {"py/object": "matrix_class.ZoneMapping", "_zone": 1021, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1020": {"py/object": "matrix_class.ZoneMapping", "_zone": 1020, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1024": {"py/object": "matrix_class.ZoneMapping", "_zone": 1024, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1023": {"py/object": "matrix_class.ZoneMapping", "_zone": 1023, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1028": {"py/object": "matrix_class.ZoneMapping", "_zone": 1028, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1027": {"py/object": "matrix_class.ZoneMapping", "_zone": 1027, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1010": {"py/object": "matrix_class.ZoneMapping", "_zone": 1010, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1009": {"py/object": "matrix_class.ZoneMapping", "_zone": 1009, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1014": {"py/object": "matrix_class.ZoneMapping", "_zone": 1014, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1013": {"py/object": "matrix_class.ZoneMapping", "_zone": 1013, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1011": {"py/object": "matrix_class.ZoneMapping", "_zone": 1011, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1098": {"py/object": "matrix_class.ZoneMapping", "_zone": 1098, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1097": {"py/object": "matrix_class.ZoneMapping", "_zone": 1097, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1096": {"py/object": "matrix_class.ZoneMapping", "_zone": 1096, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1095": {"py/object": "matrix_class.ZoneMapping", "_zone": 1095, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1100": {"py/object": "matrix_class.ZoneMapping", "_zone": 1100, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1017": {"py/object": "matrix_class.ZoneMapping", "_zone": 1017, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1016": {"py/object": "matrix_class.ZoneMapping", "_zone": 1016, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1015": {"py/object": "matrix_class.ZoneMapping", "_zone": 1015, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1102": {"py/object": "matrix_class.ZoneMapping", "_zone": 1102, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1099": {"py/object": "matrix_class.ZoneMapping", "_zone": 1099, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1106": {"py/object": "matrix_class.ZoneMapping", "_zone": 1106, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1105": {"py/object": "matrix_class.ZoneMapping", "_zone": 1105, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1104": {"py/object": "matrix_class.ZoneMapping", "_zone": 1104, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1108": {"py/object": "matrix_class.ZoneMapping", "_zone": 1108, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1107": {"py/object": "matrix_class.ZoneMapping", "_zone": 1107, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1006": {"py/object": "matrix_class.ZoneMapping", "_zone": 1006, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1005": {"py/object": "matrix_class.ZoneMapping", "_zone": 1005, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1004": {"py/object": "matrix_class.ZoneMapping", "_zone": 1004, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1003": {"py/object": "matrix_class.ZoneMapping", "_zone": 1003, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1008": {"py/object": "matrix_class.ZoneMapping", "_zone": 1008, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://8": {"py/object": "matrix_class.ZoneMapping", "_zone": 8, "_targets": {"json://5116": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://7": {"py/object": "matrix_class.ZoneMapping", "_zone": 7, "_targets": {"json://5116": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1109": {"py/object": "matrix_class.ZoneMapping", "_zone": 1109, "_targets": {"json://5116": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}}, "adults": {"json://1059": {"py/object": "matrix_class.ZoneMapping", "_zone": 1059, "_targets": {"json://501": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.02638384217843287}, "json://502": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04032577021215805}, "json://504": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.02625024305780609}, "json://505": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.013447214458334932}, "json://506": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.037668338198898664}, "json://509": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.012787155436624413}, "json://511": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.01670914942334122}, "json://512": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0734292513290467}, "json://514": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13115729907552054}, "json://515": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06293841345091819}, "json://516": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.018886418260486537}, "json://523": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.028616667085541798}, "json://524": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.00025529336911849713}, "json://525": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.031198701575279136}, "json://526": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.09250350201655307}, "json://527": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.018078209718873056}, "json://528": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.028934130342476716}, "json://551": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06210507240146403}, "json://562": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06557335848347802}, "json://566": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.030280703657308995}, "json://567": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04089984960178202}, "json://570": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04378744247631922}, "json://601": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.012631069335298077}, "json://603": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004453744942082797}, "json://604": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0013029221170037287}, "json://605": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0022341476706794904}, "json://5067": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.003822786718924646}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.025497590586156218}, "json://517": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.011005392907077182}, "json://5141": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004391575054266376}, "json://602": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.03244474485874869}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1057": {"py/object": "matrix_class.ZoneMapping", "_zone": 1057, "_targets": {"json://512": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.041456674277440556}, "json://513": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.048842373447680575}, "json://519": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04455609233168124}, "json://520": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.09783092944255722}, "json://521": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15232395444673386}, "json://544": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04608230773514507}, "json://545": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.18151869744389373}, "json://548": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.33906519741604946}, "json://571": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04667573926602439}, "json://602": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0016480341927938968}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1055": {"py/object": "matrix_class.ZoneMapping", "_zone": 1055, "_targets": {"json://531": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1155251161061811}, "json://532": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16388382118579983}, "json://533": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.10067591528414507}, "json://534": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.047119669476571556}, "json://535": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05134734440489976}, "json://536": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.21882009630297417}, "json://537": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.19197574908247284}, "json://538": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.050595377969946995}, "json://607": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05205017666938686}, "json://608": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.008006733517622079}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1054": {"py/object": "matrix_class.ZoneMapping", "_zone": 1054, "_targets": {"json://539": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.35662206061675455}, "json://540": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11338937710124744}, "json://541": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.33561667575172277}, "json://542": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11605187619536757}, "json://543": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.07832001033490772}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1058": {"py/object": "matrix_class.ZoneMapping", "_zone": 1058, "_targets": {"json://545": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.10721207034966923}, "json://546": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04930668637517698}, "json://5119": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.38392744678171054}, "json://572": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08597180003551173}, "json://547": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.37358199645793144}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1062": {"py/object": "matrix_class.ZoneMapping", "_zone": 1062, "_targets": {"json://606": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.010121493288689512}, "json://5034": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.01852757915337865}, "json://5065": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06715083206102372}, "json://5067": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0247596366401594}, "json://5026": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.14637907556634974}, "json://609": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.013468600970295747}, "json://5141": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.016715495847063472}, "json://5143": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.030566084449920126}, "json://5142": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1120992224665319}, "json://610": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.01991994765354665}, "json://5115": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.32871214756040773}, "json://5107": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05609323327772506}, "json://5025": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.14103714358136987}, "json://5112": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.006417156432188354}, "json://5070": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.008032351051350221}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5": {"py/object": "matrix_class.ZoneMapping", "_zone": 5, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.059230504686402966}, "json://5004": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.00236207082832954}, "json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.016215249564397953}, "json://5008": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0031952639772895516}, "json://5009": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.007450486929110667}, "json://5022": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.017045834291584353}, "json://5024": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.001466143818329343}, "json://5028": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.016337476520032316}, "json://5030": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004695255800721635}, "json://5018": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.12035861425669896}, "json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0929091555902861}, "json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.12680503445426555}, "json://5017": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4271955143155193}, "json://5134": {"py/object": "numpy.float64", "dtype": "float64", "value": 4.78649786740881e-06}, "json://5139": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.10472860846916433}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1064": {"py/object": "matrix_class.ZoneMapping", "_zone": 1064, "_targets": {"json://5038": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2068678254418205}, "json://5006": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.34891125862023126}, "json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0009216858241428513}, "json://5138": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15658403989582925}, "json://5029": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1747126378572324}, "json://5005": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11200255236074377}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1065": {"py/object": "matrix_class.ZoneMapping", "_zone": 1065, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1049": {"py/object": "matrix_class.ZoneMapping", "_zone": 1049, "_targets": {"json://5011": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1056": {"py/object": "matrix_class.ZoneMapping", "_zone": 1056, "_targets": {"json://5012": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6698031317119252}, "json://5021": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3301968682880747}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1052": {"py/object": "matrix_class.ZoneMapping", "_zone": 1052, "_targets": {"json://5013": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6912651328799498}, "json://5035": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.30873486712005016}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1051": {"py/object": "matrix_class.ZoneMapping", "_zone": 1051, "_targets": {"json://5014": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5331056602653849}, "json://5104": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.46689433973461525}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1063": {"py/object": "matrix_class.ZoneMapping", "_zone": 1063, "_targets": {"json://5110": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05747527897809246}, "json://5135": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.07173045398221702}, "json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.34545894923809756}, "json://5023": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3598668206501708}, "json://5111": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16546849715142217}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1060": {"py/object": "matrix_class.ZoneMapping", "_zone": 1060, "_targets": {"json://5140": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.037708262094824835}, "json://5027": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11600689279945019}, "json://5106": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2827378495880659}, "json://5105": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.25402795862298977}, "json://5108": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.18614264321677446}, "json://5109": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.12337639367789469}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1067": {"py/object": "matrix_class.ZoneMapping", "_zone": 1067, "_targets": {"json://5031": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1050": {"py/object": "matrix_class.ZoneMapping", "_zone": 1050, "_targets": {"json://5032": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.30852789242264844}, "json://5103": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6914721075773516}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1053": {"py/object": "matrix_class.ZoneMapping", "_zone": 1053, "_targets": {"json://5036": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.03523385324677891}, "json://5037": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3353127296444094}, "json://5039": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05454329847080405}, "json://5040": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15144987036601162}, "json://5041": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.14988851297328085}, "json://5042": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16940098856022726}, "json://5043": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1041707467384879}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://4": {"py/object": "matrix_class.ZoneMapping", "_zone": 4, "_targets": {"json://5045": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0016842998034498442}, "json://5046": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0009594839054075498}, "json://5053": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0009153726026486237}, "json://5056": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.01620946467368251}, "json://5100": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.030450848005005096}, "json://5052": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15016624896519104}, "json://5049": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.17436179630990575}, "json://5050": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06776534798674588}, "json://5047": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.17158138990550992}, "json://5048": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05369207643542305}, "json://5054": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1445408629166925}, "json://5051": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.07051877924849152}, "json://9006": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.6032089004689342e-06}, "json://9003": {"py/object": "numpy.float64", "dtype": "float64", "value": 3.2281194442606284e-07}, "json://5101": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.014172019453852214}, "json://5102": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.037878824089295014}, "json://5055": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06510125967785463}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1061": {"py/object": "matrix_class.ZoneMapping", "_zone": 1061, "_targets": {"json://5033": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3057221277241141}, "json://5134": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6942778722758859}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://3": {"py/object": "matrix_class.ZoneMapping", "_zone": 3, "_targets": {"json://9004": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3536905420848461}, "json://5047": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.2014152240486937e-07}, "json://9003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4709601509958538}, "json://9002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1753491867777775}, "json://9001": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9": {"py/object": "matrix_class.ZoneMapping", "_zone": 9, "_targets": {"json://5016": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8176655343999814}, "json://5117": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1822981480781484}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 3.6317521870189313e-05}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://2": {"py/object": "matrix_class.ZoneMapping", "_zone": 2, "_targets": {"json://5047": {"py/object": "numpy.float64", "dtype": "float64", "value": 3.8545510759873e-07}, "json://9006": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3989983661045346}, "json://9008": {"py/object": "numpy.float64", "dtype": "float64", "value": 8.861036956292644e-08}, "json://9007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3822996090448468}, "json://9005": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.21870155078514153}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1076": {"py/object": "matrix_class.ZoneMapping", "_zone": 1076, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9995710353042109}, "json://5032": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.00042896469578906595}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1075": {"py/object": "matrix_class.ZoneMapping", "_zone": 1075, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1069": {"py/object": "matrix_class.ZoneMapping", "_zone": 1069, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1071": {"py/object": "matrix_class.ZoneMapping", "_zone": 1071, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1078": {"py/object": "matrix_class.ZoneMapping", "_zone": 1078, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1": {"py/object": "matrix_class.ZoneMapping", "_zone": 1, "_targets": {"json://5015": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.14304318933055227}, "json://5001": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.09232315941311665}, "json://9008": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7173797393121915}, "json://9007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.3044237797399203e-07}, "json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.99494017742764e-06}, "json://5118": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.046404147143342164}, "json://5117": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0008474644598146333}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.7495842760003693e-07}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://6": {"py/object": "matrix_class.ZoneMapping", "_zone": 6, "_targets": {"json://5015": {"py/object": "numpy.float64", "dtype": "float64", "value": 5.99780575351574e-07}, "json://9008": {"py/object": "numpy.float64", "dtype": "float64", "value": 2.197657544044613e-06}, "json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9999972025618805}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1012": {"py/object": "matrix_class.ZoneMapping", "_zone": 1012, "_targets": {"json://5019": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1082": {"py/object": "matrix_class.ZoneMapping", "_zone": 1082, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1086": {"py/object": "matrix_class.ZoneMapping", "_zone": 1086, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1085": {"py/object": "matrix_class.ZoneMapping", "_zone": 1085, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1084": {"py/object": "matrix_class.ZoneMapping", "_zone": 1084, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1083": {"py/object": "matrix_class.ZoneMapping", "_zone": 1083, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1090": {"py/object": "matrix_class.ZoneMapping", "_zone": 1090, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1089": {"py/object": "matrix_class.ZoneMapping", "_zone": 1089, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1088": {"py/object": "matrix_class.ZoneMapping", "_zone": 1088, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1087": {"py/object": "matrix_class.ZoneMapping", "_zone": 1087, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1093": {"py/object": "matrix_class.ZoneMapping", "_zone": 1093, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1092": {"py/object": "matrix_class.ZoneMapping", "_zone": 1092, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1091": {"py/object": "matrix_class.ZoneMapping", "_zone": 1091, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1110": {"py/object": "matrix_class.ZoneMapping", "_zone": 1110, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1111": {"py/object": "matrix_class.ZoneMapping", "_zone": 1111, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1066": {"py/object": "matrix_class.ZoneMapping", "_zone": 1066, "_targets": {"json://5137": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1007": {"py/object": "matrix_class.ZoneMapping", "_zone": 1007, "_targets": {"json://5129": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1002": {"py/object": "matrix_class.ZoneMapping", "_zone": 1002, "_targets": {"json://5127": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1001": {"py/object": "matrix_class.ZoneMapping", "_zone": 1001, "_targets": {"json://5128": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1019": {"py/object": "matrix_class.ZoneMapping", "_zone": 1019, "_targets": {"json://5128": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1081": {"py/object": "matrix_class.ZoneMapping", "_zone": 1081, "_targets": {"json://5124": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1080": {"py/object": "matrix_class.ZoneMapping", "_zone": 1080, "_targets": {"json://5124": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1077": {"py/object": "matrix_class.ZoneMapping", "_zone": 1077, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1079": {"py/object": "matrix_class.ZoneMapping", "_zone": 1079, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1074": {"py/object": "matrix_class.ZoneMapping", "_zone": 1074, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1070": {"py/object": "matrix_class.ZoneMapping", "_zone": 1070, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1068": {"py/object": "matrix_class.ZoneMapping", "_zone": 1068, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1073": {"py/object": "matrix_class.ZoneMapping", "_zone": 1073, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1072": {"py/object": "matrix_class.ZoneMapping", "_zone": 1072, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1038": {"py/object": "matrix_class.ZoneMapping", "_zone": 1038, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1037": {"py/object": "matrix_class.ZoneMapping", "_zone": 1037, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1036": {"py/object": "matrix_class.ZoneMapping", "_zone": 1036, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1042": {"py/object": "matrix_class.ZoneMapping", "_zone": 1042, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1041": {"py/object": "matrix_class.ZoneMapping", "_zone": 1041, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1040": {"py/object": "matrix_class.ZoneMapping", "_zone": 1040, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1039": {"py/object": "matrix_class.ZoneMapping", "_zone": 1039, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1046": {"py/object": "matrix_class.ZoneMapping", "_zone": 1046, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1045": {"py/object": "matrix_class.ZoneMapping", "_zone": 1045, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1044": {"py/object": "matrix_class.ZoneMapping", "_zone": 1044, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1043": {"py/object": "matrix_class.ZoneMapping", "_zone": 1043, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1048": {"py/object": "matrix_class.ZoneMapping", "_zone": 1048, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1047": {"py/object": "matrix_class.ZoneMapping", "_zone": 1047, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1034": {"py/object": "matrix_class.ZoneMapping", "_zone": 1034, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1033": {"py/object": "matrix_class.ZoneMapping", "_zone": 1033, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9857090134749034}, "json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.014290986525096729}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1032": {"py/object": "matrix_class.ZoneMapping", "_zone": 1032, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1031": {"py/object": "matrix_class.ZoneMapping", "_zone": 1031, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1035": {"py/object": "matrix_class.ZoneMapping", "_zone": 1035, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1026": {"py/object": "matrix_class.ZoneMapping", "_zone": 1026, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1025": {"py/object": "matrix_class.ZoneMapping", "_zone": 1025, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1030": {"py/object": "matrix_class.ZoneMapping", "_zone": 1030, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1029": {"py/object": "matrix_class.ZoneMapping", "_zone": 1029, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1101": {"py/object": "matrix_class.ZoneMapping", "_zone": 1101, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1103": {"py/object": "matrix_class.ZoneMapping", "_zone": 1103, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1094": {"py/object": "matrix_class.ZoneMapping", "_zone": 1094, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1018": {"py/object": "matrix_class.ZoneMapping", "_zone": 1018, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1022": {"py/object": "matrix_class.ZoneMapping", "_zone": 1022, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1021": {"py/object": "matrix_class.ZoneMapping", "_zone": 1021, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1020": {"py/object": "matrix_class.ZoneMapping", "_zone": 1020, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1024": {"py/object": "matrix_class.ZoneMapping", "_zone": 1024, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1023": {"py/object": "matrix_class.ZoneMapping", "_zone": 1023, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1028": {"py/object": "matrix_class.ZoneMapping", "_zone": 1028, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1027": {"py/object": "matrix_class.ZoneMapping", "_zone": 1027, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1010": {"py/object": "matrix_class.ZoneMapping", "_zone": 1010, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1009": {"py/object": "matrix_class.ZoneMapping", "_zone": 1009, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1014": {"py/object": "matrix_class.ZoneMapping", "_zone": 1014, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1013": {"py/object": "matrix_class.ZoneMapping", "_zone": 1013, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1011": {"py/object": "matrix_class.ZoneMapping", "_zone": 1011, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1098": {"py/object": "matrix_class.ZoneMapping", "_zone": 1098, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1097": {"py/object": "matrix_class.ZoneMapping", "_zone": 1097, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1096": {"py/object": "matrix_class.ZoneMapping", "_zone": 1096, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1095": {"py/object": "matrix_class.ZoneMapping", "_zone": 1095, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1100": {"py/object": "matrix_class.ZoneMapping", "_zone": 1100, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1017": {"py/object": "matrix_class.ZoneMapping", "_zone": 1017, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1016": {"py/object": "matrix_class.ZoneMapping", "_zone": 1016, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1015": {"py/object": "matrix_class.ZoneMapping", "_zone": 1015, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1102": {"py/object": "matrix_class.ZoneMapping", "_zone": 1102, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1099": {"py/object": "matrix_class.ZoneMapping", "_zone": 1099, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1106": {"py/object": "matrix_class.ZoneMapping", "_zone": 1106, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1105": {"py/object": "matrix_class.ZoneMapping", "_zone": 1105, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1104": {"py/object": "matrix_class.ZoneMapping", "_zone": 1104, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1108": {"py/object": "matrix_class.ZoneMapping", "_zone": 1108, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1107": {"py/object": "matrix_class.ZoneMapping", "_zone": 1107, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1006": {"py/object": "matrix_class.ZoneMapping", "_zone": 1006, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1005": {"py/object": "matrix_class.ZoneMapping", "_zone": 1005, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1004": {"py/object": "matrix_class.ZoneMapping", "_zone": 1004, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1003": {"py/object": "matrix_class.ZoneMapping", "_zone": 1003, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1008": {"py/object": "matrix_class.ZoneMapping", "_zone": 1008, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://8": {"py/object": "matrix_class.ZoneMapping", "_zone": 8, "_targets": {"json://5116": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://7": {"py/object": "matrix_class.ZoneMapping", "_zone": 7, "_targets": {"json://5116": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1109": {"py/object": "matrix_class.ZoneMapping", "_zone": 1109, "_targets": {"json://5116": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}}, "emp": {"json://1059": {"py/object": "matrix_class.ZoneMapping", "_zone": 1059, "_targets": {"json://501": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.024355351916646832}, "json://502": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.039467322023621104}, "json://504": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.03205224940100138}, "json://505": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.013278924367623374}, "json://506": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.03220381907453944}, "json://509": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004788654373343046}, "json://511": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.016033229528947788}, "json://512": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06896893801211484}, "json://514": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1453908410652339}, "json://515": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.062060676485388}, "json://516": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.021409216387250813}, "json://523": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.03493444147437353}, "json://525": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.03074022441443756}, "json://526": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.09938234031798596}, "json://527": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.018543602246921885}, "json://528": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.02702676741275512}, "json://551": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05199787112815031}, "json://562": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06720220400493683}, "json://566": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.036412245791369605}, "json://567": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.03720561830129538}, "json://570": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04643479045407374}, "json://601": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.010401468846549288}, "json://603": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004703396431977888}, "json://604": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0010751973716606048}, "json://605": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.00184488712009606}, "json://5067": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.00315454383051085}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.019692216179202488}, "json://517": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.010560143348534444}, "json://5141": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.003623462508019219}, "json://602": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.034844446980710306}, "json://524": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.00021090920072820889}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1057": {"py/object": "matrix_class.ZoneMapping", "_zone": 1057, "_targets": {"json://512": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.045796737766624844}, "json://513": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05394300408710884}, "json://519": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04873162975017702}, "json://520": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1106500863386213}, "json://521": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1536796402350398}, "json://544": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.03905425046896158}, "json://545": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.18874927015913637}, "json://548": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.30479086177124615}, "json://571": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05278457582270147}, "json://602": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.001819943600382623}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1055": {"py/object": "matrix_class.ZoneMapping", "_zone": 1055, "_targets": {"json://531": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1338699004964772}, "json://532": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16427444827772758}, "json://533": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06554914208903297}, "json://534": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06904487438252466}, "json://535": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0684164748869089}, "json://536": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.22100935108388509}, "json://537": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.17066664447154098}, "json://538": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05065066398105645}, "json://607": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04897770638345686}, "json://608": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.007540793947389228}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1054": {"py/object": "matrix_class.ZoneMapping", "_zone": 1054, "_targets": {"json://539": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3093279714123488}, "json://540": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11841111417870409}, "json://541": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3497403253616432}, "json://542": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1449255356277771}, "json://543": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.07759505341952692}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1058": {"py/object": "matrix_class.ZoneMapping", "_zone": 1058, "_targets": {"json://545": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.10606435883987024}, "json://546": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05978155292654972}, "json://5119": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.432059463449696}, "json://572": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08779163509917051}, "json://547": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.31430298968471354}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1062": {"py/object": "matrix_class.ZoneMapping", "_zone": 1062, "_targets": {"json://606": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.009508856635245923}, "json://5034": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.014915506342188982}, "json://5065": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04623984039758943}, "json://5067": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.02124884164300765}, "json://5026": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13080432768074793}, "json://609": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.012645028262926867}, "json://5141": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.01610780245660219}, "json://5143": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.024815892559560696}, "json://5142": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.10851468629430036}, "json://610": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.014553489040122925}, "json://5115": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4197944764816639}, "json://5107": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.051435969173439726}, "json://5025": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1169217511406496}, "json://5112": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.006028375073534763}, "json://5070": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.006465156818418809}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5": {"py/object": "matrix_class.ZoneMapping", "_zone": 5, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06354131699444679}, "json://5004": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.00213535894705482}, "json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.014514443166903408}, "json://5008": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0031362150650783216}, "json://5009": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.007492913483134808}, "json://5022": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.016583238945064915}, "json://5024": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0015273697432231722}, "json://5028": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.01496062603455772}, "json://5030": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0040609182791323}, "json://5018": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.12806322528690334}, "json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08105872994619133}, "json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.12681712470363632}, "json://5017": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4223010523225164}, "json://5134": {"py/object": "numpy.float64", "dtype": "float64", "value": 4.237324801115586e-06}, "json://5139": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11380322975735532}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1064": {"py/object": "matrix_class.ZoneMapping", "_zone": 1064, "_targets": {"json://5038": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2161278847967303}, "json://5006": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.34146778171157643}, "json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0009501595933889902}, "json://5138": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1649696689004171}, "json://5029": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16466647727137085}, "json://5005": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11181802772651639}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1065": {"py/object": "matrix_class.ZoneMapping", "_zone": 1065, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1049": {"py/object": "matrix_class.ZoneMapping", "_zone": 1049, "_targets": {"json://5011": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1056": {"py/object": "matrix_class.ZoneMapping", "_zone": 1056, "_targets": {"json://5012": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6880903463803029}, "json://5021": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.31190965361969714}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1052": {"py/object": "matrix_class.ZoneMapping", "_zone": 1052, "_targets": {"json://5013": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6419270544987488}, "json://5035": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3580729455012512}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1051": {"py/object": "matrix_class.ZoneMapping", "_zone": 1051, "_targets": {"json://5014": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.506241111336855}, "json://5104": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4937588886631451}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1063": {"py/object": "matrix_class.ZoneMapping", "_zone": 1063, "_targets": {"json://5110": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.059073400881738715}, "json://5135": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.067924820171707}, "json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3721618067909351}, "json://5023": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.34721014772990944}, "json://5111": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15362982442570963}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1060": {"py/object": "matrix_class.ZoneMapping", "_zone": 1060, "_targets": {"json://5140": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.03997488875348511}, "json://5027": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1119789262480228}, "json://5106": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2908257784178684}, "json://5105": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.25863968438609775}, "json://5108": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.18896520738319883}, "json://5109": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.10961551481132714}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1067": {"py/object": "matrix_class.ZoneMapping", "_zone": 1067, "_targets": {"json://5031": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1050": {"py/object": "matrix_class.ZoneMapping", "_zone": 1050, "_targets": {"json://5032": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.33100146387668994}, "json://5103": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6689985361233101}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1053": {"py/object": "matrix_class.ZoneMapping", "_zone": 1053, "_targets": {"json://5036": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.027451452771455564}, "json://5037": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.36826472583416286}, "json://5039": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.048271446051238495}, "json://5040": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15299588545199802}, "json://5041": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.14588259907565318}, "json://5042": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.14462414333081858}, "json://5043": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11250974748467349}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://4": {"py/object": "matrix_class.ZoneMapping", "_zone": 4, "_targets": {"json://5045": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0014327411283549733}, "json://5046": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0008605201808443045}, "json://5053": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0009754045515180122}, "json://5056": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.01629875245756889}, "json://5100": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.026007813011737938}, "json://5052": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1636599523296423}, "json://5049": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.17634766445651986}, "json://5050": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05475636113050223}, "json://5047": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.17545215813200557}, "json://5048": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.051925476336516105}, "json://5054": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15175527197847177}, "json://5051": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.062125300028895505}, "json://9006": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.5012801547058994e-06}, "json://5101": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.014326823403618603}, "json://5102": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.039804096640814225}, "json://5055": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06427016295283479}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1061": {"py/object": "matrix_class.ZoneMapping", "_zone": 1061, "_targets": {"json://5033": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3178927543314877}, "json://5134": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6821072456685123}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://3": {"py/object": "matrix_class.ZoneMapping", "_zone": 3, "_targets": {"json://9004": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.357430661152885}, "json://9003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.47334736160709645}, "json://9002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16922197724001856}, "json://9001": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9": {"py/object": "matrix_class.ZoneMapping", "_zone": 9, "_targets": {"json://5016": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8065827696258961}, "json://5117": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.19341723037410385}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://2": {"py/object": "matrix_class.ZoneMapping", "_zone": 2, "_targets": {"json://5047": {"py/object": "numpy.float64", "dtype": "float64", "value": 3.7833429955799937e-07}, "json://9006": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3954015963219853}, "json://9007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3956030845046615}, "json://9005": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.20899494083905368}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1076": {"py/object": "matrix_class.ZoneMapping", "_zone": 1076, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9994214022572636}, "json://5032": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0005785977427364012}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1075": {"py/object": "matrix_class.ZoneMapping", "_zone": 1075, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1069": {"py/object": "matrix_class.ZoneMapping", "_zone": 1069, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1071": {"py/object": "matrix_class.ZoneMapping", "_zone": 1071, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1078": {"py/object": "matrix_class.ZoneMapping", "_zone": 1078, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1": {"py/object": "matrix_class.ZoneMapping", "_zone": 1, "_targets": {"json://5015": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.14083127324361858}, "json://5001": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.09587493782943646}, "json://9008": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7163356666489209}, "json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.9575169996595895e-06}, "json://5118": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04602127404080415}, "json://5117": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0009346685155879125}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 2.2220463239379127e-07}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://6": {"py/object": "matrix_class.ZoneMapping", "_zone": 6, "_targets": {"json://5015": {"py/object": "numpy.float64", "dtype": "float64", "value": 5.994749159598229e-07}, "json://9008": {"py/object": "numpy.float64", "dtype": "float64", "value": 2.334519055984508e-06}, "json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9999970660060281}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1012": {"py/object": "matrix_class.ZoneMapping", "_zone": 1012, "_targets": {"json://5019": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1082": {"py/object": "matrix_class.ZoneMapping", "_zone": 1082, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1086": {"py/object": "matrix_class.ZoneMapping", "_zone": 1086, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1085": {"py/object": "matrix_class.ZoneMapping", "_zone": 1085, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1084": {"py/object": "matrix_class.ZoneMapping", "_zone": 1084, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1083": {"py/object": "matrix_class.ZoneMapping", "_zone": 1083, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1090": {"py/object": "matrix_class.ZoneMapping", "_zone": 1090, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1089": {"py/object": "matrix_class.ZoneMapping", "_zone": 1089, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1088": {"py/object": "matrix_class.ZoneMapping", "_zone": 1088, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1087": {"py/object": "matrix_class.ZoneMapping", "_zone": 1087, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1093": {"py/object": "matrix_class.ZoneMapping", "_zone": 1093, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1092": {"py/object": "matrix_class.ZoneMapping", "_zone": 1092, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1091": {"py/object": "matrix_class.ZoneMapping", "_zone": 1091, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1110": {"py/object": "matrix_class.ZoneMapping", "_zone": 1110, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1111": {"py/object": "matrix_class.ZoneMapping", "_zone": 1111, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1066": {"py/object": "matrix_class.ZoneMapping", "_zone": 1066, "_targets": {"json://5137": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1007": {"py/object": "matrix_class.ZoneMapping", "_zone": 1007, "_targets": {"json://5129": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1002": {"py/object": "matrix_class.ZoneMapping", "_zone": 1002, "_targets": {"json://5127": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1001": {"py/object": "matrix_class.ZoneMapping", "_zone": 1001, "_targets": {"json://5128": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1019": {"py/object": "matrix_class.ZoneMapping", "_zone": 1019, "_targets": {"json://5128": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1081": {"py/object": "matrix_class.ZoneMapping", "_zone": 1081, "_targets": {"json://5124": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1080": {"py/object": "matrix_class.ZoneMapping", "_zone": 1080, "_targets": {"json://5124": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1077": {"py/object": "matrix_class.ZoneMapping", "_zone": 1077, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1079": {"py/object": "matrix_class.ZoneMapping", "_zone": 1079, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1074": {"py/object": "matrix_class.ZoneMapping", "_zone": 1074, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1070": {"py/object": "matrix_class.ZoneMapping", "_zone": 1070, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1068": {"py/object": "matrix_class.ZoneMapping", "_zone": 1068, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1073": {"py/object": "matrix_class.ZoneMapping", "_zone": 1073, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1072": {"py/object": "matrix_class.ZoneMapping", "_zone": 1072, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1038": {"py/object": "matrix_class.ZoneMapping", "_zone": 1038, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1037": {"py/object": "matrix_class.ZoneMapping", "_zone": 1037, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1036": {"py/object": "matrix_class.ZoneMapping", "_zone": 1036, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1042": {"py/object": "matrix_class.ZoneMapping", "_zone": 1042, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1041": {"py/object": "matrix_class.ZoneMapping", "_zone": 1041, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1040": {"py/object": "matrix_class.ZoneMapping", "_zone": 1040, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1039": {"py/object": "matrix_class.ZoneMapping", "_zone": 1039, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1046": {"py/object": "matrix_class.ZoneMapping", "_zone": 1046, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1045": {"py/object": "matrix_class.ZoneMapping", "_zone": 1045, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1044": {"py/object": "matrix_class.ZoneMapping", "_zone": 1044, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1043": {"py/object": "matrix_class.ZoneMapping", "_zone": 1043, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1048": {"py/object": "matrix_class.ZoneMapping", "_zone": 1048, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1047": {"py/object": "matrix_class.ZoneMapping", "_zone": 1047, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1034": {"py/object": "matrix_class.ZoneMapping", "_zone": 1034, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1033": {"py/object": "matrix_class.ZoneMapping", "_zone": 1033, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9856738468174588}, "json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.014326153182541181}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1032": {"py/object": "matrix_class.ZoneMapping", "_zone": 1032, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1031": {"py/object": "matrix_class.ZoneMapping", "_zone": 1031, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1035": {"py/object": "matrix_class.ZoneMapping", "_zone": 1035, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1026": {"py/object": "matrix_class.ZoneMapping", "_zone": 1026, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1025": {"py/object": "matrix_class.ZoneMapping", "_zone": 1025, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1030": {"py/object": "matrix_class.ZoneMapping", "_zone": 1030, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1029": {"py/object": "matrix_class.ZoneMapping", "_zone": 1029, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1101": {"py/object": "matrix_class.ZoneMapping", "_zone": 1101, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1103": {"py/object": "matrix_class.ZoneMapping", "_zone": 1103, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1094": {"py/object": "matrix_class.ZoneMapping", "_zone": 1094, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1018": {"py/object": "matrix_class.ZoneMapping", "_zone": 1018, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1022": {"py/object": "matrix_class.ZoneMapping", "_zone": 1022, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1021": {"py/object": "matrix_class.ZoneMapping", "_zone": 1021, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1020": {"py/object": "matrix_class.ZoneMapping", "_zone": 1020, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1024": {"py/object": "matrix_class.ZoneMapping", "_zone": 1024, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1023": {"py/object": "matrix_class.ZoneMapping", "_zone": 1023, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1028": {"py/object": "matrix_class.ZoneMapping", "_zone": 1028, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1027": {"py/object": "matrix_class.ZoneMapping", "_zone": 1027, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1010": {"py/object": "matrix_class.ZoneMapping", "_zone": 1010, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1009": {"py/object": "matrix_class.ZoneMapping", "_zone": 1009, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1014": {"py/object": "matrix_class.ZoneMapping", "_zone": 1014, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1013": {"py/object": "matrix_class.ZoneMapping", "_zone": 1013, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1011": {"py/object": "matrix_class.ZoneMapping", "_zone": 1011, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1098": {"py/object": "matrix_class.ZoneMapping", "_zone": 1098, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1097": {"py/object": "matrix_class.ZoneMapping", "_zone": 1097, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1096": {"py/object": "matrix_class.ZoneMapping", "_zone": 1096, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1095": {"py/object": "matrix_class.ZoneMapping", "_zone": 1095, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1100": {"py/object": "matrix_class.ZoneMapping", "_zone": 1100, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1017": {"py/object": "matrix_class.ZoneMapping", "_zone": 1017, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1016": {"py/object": "matrix_class.ZoneMapping", "_zone": 1016, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1015": {"py/object": "matrix_class.ZoneMapping", "_zone": 1015, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1102": {"py/object": "matrix_class.ZoneMapping", "_zone": 1102, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1099": {"py/object": "matrix_class.ZoneMapping", "_zone": 1099, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1106": {"py/object": "matrix_class.ZoneMapping", "_zone": 1106, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1105": {"py/object": "matrix_class.ZoneMapping", "_zone": 1105, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1104": {"py/object": "matrix_class.ZoneMapping", "_zone": 1104, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1108": {"py/object": "matrix_class.ZoneMapping", "_zone": 1108, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1107": {"py/object": "matrix_class.ZoneMapping", "_zone": 1107, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1006": {"py/object": "matrix_class.ZoneMapping", "_zone": 1006, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1005": {"py/object": "matrix_class.ZoneMapping", "_zone": 1005, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1004": {"py/object": "matrix_class.ZoneMapping", "_zone": 1004, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1003": {"py/object": "matrix_class.ZoneMapping", "_zone": 1003, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1008": {"py/object": "matrix_class.ZoneMapping", "_zone": 1008, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://8": {"py/object": "matrix_class.ZoneMapping", "_zone": 8, "_targets": {"json://5116": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://7": {"py/object": "matrix_class.ZoneMapping", "_zone": 7, "_targets": {"json://5116": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1109": {"py/object": "matrix_class.ZoneMapping", "_zone": 1109, "_targets": {"json://5116": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}}, "wppop": {"json://1059": {"py/object": "matrix_class.ZoneMapping", "_zone": 1059, "_targets": {"json://501": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.028331294751437308}, "json://502": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05366148494120152}, "json://504": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.057950331592860956}, "json://505": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13811739709173682}, "json://506": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.035363006377801674}, "json://509": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.009829782400393887}, "json://511": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.028486651682829427}, "json://512": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0177613591335496}, "json://514": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.016289397551254515}, "json://515": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.017047011234603976}, "json://516": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.09590429798890283}, "json://523": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0059454850226428445}, "json://524": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0001870529238961954}, "json://525": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.013190087140843675}, "json://526": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.014874759908355305}, "json://527": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0011449920909430175}, "json://528": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.009926730522840826}, "json://551": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0068960106994401475}, "json://562": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.006327760931422763}, "json://566": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0024197363859486455}, "json://567": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.018326558754064814}, "json://570": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.008285013300581298}, "json://601": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04766588565325443}, "json://603": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.038896270412824334}, "json://604": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.054109087798513915}, "json://605": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1088382862574241}, "json://5067": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.002849678831174551}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.019732254930518132}, "json://517": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.01804654437756962}, "json://5141": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.00328094350147541}, "json://602": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.12031484580969361}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1057": {"py/object": "matrix_class.ZoneMapping", "_zone": 1057, "_targets": {"json://512": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06108959626078107}, "json://513": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.02054522730928011}, "json://519": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.018978485005776077}, "json://520": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.18322254005804434}, "json://521": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11134760825891356}, "json://544": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.09785519046716741}, "json://545": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.09033078807962261}, "json://548": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3956451832339133}, "json://571": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.020253464274097577}, "json://602": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0007319170524040224}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1055": {"py/object": "matrix_class.ZoneMapping", "_zone": 1055, "_targets": {"json://531": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.016754845776823693}, "json://532": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0556097224739241}, "json://533": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.100248617415761}, "json://534": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.004513711898915875}, "json://535": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.011013720993114906}, "json://536": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05433279813507617}, "json://537": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08779358620340598}, "json://538": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.30447403687239194}, "json://607": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.29318237283814547}, "json://608": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.07207658739244084}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1054": {"py/object": "matrix_class.ZoneMapping", "_zone": 1054, "_targets": {"json://539": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3619516943170697}, "json://540": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13979219427042164}, "json://541": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2667148835060525}, "json://542": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1483421873634184}, "json://543": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08319904054303774}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1058": {"py/object": "matrix_class.ZoneMapping", "_zone": 1058, "_targets": {"json://545": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.07397695506125472}, "json://546": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6552072394237598}, "json://5119": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15994286386331957}, "json://572": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.018606981398485066}, "json://547": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0922659602531809}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1062": {"py/object": "matrix_class.ZoneMapping", "_zone": 1062, "_targets": {"json://606": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.014863447344357083}, "json://5034": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.008933449811102159}, "json://5065": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.021126979526149052}, "json://5067": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.02312932997545752}, "json://5026": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.05039166482598794}, "json://609": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.019668970988912658}, "json://5141": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.01353044222836333}, "json://5143": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.003232831028579791}, "json://5142": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.003608101583686295}, "json://610": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0014798775530032923}, "json://5115": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6817091162911874}, "json://5107": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0686572824138788}, "json://5025": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.07637349623957802}, "json://5112": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.009398970348444533}, "json://5070": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0038960398413122113}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5": {"py/object": "matrix_class.ZoneMapping", "_zone": 5, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.045808090115030856}, "json://5004": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0009712886687937625}, "json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.014418785409455513}, "json://5008": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.002131128032926424}, "json://5009": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0053737223654431905}, "json://5022": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.010416782737563903}, "json://5024": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0006265486993969187}, "json://5028": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.02058409019838282}, "json://5030": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0017435479699517609}, "json://5018": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11385825380946868}, "json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13878830576830822}, "json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.14892231052692506}, "json://5017": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3867729796815384}, "json://5139": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1095841660168143}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1064": {"py/object": "matrix_class.ZoneMapping", "_zone": 1064, "_targets": {"json://5038": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.19962682846630447}, "json://5006": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.32882402746329076}, "json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0011591241106903372}, "json://5138": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15308369316766035}, "json://5029": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16127397926561823}, "json://5005": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15603234752643583}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1065": {"py/object": "matrix_class.ZoneMapping", "_zone": 1065, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1049": {"py/object": "matrix_class.ZoneMapping", "_zone": 1049, "_targets": {"json://5011": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1056": {"py/object": "matrix_class.ZoneMapping", "_zone": 1056, "_targets": {"json://5012": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7550993791986922}, "json://5021": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2449006208013078}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1052": {"py/object": "matrix_class.ZoneMapping", "_zone": 1052, "_targets": {"json://5013": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5145969130659613}, "json://5035": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.48540308693403866}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1051": {"py/object": "matrix_class.ZoneMapping", "_zone": 1051, "_targets": {"json://5014": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5952971313177148}, "json://5104": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4047028686822851}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1063": {"py/object": "matrix_class.ZoneMapping", "_zone": 1063, "_targets": {"json://5110": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15827926234701892}, "json://5135": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06703690043331137}, "json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2740494774729056}, "json://5023": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3413265694861021}, "json://5111": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1593077902606619}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1060": {"py/object": "matrix_class.ZoneMapping", "_zone": 1060, "_targets": {"json://5140": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08591738179549135}, "json://5027": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1078715229168098}, "json://5106": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.18048729897671945}, "json://5105": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.17515940143217562}, "json://5108": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4057861902096612}, "json://5109": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.044778204669142306}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1067": {"py/object": "matrix_class.ZoneMapping", "_zone": 1067, "_targets": {"json://5031": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1050": {"py/object": "matrix_class.ZoneMapping", "_zone": 1050, "_targets": {"json://5032": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.17046325220542338}, "json://5103": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8295367477945766}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1053": {"py/object": "matrix_class.ZoneMapping", "_zone": 1053, "_targets": {"json://5036": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1587029052977902}, "json://5037": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2664025602951759}, "json://5039": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.17309316567185043}, "json://5040": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16419842501199539}, "json://5041": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1769618436687109}, "json://5042": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.019101133656406}, "json://5043": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04153996639807125}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://4": {"py/object": "matrix_class.ZoneMapping", "_zone": 4, "_targets": {"json://5045": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.001212817643182821}, "json://5046": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.001022653205962065}, "json://5053": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0005552303237977537}, "json://5056": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.016100508001785013}, "json://9004": {"py/object": "numpy.float64", "dtype": "float64", "value": 5.418632471850964e-07}, "json://5100": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.025125498201486723}, "json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0367647860793286e-06}, "json://5052": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16058874779904214}, "json://5049": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15479865745138532}, "json://5050": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08464877841717589}, "json://5047": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.15385293916680157}, "json://5048": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.060185364770078784}, "json://5054": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.14656507990246995}, "json://5051": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.07940446100045592}, "json://9006": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0974844275444315e-06}, "json://9003": {"py/object": "numpy.float64", "dtype": "float64", "value": 6.244011233095576e-07}, "json://5101": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.015148718219754938}, "json://5102": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.036699225901103825}, "json://5055": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06408801948193307}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1061": {"py/object": "matrix_class.ZoneMapping", "_zone": 1061, "_targets": {"json://5033": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.19135805450479323}, "json://5134": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8086419454952067}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://3": {"py/object": "matrix_class.ZoneMapping", "_zone": 3, "_targets": {"json://9004": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.35725463340198227}, "json://5047": {"py/object": "numpy.float64", "dtype": "float64", "value": 2.0874342017870936e-07}, "json://9003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4766639312664756}, "json://9002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.1660812265881219}, "json://9001": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9": {"py/object": "matrix_class.ZoneMapping", "_zone": 9, "_targets": {"json://5016": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.758289034634482}, "json://5117": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.24167520870919323}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 3.5756656324695764e-05}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://2": {"py/object": "matrix_class.ZoneMapping", "_zone": 2, "_targets": {"json://5047": {"py/object": "numpy.float64", "dtype": "float64", "value": 7.945229351782659e-07}, "json://9006": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.394560042085616}, "json://9007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.39739181877536944}, "json://9003": {"py/object": "numpy.float64", "dtype": "float64", "value": 2.1073952826856498e-07}, "json://9005": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2080471338765511}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1076": {"py/object": "matrix_class.ZoneMapping", "_zone": 1076, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1075": {"py/object": "matrix_class.ZoneMapping", "_zone": 1075, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1069": {"py/object": "matrix_class.ZoneMapping", "_zone": 1069, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1071": {"py/object": "matrix_class.ZoneMapping", "_zone": 1071, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1078": {"py/object": "matrix_class.ZoneMapping", "_zone": 1078, "_targets": {"json://5120": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1": {"py/object": "matrix_class.ZoneMapping", "_zone": 1, "_targets": {"json://5015": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.12983434680462694}, "json://5001": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0938715889071846}, "json://9008": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7286071659329196}, "json://9007": {"py/object": "numpy.float64", "dtype": "float64", "value": 8.62151613051663e-07}, "json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 7.835025706851529e-07}, "json://5118": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.04695071843847559}, "json://5117": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0007345342626095284}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://6": {"py/object": "matrix_class.ZoneMapping", "_zone": 6, "_targets": {"json://5015": {"py/object": "numpy.float64", "dtype": "float64", "value": 7.538977673210477e-07}, "json://9008": {"py/object": "numpy.float64", "dtype": "float64", "value": 6.490321628085062e-07}, "json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9999985970700699}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1012": {"py/object": "matrix_class.ZoneMapping", "_zone": 1012, "_targets": {"json://5019": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1082": {"py/object": "matrix_class.ZoneMapping", "_zone": 1082, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1086": {"py/object": "matrix_class.ZoneMapping", "_zone": 1086, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1085": {"py/object": "matrix_class.ZoneMapping", "_zone": 1085, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1084": {"py/object": "matrix_class.ZoneMapping", "_zone": 1084, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1083": {"py/object": "matrix_class.ZoneMapping", "_zone": 1083, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1090": {"py/object": "matrix_class.ZoneMapping", "_zone": 1090, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1089": {"py/object": "matrix_class.ZoneMapping", "_zone": 1089, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1088": {"py/object": "matrix_class.ZoneMapping", "_zone": 1088, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1087": {"py/object": "matrix_class.ZoneMapping", "_zone": 1087, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1093": {"py/object": "matrix_class.ZoneMapping", "_zone": 1093, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1092": {"py/object": "matrix_class.ZoneMapping", "_zone": 1092, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1091": {"py/object": "matrix_class.ZoneMapping", "_zone": 1091, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1028": {"py/object": "matrix_class.ZoneMapping", "_zone": 1028, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0007315955004310106}, "json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9992684044995689}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1110": {"py/object": "matrix_class.ZoneMapping", "_zone": 1110, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1111": {"py/object": "matrix_class.ZoneMapping", "_zone": 1111, "_targets": {"json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1066": {"py/object": "matrix_class.ZoneMapping", "_zone": 1066, "_targets": {"json://5137": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1007": {"py/object": "matrix_class.ZoneMapping", "_zone": 1007, "_targets": {"json://5129": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1002": {"py/object": "matrix_class.ZoneMapping", "_zone": 1002, "_targets": {"json://5127": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1001": {"py/object": "matrix_class.ZoneMapping", "_zone": 1001, "_targets": {"json://5128": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1019": {"py/object": "matrix_class.ZoneMapping", "_zone": 1019, "_targets": {"json://5128": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1081": {"py/object": "matrix_class.ZoneMapping", "_zone": 1081, "_targets": {"json://5124": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1080": {"py/object": "matrix_class.ZoneMapping", "_zone": 1080, "_targets": {"json://5124": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1077": {"py/object": "matrix_class.ZoneMapping", "_zone": 1077, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1079": {"py/object": "matrix_class.ZoneMapping", "_zone": 1079, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1074": {"py/object": "matrix_class.ZoneMapping", "_zone": 1074, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1070": {"py/object": "matrix_class.ZoneMapping", "_zone": 1070, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1068": {"py/object": "matrix_class.ZoneMapping", "_zone": 1068, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1073": {"py/object": "matrix_class.ZoneMapping", "_zone": 1073, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1072": {"py/object": "matrix_class.ZoneMapping", "_zone": 1072, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1038": {"py/object": "matrix_class.ZoneMapping", "_zone": 1038, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1037": {"py/object": "matrix_class.ZoneMapping", "_zone": 1037, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1036": {"py/object": "matrix_class.ZoneMapping", "_zone": 1036, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1042": {"py/object": "matrix_class.ZoneMapping", "_zone": 1042, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1041": {"py/object": "matrix_class.ZoneMapping", "_zone": 1041, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1040": {"py/object": "matrix_class.ZoneMapping", "_zone": 1040, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1039": {"py/object": "matrix_class.ZoneMapping", "_zone": 1039, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1046": {"py/object": "matrix_class.ZoneMapping", "_zone": 1046, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1045": {"py/object": "matrix_class.ZoneMapping", "_zone": 1045, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1044": {"py/object": "matrix_class.ZoneMapping", "_zone": 1044, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1043": {"py/object": "matrix_class.ZoneMapping", "_zone": 1043, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1048": {"py/object": "matrix_class.ZoneMapping", "_zone": 1048, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1047": {"py/object": "matrix_class.ZoneMapping", "_zone": 1047, "_targets": {"json://5020": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1034": {"py/object": "matrix_class.ZoneMapping", "_zone": 1034, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1033": {"py/object": "matrix_class.ZoneMapping", "_zone": 1033, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9829170871000857}, "json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.017082912899914274}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1032": {"py/object": "matrix_class.ZoneMapping", "_zone": 1032, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1031": {"py/object": "matrix_class.ZoneMapping", "_zone": 1031, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1035": {"py/object": "matrix_class.ZoneMapping", "_zone": 1035, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1026": {"py/object": "matrix_class.ZoneMapping", "_zone": 1026, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1025": {"py/object": "matrix_class.ZoneMapping", "_zone": 1025, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1030": {"py/object": "matrix_class.ZoneMapping", "_zone": 1030, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1029": {"py/object": "matrix_class.ZoneMapping", "_zone": 1029, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1101": {"py/object": "matrix_class.ZoneMapping", "_zone": 1101, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1103": {"py/object": "matrix_class.ZoneMapping", "_zone": 1103, "_targets": {"json://5131": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1094": {"py/object": "matrix_class.ZoneMapping", "_zone": 1094, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1018": {"py/object": "matrix_class.ZoneMapping", "_zone": 1018, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1022": {"py/object": "matrix_class.ZoneMapping", "_zone": 1022, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1021": {"py/object": "matrix_class.ZoneMapping", "_zone": 1021, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1020": {"py/object": "matrix_class.ZoneMapping", "_zone": 1020, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1024": {"py/object": "matrix_class.ZoneMapping", "_zone": 1024, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1023": {"py/object": "matrix_class.ZoneMapping", "_zone": 1023, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1027": {"py/object": "matrix_class.ZoneMapping", "_zone": 1027, "_targets": {"json://5125": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1010": {"py/object": "matrix_class.ZoneMapping", "_zone": 1010, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1009": {"py/object": "matrix_class.ZoneMapping", "_zone": 1009, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1014": {"py/object": "matrix_class.ZoneMapping", "_zone": 1014, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1013": {"py/object": "matrix_class.ZoneMapping", "_zone": 1013, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1011": {"py/object": "matrix_class.ZoneMapping", "_zone": 1011, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1098": {"py/object": "matrix_class.ZoneMapping", "_zone": 1098, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1097": {"py/object": "matrix_class.ZoneMapping", "_zone": 1097, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1096": {"py/object": "matrix_class.ZoneMapping", "_zone": 1096, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1095": {"py/object": "matrix_class.ZoneMapping", "_zone": 1095, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1100": {"py/object": "matrix_class.ZoneMapping", "_zone": 1100, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1017": {"py/object": "matrix_class.ZoneMapping", "_zone": 1017, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1016": {"py/object": "matrix_class.ZoneMapping", "_zone": 1016, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1015": {"py/object": "matrix_class.ZoneMapping", "_zone": 1015, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://7": {"py/object": "matrix_class.ZoneMapping", "_zone": 7, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.00010458808916621163}, "json://5116": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9998954119108338}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1102": {"py/object": "matrix_class.ZoneMapping", "_zone": 1102, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1099": {"py/object": "matrix_class.ZoneMapping", "_zone": 1099, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1106": {"py/object": "matrix_class.ZoneMapping", "_zone": 1106, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1105": {"py/object": "matrix_class.ZoneMapping", "_zone": 1105, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1104": {"py/object": "matrix_class.ZoneMapping", "_zone": 1104, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1108": {"py/object": "matrix_class.ZoneMapping", "_zone": 1108, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1107": {"py/object": "matrix_class.ZoneMapping", "_zone": 1107, "_targets": {"json://5130": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1006": {"py/object": "matrix_class.ZoneMapping", "_zone": 1006, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1005": {"py/object": "matrix_class.ZoneMapping", "_zone": 1005, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1004": {"py/object": "matrix_class.ZoneMapping", "_zone": 1004, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1003": {"py/object": "matrix_class.ZoneMapping", "_zone": 1003, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1008": {"py/object": "matrix_class.ZoneMapping", "_zone": 1008, "_targets": {"json://5126": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://8": {"py/object": "matrix_class.ZoneMapping", "_zone": 8, "_targets": {"json://5116": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://1109": {"py/object": "matrix_class.ZoneMapping", "_zone": 1109, "_targets": {"json://5116": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}}}, "_zones": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJyFms1uZLcRRvcC9A56AC74/5NlgCQIEniTBEZWQlvqiQVL3YEkZ+y3z/k4I3bfvrrsjWRh1Eck61SxSPrp8Lj/zfx2/3A8vj6a379/373ud/ev+y/m5e24M2/7h/fjq3ngX46H+6fDYT9+OP76zg9/PfD1sHs2/zocdi/7xz/ctdsba5JPyRfjSim+mjd+9+f7/e7t3Zhg+OHt6XE/vv959/y2N+72xpngWvDZeBeyi98/9nX/9n6/Ozzef90979+M8RsAf3vjTbQxVmti9S4Gczi+AtBn3x6O78/8hzFu4+Ph9ibwOetjMSEUW7zRgO9fnh71wckfjrc3kQnX2Bh5Lj5X87B7uf/v/v3+p/3j9ozT7U0yKTiGykK1nKx5Ph5YWmPixkfy7U02OfpQq+EPhlbMT/uHh74uW3+m3N4Uk/k7ls+04Ir+jBb1+GUSjnp7U00qvmRr+EJgzMvT8+P+8PPu+Xn7YwS/mWxdTskEb2Mt5o+v+4dftIR31jrzJ+utTckGU7dE4NdwAYdqzs3iROH3Fxg/MHGGwQjnGI31KYOJ1rYFJgxMmmEww3mTmocExmfMOsfEgckzDJq4AKYFK9FdK3mBSQNTZhiswZdsg63R8KWSX+eYPDDVtG0MJjnsq87VJkwJaYEpA9Nmo0Eul5mUC41J2RzCcjT1A0M8J6PBNle0xFqGwOiI2zmmDYybYbDPYW1LDv18S7UtJsUYPjB+gnEWjCwOrSlliOvCYjcsJp4TDBZ7Wexy9WAKq7PADIuJ5wSjuiaLY00BjC1tkQxuWEw8Jxgs9rK4pNBUO9zSGzcsJp4TDBZ7LK6pqk7XVNIip9ywmHhOMFjsKZq1FLzxNaS6HM2w2M0sdljsZXEv+mAsUzzHDIuJ5wSDxcwmuxoIERtQ7ZE67h4vyxbxdOvS98/XXzsGi9nzsrOF8QePhEvMCDjxnGCwmNhkn8gnFVF/MZoRcCbr1jvFd4zHYo/Frn0rorXEtsCMgBPP7dF4LA6W0YTQMSyBX2BGwInnZDRYHLDYUSpU/djC7AIzAk48J6PRLu0VKa+1UdVZrs0IOPGcYLA4BCbVQgkajQtxgRllSz3M9qSwmA+yNinFvjO45RKPskU8wTwd+qe/f/uA4DC1N/N7pZjeDaRzyKloEU2m9DkEgwMGe+eIsjYXv1jeU8kKdhuCv6FIPPUImk5ZTOdUsIjk5nSwN3R7W1WEXIllARn2Br8JCbhLlcqBBqSPJLrlmgx3ieJ2fALuRrmbqZ1sK4xoiRnuhrg9FsyNmOuLK1UQZ5erMswlimdjuaAgbvSaEXubNkrf6oIyxCWMkxmp1wzqANkPhKlukY1uiBtm4gbEjYhLe+ZCb7BYgL/Q+L/f/Xv3+qK2+7zqEc+yWTwD/mJspgQ337sslnXFOqnTZiw0jmjM/pxsl4fuc8UaBhHbCQuboxpfX5o6nJbZYlasIRIhnrCQOiJ1Ikd60+WSW7OGTQR6mxVxmxxlXI09ixBSYtesIRXRnrAQnIVivXILYmV0WLGGWoR8wsJzZsUcU+/BEkV2zRp+EfIJC9uT1xzBwoq0HWvWqI6EfMJCefZRWDFRHyl1Ze3qqUgS8glLR66o9WpRa68at2YN7+PM+4j3Sd4XzpoaV3SfsIb3ceZ9xPvUvY+kP+eDYtc5dKqcaeZ9xHsWKhVGSByj4yxs/vZ0+M/b3d9/PxzuVCd+5PR398Px9cvx+ZfzRCf+aRtMEiS662qVSYFWiV1iDh6zR4ZtcCIj6CIZMTsqYLIsXwGfliLMwKQHBSTpSO7V1wV6lDl41AM0mYDJFcp4YgmCzrmRPuIKeBQHnJmASZzMWmEVuz0tZI3XlmJUCgSagMki2kiSunktBSX/WvBG2ZBN22BSKrNWkEMHx9yugEcNkU3bYN11JK2xV/329MXhCngUFNm0DSbZctYaZ23FlKh4JUFO1UU2bYPJPE6KrATHYO2qlT5pDh6Zl2eZl8i8rNsYkq4K3JBoDh6Zl2eZl8k8wqVDvuu9p/qkOXhkXp5lXibzqA4p06kkbeSpXbHi1NLlWeZlMq+wVpw7o84RPuVrIx6Zl2eZl8m8wlrRxfWbDMuZ9Ap4ZF6eZV4m80rPPM6n2nM4110Bj8zLs8zLZB5boWpF04btnLvm8ci8PMu8TOYVZV5zuvxrusq9Ah6Zl2eZl3UVqXM2CUqtiL4wwR90R/vZZoQ/eRtFrhXdGJVGRxmi1Y55iRpJgDETFNlVdGJxlQXShgnxEjW0x5FtVCGfim6OaqChFoqQXKKG6FgxQZFBVWcXr5vwEKpaqEvUUBsPJihypvazd9TZO6jrX6GGzER+giJL2Eo5vairAEUCrlBDX8V6G0VekBC6K9a5KvRbskvUEJZYT1BkAn15arayB4CKLa5QQ1HFehuF+1Wn8WorFZGth4bsAnXaDhTrbRS2V92Nslh6UrClrSZ42gDqzPai23hWQJ2hroQKObpCDdvrzPaC7bRvObTWL6lSTSuvTkW+zmyv2F51Si/p20bq2npUw/Y6s71ie+u264KCsh6+LfvXp4fFSZQoU88/PadXLG86pzvdJQYdQtwZ4rQ6aRuB3c33u66izYUJ+TPEaVXyNgKrm26WOPr02wKcPEOcVqNsI7AZfzl+9WDbpquuE2LkPLMkgp8jsLj1O6UQOyIuJjJynehtIrC35V5/kvbD2nI6Q4wcJ2qbCKxtuk9y2evkRlE8R4yEZGybCL0nVV1iln7A5Ws8IU6JyD9uIRqW0nwwkVi0TRbdBZ8QQy2WfBPR36Okp21JUc2RBu/EGG6x5psMPUZZ+aljZ78ByudTGXKx6JsMvURZXX8WPUnQVnH4NP/ox8NPNlDWnhX6/D6q6TUKo9lcSvy2LHzwEnWaWJ2g9CJlY7/b1TsbJ1B+9xJ1ml87R11cTDU9S6F4tnpuU7ekQ/8l6yOL9B43YeltyqrdIF7yL6jduGSlwXIzlh6orFzmtK/bJKt0uGTlwcLo9WvxB0uvVFZSO1oO+qvGQWTFKoMVtseFlGKpBtMhKEG8HgsuWXWw4va4XH91dd1yXc5rXHGtRBssXF+/pX+w+tOr60/VvYck7CvWSN/Myk3GJeudrE8c1dSPNg7nlyw3WGU2LmnvVJ9Lo8T75iLH4UuWH6w6G5e811MslYXjv69Jh/VLVhisNhuXvGdDIB0jtYyTQo7rOQ7vWbkJS967/M0vjcvqaeaSNbwHNGHJe6dbVHIo6xFTL/c/7v63P+x/77Vm+//ncP051qmzVnuuDcAme1byvk8nN4Xs85Ln+lusHmM9MvZNpLbz8p0Go25tqE4Psf8HjI7ICw==", "txt": false, "meta": {"dtypes": {"index": "int64", "x_coord": "int64", "y_coord": "int64", "area_ref": "object", "msoa": "object", "sector": "int64", "cordon_inner": "object", "cordon_outer": "object", "Internal": "bool", "Unnamed: 9": "int64"}, "index": "{\"py/object\": \"pandas.core.indexes.numeric.Int64Index\", \"comp\": true, \"values\": \"eJwd0rF1BCAMRMFWKIDgkJCAWvzcfxs+zwY/m2x/1hwxR86x56g5eo4zx53jzbE+n6WhqVtLW49epdZH2cUudrGLXexiF7vYYIMNNthggw022GCDTTbZZJNNNtlkk0022c1udrOb3exmN7vZzW622GKLLbbYYosttthim2222WabbbbZZptt9rCHPexhD3vYwx72sIe97GUve9nLXvayl73sZR/72Mc+9rGPfexjH/v+7fciujQ0dWtp69GrrF999/sH6aZ9WQ==\", \"txt\": false, \"meta\": {\"dtype\": \"int64\", \"name\": \"reference\"}}", "column_level_names": [null], "header": [0]}}, "_source_file": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["C:\\", "Users", "UKTMB001", "Documents", "Python Scripts", "MND", "ZoningTemplate_MSOA_script.xlsx"]}]}, "_source_sheet": "zones"}, "_time_period": "Daily", "_value_type": "Person Trips", "_levels": {"json://1": {"py/object": "matrix_class.Matrix", "_zones": {"py/object": "matrix_class.Zones", "_name": "MND_Raw_Zones", "_disaggregation_maps": {"area": {"py/id": 3}, "adults": {"py/id": 495}, "emp": {"py/id": 1002}, "wppop": {"py/id": 1504}}, "_zones": {"py/id": 2012}, "_source_file": {"py/id": 2014}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [120, 120], "dtype": "float64", "byteorder": "<"}, "_level": 1, "_purpose": "IB_HBW", "_time_period": "Daily", "_vehicle_type": "Road", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Road\nvalue_type: Person Trips\ntime_period: Daily\npurpose: IB_HBW\nlevel: 1\nzone_count: 120\nmatrix_sum: 115040.0\ninterzonal_sum: 112771.0\nintrazonal_sum: 2269.0\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: Daily\n    purpose: IB_HBW\n    level: 1\n    zone_count: 120\n    matrix_sum: 39954.0\n    interzonal_sum: 39062.0\n    intrazonal_sum: 892.0\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: Daily\n        purpose: IB_HBW\n        level: 1\n        zone_count: 120\n        matrix_sum: 3118.0\n        interzonal_sum: 3028.0\n        intrazonal_sum: 90.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Road\n            value_type: Person Trips\n            time_period: AM_peak\n            purpose: IB_HBW\n            level: 1\n            zone_count: 120\n            matrix_sum: 3118.0\n            interzonal_sum: 3028.0\n            intrazonal_sum: 90.0\n            Comments:\n            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Road.csv\n            MND Raw Data\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: IB_HBW\n        level: 1\n        zone_count: 120\n        matrix_sum: 36836.0\n        interzonal_sum: 36034.0\n        intrazonal_sum: 802.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Road\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: IB_HBW\n            level: 1\n            zone_count: 120\n            matrix_sum: 36836.0\n            interzonal_sum: 36034.0\n            intrazonal_sum: 802.0\n            Comments:\n            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Road.csv\n            MND Raw Data\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: PM_peak\n    purpose: IB_HBW\n    level: 1\n    zone_count: 120\n    matrix_sum: 75086.0\n    interzonal_sum: 73709.0\n    intrazonal_sum: 1377.0\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: PM_peak\n        purpose: IB_HBW\n        level: 1\n        zone_count: 120\n        matrix_sum: 75086.0\n        interzonal_sum: 73709.0\n        intrazonal_sum: 1377.0\n        Comments:\n        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Road.csv\n        MND Raw Data\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Road\nvalue_type: Person Trips\ntime_period: Off_peak\npurpose: IB_HBW\nlevel: 1\nzone_count: 120\nmatrix_sum: 19791.0\ninterzonal_sum: 19317.0\nintrazonal_sum: 474.0\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: Off_peak\n    purpose: IB_HBW\n    level: 1\n    zone_count: 120\n    matrix_sum: 19791.0\n    interzonal_sum: 19317.0\n    intrazonal_sum: 474.0\n    Comments:\n    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Road.csv\n    MND Raw Data\n    \n]\n\n]\n"}, "json://2": {"py/object": "matrix_class.Matrix", "_zones": {"py/object": "matrix_class.Zones", "_name": "MND_Raw_Zones", "_disaggregation_maps": {"area": {"py/id": 3}, "adults": {"py/id": 495}, "emp": {"py/id": 1002}, "wppop": {"py/id": 1504}}, "_zones": {"py/id": 2012}, "_source_file": {"py/id": 2014}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [120, 120], "dtype": "float64", "byteorder": "<"}, "_level": 2, "_purpose": "OB_HBW", "_time_period": "Daily", "_vehicle_type": "Road", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Road\nvalue_type: Person Trips\ntime_period: Daily\npurpose: OB_HBW\nlevel: 2\nzone_count: 120\nmatrix_sum: 105161.0\ninterzonal_sum: 103152.0\nintrazonal_sum: 2009.0\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: Daily\n    purpose: OB_HBW\n    level: 2\n    zone_count: 120\n    matrix_sum: 100164.0\n    interzonal_sum: 98279.0\n    intrazonal_sum: 1885.0\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: Daily\n        purpose: OB_HBW\n        level: 2\n        zone_count: 120\n        matrix_sum: 81099.0\n        interzonal_sum: 79640.0\n        intrazonal_sum: 1459.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Road\n            value_type: Person Trips\n            time_period: AM_peak\n            purpose: OB_HBW\n            level: 2\n            zone_count: 120\n            matrix_sum: 81099.0\n            interzonal_sum: 79640.0\n            intrazonal_sum: 1459.0\n            Comments:\n            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Road.csv\n            MND Raw Data\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: OB_HBW\n        level: 2\n        zone_count: 120\n        matrix_sum: 19065.0\n        interzonal_sum: 18639.0\n        intrazonal_sum: 426.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Road\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: OB_HBW\n            level: 2\n            zone_count: 120\n            matrix_sum: 19065.0\n            interzonal_sum: 18639.0\n            intrazonal_sum: 426.0\n            Comments:\n            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Road.csv\n            MND Raw Data\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: PM_peak\n    purpose: OB_HBW\n    level: 2\n    zone_count: 120\n    matrix_sum: 4997.0\n    interzonal_sum: 4873.0\n    intrazonal_sum: 124.0\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: PM_peak\n        purpose: OB_HBW\n        level: 2\n        zone_count: 120\n        matrix_sum: 4997.0\n        interzonal_sum: 4873.0\n        intrazonal_sum: 124.0\n        Comments:\n        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Road.csv\n        MND Raw Data\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Road\nvalue_type: Person Trips\ntime_period: Off_peak\npurpose: OB_HBW\nlevel: 2\nzone_count: 120\nmatrix_sum: 31621.0\ninterzonal_sum: 30975.0\nintrazonal_sum: 646.0\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: Off_peak\n    purpose: OB_HBW\n    level: 2\n    zone_count: 120\n    matrix_sum: 31621.0\n    interzonal_sum: 30975.0\n    intrazonal_sum: 646.0\n    Comments:\n    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Road.csv\n    MND Raw Data\n    \n]\n\n]\n"}, "json://3": {"py/object": "matrix_class.Matrix", "_zones": {"py/object": "matrix_class.Zones", "_name": "MND_Raw_Zones", "_disaggregation_maps": {"area": {"py/id": 3}, "adults": {"py/id": 495}, "emp": {"py/id": 1002}, "wppop": {"py/id": 1504}}, "_zones": {"py/id": 2012}, "_source_file": {"py/id": 2014}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [120, 120], "dtype": "float64", "byteorder": "<"}, "_level": 3, "_purpose": "IB_HBO", "_time_period": "Daily", "_vehicle_type": "Road", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Road\nvalue_type: Person Trips\ntime_period: Daily\npurpose: IB_HBO\nlevel: 3\nzone_count: 120\nmatrix_sum: 196248.0\ninterzonal_sum: 191280.0\nintrazonal_sum: 4968.0\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: Daily\n    purpose: IB_HBO\n    level: 3\n    zone_count: 120\n    matrix_sum: 132993.0\n    interzonal_sum: 129614.0\n    intrazonal_sum: 3379.0\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: Daily\n        purpose: IB_HBO\n        level: 3\n        zone_count: 120\n        matrix_sum: 21128.0\n        interzonal_sum: 20304.0\n        intrazonal_sum: 824.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Road\n            value_type: Person Trips\n            time_period: AM_peak\n            purpose: IB_HBO\n            level: 3\n            zone_count: 120\n            matrix_sum: 21128.0\n            interzonal_sum: 20304.0\n            intrazonal_sum: 824.0\n            Comments:\n            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n            MND Raw Data\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: IB_HBO\n        level: 3\n        zone_count: 120\n        matrix_sum: 111865.0\n        interzonal_sum: 109310.0\n        intrazonal_sum: 2555.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Road\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: IB_HBO\n            level: 3\n            zone_count: 120\n            matrix_sum: 111865.0\n            interzonal_sum: 109310.0\n            intrazonal_sum: 2555.0\n            Comments:\n            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n            MND Raw Data\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: PM_peak\n    purpose: IB_HBO\n    level: 3\n    zone_count: 120\n    matrix_sum: 63255.0\n    interzonal_sum: 61666.0\n    intrazonal_sum: 1589.0\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: PM_peak\n        purpose: IB_HBO\n        level: 3\n        zone_count: 120\n        matrix_sum: 63255.0\n        interzonal_sum: 61666.0\n        intrazonal_sum: 1589.0\n        Comments:\n        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n        MND Raw Data\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Road\nvalue_type: Person Trips\ntime_period: Off_peak\npurpose: IB_HBO\nlevel: 3\nzone_count: 120\nmatrix_sum: 57792.0\ninterzonal_sum: 56256.0\nintrazonal_sum: 1536.0\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: Off_peak\n    purpose: IB_HBO\n    level: 3\n    zone_count: 120\n    matrix_sum: 57792.0\n    interzonal_sum: 56256.0\n    intrazonal_sum: 1536.0\n    Comments:\n    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Road.csv\n    MND Raw Data\n    \n]\n\n]\n"}, "json://4": {"py/object": "matrix_class.Matrix", "_zones": {"py/object": "matrix_class.Zones", "_name": "MND_Raw_Zones", "_disaggregation_maps": {"area": {"py/id": 3}, "adults": {"py/id": 495}, "emp": {"py/id": 1002}, "wppop": {"py/id": 1504}}, "_zones": {"py/id": 2012}, "_source_file": {"py/id": 2014}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [120, 120], "dtype": "float64", "byteorder": "<"}, "_level": 4, "_purpose": "OB_HBO", "_time_period": "Daily", "_vehicle_type": "Road", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Road\nvalue_type: Person Trips\ntime_period: Daily\npurpose: OB_HBO\nlevel: 4\nzone_count: 120\nmatrix_sum: 208665.0\ninterzonal_sum: 203511.0\nintrazonal_sum: 5154.0\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: Daily\n    purpose: OB_HBO\n    level: 4\n    zone_count: 120\n    matrix_sum: 169186.0\n    interzonal_sum: 165156.0\n    intrazonal_sum: 4030.0\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: Daily\n        purpose: OB_HBO\n        level: 4\n        zone_count: 120\n        matrix_sum: 65819.0\n        interzonal_sum: 64266.0\n        intrazonal_sum: 1553.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Road\n            value_type: Person Trips\n            time_period: AM_peak\n            purpose: OB_HBO\n            level: 4\n            zone_count: 120\n            matrix_sum: 65819.0\n            interzonal_sum: 64266.0\n            intrazonal_sum: 1553.0\n            Comments:\n            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n            MND Raw Data\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: OB_HBO\n        level: 4\n        zone_count: 120\n        matrix_sum: 103367.0\n        interzonal_sum: 100890.0\n        intrazonal_sum: 2477.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Road\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: OB_HBO\n            level: 4\n            zone_count: 120\n            matrix_sum: 103367.0\n            interzonal_sum: 100890.0\n            intrazonal_sum: 2477.0\n            Comments:\n            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n            MND Raw Data\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: PM_peak\n    purpose: OB_HBO\n    level: 4\n    zone_count: 120\n    matrix_sum: 39479.0\n    interzonal_sum: 38355.0\n    intrazonal_sum: 1124.0\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: PM_peak\n        purpose: OB_HBO\n        level: 4\n        zone_count: 120\n        matrix_sum: 39479.0\n        interzonal_sum: 38355.0\n        intrazonal_sum: 1124.0\n        Comments:\n        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n        MND Raw Data\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Road\nvalue_type: Person Trips\ntime_period: Off_peak\npurpose: OB_HBO\nlevel: 4\nzone_count: 120\nmatrix_sum: 36955.0\ninterzonal_sum: 35808.0\nintrazonal_sum: 1147.0\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: Off_peak\n    purpose: OB_HBO\n    level: 4\n    zone_count: 120\n    matrix_sum: 36955.0\n    interzonal_sum: 35808.0\n    intrazonal_sum: 1147.0\n    Comments:\n    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Road.csv\n    MND Raw Data\n    \n]\n\n]\n"}, "json://5": {"py/object": "matrix_class.Matrix", "_zones": {"py/object": "matrix_class.Zones", "_name": "MND_Raw_Zones", "_disaggregation_maps": {"area": {"py/id": 3}, "adults": {"py/id": 495}, "emp": {"py/id": 1002}, "wppop": {"py/id": 1504}}, "_zones": {"py/id": 2012}, "_source_file": {"py/id": 2014}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [120, 120], "dtype": "float64", "byteorder": "<"}, "_level": 5, "_purpose": "NHBW", "_time_period": "Daily", "_vehicle_type": "Road", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Road\nvalue_type: Person Trips\ntime_period: Daily\npurpose: NHBW\nlevel: 5\nzone_count: 120\nmatrix_sum: 64295.0\ninterzonal_sum: 62721.0\nintrazonal_sum: 1574.0\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: Daily\n    purpose: NHBW\n    level: 5\n    zone_count: 120\n    matrix_sum: 48684.0\n    interzonal_sum: 47449.0\n    intrazonal_sum: 1235.0\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: Daily\n        purpose: NHBW\n        level: 5\n        zone_count: 120\n        matrix_sum: 15589.0\n        interzonal_sum: 15214.0\n        intrazonal_sum: 375.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Road\n            value_type: Person Trips\n            time_period: AM_peak\n            purpose: NHBW\n            level: 5\n            zone_count: 120\n            matrix_sum: 15589.0\n            interzonal_sum: 15214.0\n            intrazonal_sum: 375.0\n            Comments:\n            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Road.csv\n            MND Raw Data\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: NHBW\n        level: 5\n        zone_count: 120\n        matrix_sum: 33095.0\n        interzonal_sum: 32235.0\n        intrazonal_sum: 860.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Road\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBW\n            level: 5\n            zone_count: 120\n            matrix_sum: 33095.0\n            interzonal_sum: 32235.0\n            intrazonal_sum: 860.0\n            Comments:\n            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Road.csv\n            MND Raw Data\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: PM_peak\n    purpose: NHBW\n    level: 5\n    zone_count: 120\n    matrix_sum: 15611.0\n    interzonal_sum: 15272.0\n    intrazonal_sum: 339.0\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: PM_peak\n        purpose: NHBW\n        level: 5\n        zone_count: 120\n        matrix_sum: 15611.0\n        interzonal_sum: 15272.0\n        intrazonal_sum: 339.0\n        Comments:\n        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Road.csv\n        MND Raw Data\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Road\nvalue_type: Person Trips\ntime_period: Off_peak\npurpose: NHBW\nlevel: 5\nzone_count: 120\nmatrix_sum: 7491.0\ninterzonal_sum: 7312.0\nintrazonal_sum: 179.0\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: Off_peak\n    purpose: NHBW\n    level: 5\n    zone_count: 120\n    matrix_sum: 7491.0\n    interzonal_sum: 7312.0\n    intrazonal_sum: 179.0\n    Comments:\n    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Road.csv\n    MND Raw Data\n    \n]\n\n]\n"}, "json://6": {"py/object": "matrix_class.Matrix", "_zones": {"py/object": "matrix_class.Zones", "_name": "MND_Raw_Zones", "_disaggregation_maps": {"area": {"py/id": 3}, "adults": {"py/id": 495}, "emp": {"py/id": 1002}, "wppop": {"py/id": 1504}}, "_zones": {"py/id": 2012}, "_source_file": {"py/id": 2014}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [120, 120], "dtype": "float64", "byteorder": "<"}, "_level": 6, "_purpose": "NHBO", "_time_period": "Daily", "_vehicle_type": "Road", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Road\nvalue_type: Person Trips\ntime_period: Daily\npurpose: NHBO\nlevel: 6\nzone_count: 120\nmatrix_sum: 103274.0\ninterzonal_sum: 101101.0\nintrazonal_sum: 2173.0\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: Daily\n    purpose: NHBO\n    level: 6\n    zone_count: 120\n    matrix_sum: 84492.0\n    interzonal_sum: 82737.0\n    intrazonal_sum: 1755.0\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: Daily\n        purpose: NHBO\n        level: 6\n        zone_count: 120\n        matrix_sum: 17159.0\n        interzonal_sum: 16803.0\n        intrazonal_sum: 356.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Road\n            value_type: Person Trips\n            time_period: AM_peak\n            purpose: NHBO\n            level: 6\n            zone_count: 120\n            matrix_sum: 17159.0\n            interzonal_sum: 16803.0\n            intrazonal_sum: 356.0\n            Comments:\n            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Road.csv\n            MND Raw Data\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: NHBO\n        level: 6\n        zone_count: 120\n        matrix_sum: 67333.0\n        interzonal_sum: 65934.0\n        intrazonal_sum: 1399.0\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Road\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBO\n            level: 6\n            zone_count: 120\n            matrix_sum: 67333.0\n            interzonal_sum: 65934.0\n            intrazonal_sum: 1399.0\n            Comments:\n            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Road.csv\n            MND Raw Data\n            \n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: PM_peak\n    purpose: NHBO\n    level: 6\n    zone_count: 120\n    matrix_sum: 18782.0\n    interzonal_sum: 18364.0\n    intrazonal_sum: 418.0\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Road\n        value_type: Person Trips\n        time_period: PM_peak\n        purpose: NHBO\n        level: 6\n        zone_count: 120\n        matrix_sum: 18782.0\n        interzonal_sum: 18364.0\n        intrazonal_sum: 418.0\n        Comments:\n        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Road.csv\n        MND Raw Data\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Road\nvalue_type: Person Trips\ntime_period: Off_peak\npurpose: NHBO\nlevel: 6\nzone_count: 120\nmatrix_sum: 14181.0\ninterzonal_sum: 13858.0\nintrazonal_sum: 323.0\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Road\n    value_type: Person Trips\n    time_period: Off_peak\n    purpose: NHBO\n    level: 6\n    zone_count: 120\n    matrix_sum: 14181.0\n    interzonal_sum: 13858.0\n    intrazonal_sum: 323.0\n    Comments:\n    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Road.csv\n    MND Raw Data\n    \n]\n\n]\n"}}}