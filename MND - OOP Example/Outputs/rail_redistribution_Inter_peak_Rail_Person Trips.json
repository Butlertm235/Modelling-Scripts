{"py/object": "matrix_class_v2.MatrixStack", "_name": "rail_redistribution", "_vehicle_type": "Rail", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"json://501": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 501, "_targets": {"json://501": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://502": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 502, "_targets": {"json://502": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://504": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 504, "_targets": {"json://504": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://505": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 505, "_targets": {"json://505": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://506": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 506, "_targets": {"json://506": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://509": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 509, "_targets": {"json://509": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://511": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 511, "_targets": {"json://511": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://512": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 512, "_targets": {"json://512": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://513": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 513, "_targets": {"json://513": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://514": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 514, "_targets": {"json://514": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://515": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 515, "_targets": {"json://515": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://516": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 516, "_targets": {"json://516": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://517": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 517, "_targets": {"json://517": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://519": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 519, "_targets": {"json://519": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://520": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 520, "_targets": {"json://520": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://521": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 521, "_targets": {"json://521": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://523": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 523, "_targets": {"json://523": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://524": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 524, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://525": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 525, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://526": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 526, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://527": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 527, "_targets": {"json://527": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://528": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 528, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://531": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 531, "_targets": {"json://531": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://532": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 532, "_targets": {"json://532": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://533": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 533, "_targets": {"json://533": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://534": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 534, "_targets": {"json://534": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://535": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 535, "_targets": {"json://535": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://536": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 536, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://537": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 537, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://538": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 538, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://539": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 539, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://540": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 540, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://541": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 541, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://542": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 542, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://543": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 543, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://544": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 544, "_targets": {"json://544": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://545": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 545, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://546": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 546, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://547": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 547, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://548": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 548, "_targets": {"json://548": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://551": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 551, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://562": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 562, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://566": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 566, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://567": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 567, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://570": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 570, "_targets": {"json://570": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://571": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 571, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://572": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 572, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://573": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 573, "_targets": {"json://573": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://601": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 601, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://602": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 602, "_targets": {"json://602": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://603": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 603, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://604": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 604, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://605": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 605, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://606": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 606, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://607": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 607, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://608": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 608, "_targets": {"json://608": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://609": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 609, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://610": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 610, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5001": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5001, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5002": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5002, "_targets": {"json://5002": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5003": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5003, "_targets": {"json://5003": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5004": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5004, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5005": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5005, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7105265186923027}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2894734813076974}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5006": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5006, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6336305213085214}, "json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3663694786914786}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5007": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5007, "_targets": {"json://5007": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5008": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5008, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5009": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5009, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.12574033987473257}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8742596601252675}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5010": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5010, "_targets": {"json://5010": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5011": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5011, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5012": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5012, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5013": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5013, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5014": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5014, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5015": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5015, "_targets": {"json://5015": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5016": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5016, "_targets": {"json://5019": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.23915238262142025}, "json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7608476173785798}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5017": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5017, "_targets": {"json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5018": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5018, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5019": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5019, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7224258444377175}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5020": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5020, "_targets": {"json://5020": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5021": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5021, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5022": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5022, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5023": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5023, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16270700178727196}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8372929982127281}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5024": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5024, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5025": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5025, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5924220607039576}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.40757793929604236}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5026": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5026, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5027": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5027, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5028": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5028, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8675205867701657}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13247941322983423}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5029": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5029, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5147106005829688}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.48528939941703114}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5030": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5030, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.38833292989011636}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6116670701098836}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5031": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5031, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9863284020535221}, "json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.013671597946477902}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5032": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5032, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5033": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5033, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5034": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5034, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5035": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5035, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5036": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5036, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5037": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5037, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5038": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5038, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5039": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5039, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5040": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5040, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5041": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5041, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5042": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5042, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5043": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5043, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5045": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5045, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5046": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5046, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5047": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5047, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5048": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5048, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5049": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5049, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5050": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5050, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5051": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5051, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5052": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5052, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5053": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5053, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5054": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5054, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5055": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5055, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5056": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5056, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5065": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5065, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5067": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5067, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06201399661995637}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9379860033800437}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5068": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5068, "_targets": {"json://5068": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5069": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5069, "_targets": {"json://5069": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5070": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5070, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5100": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5100, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5101": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5101, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5102": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5102, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5103": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5103, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5104": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5104, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5105": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5105, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5106": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5106, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5107": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5107, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.29235456942551624}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7076454305744838}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5108": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5108, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5109": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5109, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5110": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5110, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7387638702178395}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.26123612978216043}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5111": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5111, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2515912022033352}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7484087977966648}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5112": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5112, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5115": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5115, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.22736056963670478}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7726394303632952}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5116": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5116, "_targets": {"json://5116": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5117": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5117, "_targets": {"json://5139": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.28054378071849867}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7194562192815013}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5118": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5118, "_targets": {"json://5118": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5119": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5119, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5120": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5120, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5121": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5121, "_targets": {"json://5121": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5122": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5122, "_targets": {"json://5122": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5124": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5124, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4437572194572055}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5125": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5125, "_targets": {"json://5124": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13644820554642537}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8635517944535747}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5126": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5126, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5127": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5127, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5128": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5128, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.028333630736165107}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9716663692638349}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5129": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5129, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11436485547237808}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8856351445276219}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5130": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5130, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.29984251486319297}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7001574851368071}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5131": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5131, "_targets": {"json://5131": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5132": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5132, "_targets": {"json://5132": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5133": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5133, "_targets": {"json://5133": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5134": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5134, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.32382409830106296}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.676175901698937}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5135": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5135, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08645655874211541}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9135434412578846}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5136": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5136, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.239089678008408}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5137": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5137, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5138": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5138, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5139": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5139, "_targets": {"json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5140": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5140, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5141": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5141, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2216693993246311}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.778330600675369}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5142": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5142, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.026609684324048147}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9733903156759518}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5143": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5143, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0716213365076186}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9283786634923814}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9001": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9001, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9002": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9002, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9003": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9003, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9004": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9004, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9005": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9005, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9006": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9006, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9007": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9007, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9008": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9008, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9009": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9009, "_targets": {"json://9009": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}}}, "_zones": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "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", "txt": false, "meta": {"dtypes": {"index": "int64", "mnd_zone": "int64", "x_coord": "int64", "y_coord": "int64", "area_ref": "object", "sector": "int64", "msoa": "object", "district": "object", "Urban city and town": "int64", "Rural village": "int64", "Rural hamlets and isolated dwellings": "int64", "Rural town and fringe": "int64", "Rural village in a sparse setting": "int64", "Rural hamlets and isolated dwellings in a sparse setting": "int64", "Rural town and fringe in a sparse setting": "int64", "urbanrural": "object", "cordon_inner": "object", "cordon_outer": "object", "Internal": "bool"}, "index": "{\"py/object\": \"pandas.core.indexes.numeric.Int64Index\", \"comp\": true, \"values\": \"eJwtk8FtRSEQA1tJATnYsMCnlij9txE8m4ulp7VXMPj9LPn7a2lEKrIiO3KfOFNn6hmJxbE4Fp9IfEORmEd8I74R34hvxDc+T2YsM/tmfDO+Gd+Mb8Y38WVpZWklUUlUEpVEJVFJVBKVxIpvx7cz2BmcLDgZnAzOW7Bz3537bvFZkRXZkRP5RN4JtrNAjagZJfQUVM2qYSX49IPm8OosAAVBgVAwFBAFRYFRJgtNgVOjn4YsWAVXAVaQFWgFWw2ykyygBWmBWrAWsAVtgVvwFsAFcYFc1Z0gC3BBXCAXzFWkFikeQIvUIrW6UGQX2d3tYsNmw2YDD2W1UjloG9qGtqFtaBvahrb/e0q269p97Zp2T7uoEDaEDWGPrjd+2Bq2hq1ha9gatoatYevZfwUnhK1ha9gatoatYWvYGraGrcP20q5Luy7turTr0q5Luy7turTr6f39AzjkrWM=\", \"txt\": false, \"meta\": {\"dtype\": \"int64\", \"name\": \"reference\"}}", "column_level_names": [null], "header": [0]}}, "_source_file": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["C:\\", "Users", "UKTMB001", "Documents", "Python Scripts", "MND", "ZoningTemplate_Model_v2.xlsx"]}]}, "_source_sheet": "zones"}, "_time_period": "Inter_peak", "_value_type": "Person Trips", "_levels": {"json://1": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 1, "_purpose": "IB_HBW", "_time_period": "Inter_peak", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: IB_HBW\nlevel: 1\nzone_count: 168\nmatrix_sum: 28.83333333333333\ninterzonal_sum: 28.629303271931317\nintrazonal_sum: 0.2040300614020109\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: IB_HBW\n    level: 1\n    zone_count: 168\n    matrix_sum: 28.83333333333333\n    interzonal_sum: 28.629303271931317\n    intrazonal_sum: 0.2040300614020109\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: IB_HBW\n        level: 1\n        zone_count: 168\n        matrix_sum: 28.83333333333333\n        interzonal_sum: 28.629303271931317\n        intrazonal_sum: 0.2040300614020109\n        Comments:\n        Created by disaggregate_matrix operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: IB_HBW\n            level: 1\n            zone_count: 120\n            matrix_sum: 28.83333333333333\n            interzonal_sum: 28.66666666666666\n            intrazonal_sum: 0.16666666666666666\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: IB_HBW\n                level: 1\n                zone_count: 120\n                matrix_sum: 28.83333333333333\n                interzonal_sum: 28.66666666666666\n                intrazonal_sum: 0.16666666666666666\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: IB_HBW\n                    level: 1\n                    zone_count: 120\n                    matrix_sum: 173.0\n                    interzonal_sum: 172.0\n                    intrazonal_sum: 1.0\n                    Comments:\n                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Rail.csv\n                    MND Raw Data\n                    \n                ]\n                <built-in function mul>\n                [\n                    0.16666666666666666\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://2": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "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", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 2, "_purpose": "OB_HBW", "_time_period": "Inter_peak", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: OB_HBW\nlevel: 2\nzone_count: 168\nmatrix_sum: 16.833333333333332\ninterzonal_sum: 16.333333333333332\nintrazonal_sum: 0.5\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: OB_HBW\n    level: 2\n    zone_count: 168\n    matrix_sum: 16.833333333333332\n    interzonal_sum: 16.333333333333332\n    intrazonal_sum: 0.5\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: OB_HBW\n        level: 2\n        zone_count: 168\n        matrix_sum: 16.833333333333332\n        interzonal_sum: 16.333333333333332\n        intrazonal_sum: 0.5\n        Comments:\n        Created by disaggregate_matrix operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: OB_HBW\n            level: 2\n            zone_count: 120\n            matrix_sum: 16.833333333333332\n            interzonal_sum: 16.833333333333332\n            intrazonal_sum: 0.0\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: OB_HBW\n                level: 2\n                zone_count: 120\n                matrix_sum: 16.833333333333332\n                interzonal_sum: 16.833333333333332\n                intrazonal_sum: 0.0\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBW\n                    level: 2\n                    zone_count: 120\n                    matrix_sum: 101.0\n                    interzonal_sum: 101.0\n                    intrazonal_sum: 0.0\n                    Comments:\n                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Rail.csv\n                    MND Raw Data\n                    \n                ]\n                <built-in function mul>\n                [\n                    0.16666666666666666\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://3": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 3, "_purpose": "IB_HBEmp", "_time_period": "Inter_peak", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: IB_HBEmp\nlevel: 3\nzone_count: 168\nmatrix_sum: 21.545514711089606\ninterzonal_sum: 21.23240812799026\nintrazonal_sum: 0.31310658309934547\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: IB_HBEmp\n    level: 3\n    zone_count: 168\n    matrix_sum: 21.545514711089606\n    interzonal_sum: 21.23240812799026\n    intrazonal_sum: 0.31310658309934547\n    Comments:\n    Created by furness_matrix operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: IB_HBO\n        level: 3\n        zone_count: 168\n        matrix_sum: 157.16666666666666\n        interzonal_sum: 155.75512940409635\n        intrazonal_sum: 1.411537262570307\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: IB_HBO\n            level: 3\n            zone_count: 168\n            matrix_sum: 157.16666666666666\n            interzonal_sum: 155.75512940409635\n            intrazonal_sum: 1.411537262570307\n            Comments:\n            Created by disaggregate_matrix operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: IB_HBO\n                level: 3\n                zone_count: 120\n                matrix_sum: 157.16666666666663\n                interzonal_sum: 156.3333333333333\n                intrazonal_sum: 0.8333333333333333\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: IB_HBO\n                    level: 3\n                    zone_count: 120\n                    matrix_sum: 157.16666666666663\n                    interzonal_sum: 156.3333333333333\n                    intrazonal_sum: 0.8333333333333333\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBO\n                        level: 3\n                        zone_count: 120\n                        matrix_sum: 943.0\n                        interzonal_sum: 938.0\n                        intrazonal_sum: 5.0\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                        MND Raw Data\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        0.16666666666666666\n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    Convergence Information:\n    1: count: 168, col_pass: 16, row_pass: 26\n    2: count: 168, col_pass: 7, row_pass: 27\n    3: count: 168, col_pass: 24, row_pass: 30\n    4: count: 168, col_pass: 28, row_pass: 38\n    5: count: 168, col_pass: 50, row_pass: 121\n    6: count: 168, col_pass: 168, row_pass: 168\n    \n]\n\n]\n"}, "json://4": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 4, "_purpose": "OB_HBEmp", "_time_period": "Inter_peak", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: OB_HBEmp\nlevel: 4\nzone_count: 168\nmatrix_sum: 22.20813438935504\ninterzonal_sum: 21.915930182929074\nintrazonal_sum: 0.29220420642596434\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: OB_HBEmp\n    level: 4\n    zone_count: 168\n    matrix_sum: 22.20813438935504\n    interzonal_sum: 21.915930182929074\n    intrazonal_sum: 0.29220420642596434\n    Comments:\n    Created by furness_matrix operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: OB_HBO\n        level: 4\n        zone_count: 168\n        matrix_sum: 155.33333333333334\n        interzonal_sum: 154.010461458477\n        intrazonal_sum: 1.3228718748563326\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: OB_HBO\n            level: 4\n            zone_count: 168\n            matrix_sum: 155.33333333333334\n            interzonal_sum: 154.010461458477\n            intrazonal_sum: 1.3228718748563326\n            Comments:\n            Created by disaggregate_matrix operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: OB_HBO\n                level: 4\n                zone_count: 120\n                matrix_sum: 155.33333333333331\n                interzonal_sum: 154.66666666666666\n                intrazonal_sum: 0.6666666666666666\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBO\n                    level: 4\n                    zone_count: 120\n                    matrix_sum: 155.33333333333331\n                    interzonal_sum: 154.66666666666666\n                    intrazonal_sum: 0.6666666666666666\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBO\n                        level: 4\n                        zone_count: 120\n                        matrix_sum: 932.0\n                        interzonal_sum: 928.0\n                        intrazonal_sum: 4.0\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                        MND Raw Data\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        0.16666666666666666\n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    Convergence Information:\n    1: count: 168, col_pass: 31, row_pass: 5\n    2: count: 168, col_pass: 26, row_pass: 24\n    3: count: 168, col_pass: 46, row_pass: 25\n    4: count: 168, col_pass: 47, row_pass: 29\n    5: count: 168, col_pass: 64, row_pass: 45\n    6: count: 168, col_pass: 106, row_pass: 167\n    7: count: 168, col_pass: 168, row_pass: 168\n    \n]\n\n]\n"}, "json://5": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 5, "_purpose": "IB_HBO", "_time_period": "Inter_peak", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: IB_HBO\nlevel: 5\nzone_count: 168\nmatrix_sum: 135.61337046677883\ninterzonal_sum: 134.47348881028233\nintrazonal_sum: 1.1398816564965029\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: IB_HBO\n    level: 5\n    zone_count: 168\n    matrix_sum: 135.61337046677883\n    interzonal_sum: 134.47348881028233\n    intrazonal_sum: 1.1398816564965029\n    Comments:\n    Created by furness_matrix operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: IB_HBO\n        level: 3\n        zone_count: 168\n        matrix_sum: 157.16666666666666\n        interzonal_sum: 155.75512940409635\n        intrazonal_sum: 1.411537262570307\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: IB_HBO\n            level: 3\n            zone_count: 168\n            matrix_sum: 157.16666666666666\n            interzonal_sum: 155.75512940409635\n            intrazonal_sum: 1.411537262570307\n            Comments:\n            Created by disaggregate_matrix operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: IB_HBO\n                level: 3\n                zone_count: 120\n                matrix_sum: 157.16666666666663\n                interzonal_sum: 156.3333333333333\n                intrazonal_sum: 0.8333333333333333\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: IB_HBO\n                    level: 3\n                    zone_count: 120\n                    matrix_sum: 157.16666666666663\n                    interzonal_sum: 156.3333333333333\n                    intrazonal_sum: 0.8333333333333333\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: IB_HBO\n                        level: 3\n                        zone_count: 120\n                        matrix_sum: 943.0\n                        interzonal_sum: 938.0\n                        intrazonal_sum: 5.0\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                        MND Raw Data\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        0.16666666666666666\n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    Convergence Information:\n    1: count: 168, col_pass: 28, row_pass: 34\n    2: count: 168, col_pass: 46, row_pass: 109\n    3: count: 168, col_pass: 168, row_pass: 168\n    \n]\n\n]\n"}, "json://6": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 6, "_purpose": "OB_HBO", "_time_period": "Inter_peak", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: OB_HBO\nlevel: 6\nzone_count: 168\nmatrix_sum: 133.11784874251214\ninterzonal_sum: 132.05695191396674\nintrazonal_sum: 1.060896828545399\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: OB_HBO\n    level: 6\n    zone_count: 168\n    matrix_sum: 133.11784874251214\n    interzonal_sum: 132.05695191396674\n    intrazonal_sum: 1.060896828545399\n    Comments:\n    Created by furness_matrix operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: OB_HBO\n        level: 4\n        zone_count: 168\n        matrix_sum: 155.33333333333334\n        interzonal_sum: 154.010461458477\n        intrazonal_sum: 1.3228718748563326\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: OB_HBO\n            level: 4\n            zone_count: 168\n            matrix_sum: 155.33333333333334\n            interzonal_sum: 154.010461458477\n            intrazonal_sum: 1.3228718748563326\n            Comments:\n            Created by disaggregate_matrix operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: OB_HBO\n                level: 4\n                zone_count: 120\n                matrix_sum: 155.33333333333331\n                interzonal_sum: 154.66666666666666\n                intrazonal_sum: 0.6666666666666666\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: OB_HBO\n                    level: 4\n                    zone_count: 120\n                    matrix_sum: 155.33333333333331\n                    interzonal_sum: 154.66666666666666\n                    intrazonal_sum: 0.6666666666666666\n                    Comments:\n                    Created by operation <built-in function mul> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: Inter_peak\n                        purpose: OB_HBO\n                        level: 4\n                        zone_count: 120\n                        matrix_sum: 932.0\n                        interzonal_sum: 928.0\n                        intrazonal_sum: 4.0\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                        MND Raw Data\n                        \n                    ]\n                    <built-in function mul>\n                    [\n                        0.16666666666666666\n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    Convergence Information:\n    1: count: 168, col_pass: 37, row_pass: 30\n    2: count: 168, col_pass: 64, row_pass: 60\n    3: count: 168, col_pass: 110, row_pass: 168\n    \n]\n\n]\n"}, "json://7": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 7, "_purpose": "NHBW", "_time_period": "Inter_peak", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: NHBW\nlevel: 7\nzone_count: 168\nmatrix_sum: 54.99999999999999\ninterzonal_sum: 54.59816107740889\nintrazonal_sum: 0.4018389225911059\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: NHBW\n    level: 7\n    zone_count: 168\n    matrix_sum: 54.99999999999999\n    interzonal_sum: 54.59816107740889\n    intrazonal_sum: 0.4018389225911059\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: NHBW\n        level: 5\n        zone_count: 168\n        matrix_sum: 54.99999999999999\n        interzonal_sum: 54.59816107740889\n        intrazonal_sum: 0.4018389225911059\n        Comments:\n        Created by disaggregate_matrix operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBW\n            level: 5\n            zone_count: 120\n            matrix_sum: 54.99999999999999\n            interzonal_sum: 54.49999999999999\n            intrazonal_sum: 0.5\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBW\n                level: 5\n                zone_count: 120\n                matrix_sum: 54.99999999999999\n                interzonal_sum: 54.49999999999999\n                intrazonal_sum: 0.5\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBW\n                    level: 5\n                    zone_count: 120\n                    matrix_sum: 330.0\n                    interzonal_sum: 327.0\n                    intrazonal_sum: 3.0\n                    Comments:\n                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Rail.csv\n                    MND Raw Data\n                    \n                ]\n                <built-in function mul>\n                [\n                    0.16666666666666666\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://8": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 8, "_purpose": "NHBO", "_time_period": "Inter_peak", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: Inter_peak\npurpose: NHBO\nlevel: 8\nzone_count: 168\nmatrix_sum: 184.83333333333331\ninterzonal_sum: 183.52128000091085\nintrazonal_sum: 1.312053332422464\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: Inter_peak\n    purpose: NHBO\n    level: 8\n    zone_count: 168\n    matrix_sum: 184.83333333333331\n    interzonal_sum: 183.52128000091085\n    intrazonal_sum: 1.312053332422464\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: Inter_peak\n        purpose: NHBO\n        level: 6\n        zone_count: 168\n        matrix_sum: 184.83333333333331\n        interzonal_sum: 183.52128000091085\n        intrazonal_sum: 1.312053332422464\n        Comments:\n        Created by disaggregate_matrix operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: Inter_peak\n            purpose: NHBO\n            level: 6\n            zone_count: 120\n            matrix_sum: 184.8333333333333\n            interzonal_sum: 183.66666666666663\n            intrazonal_sum: 1.1666666666666667\n            Comments:\n            Created by copy operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: Inter_peak\n                purpose: NHBO\n                level: 6\n                zone_count: 120\n                matrix_sum: 184.8333333333333\n                interzonal_sum: 183.66666666666663\n                intrazonal_sum: 1.1666666666666667\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: Inter_peak\n                    purpose: NHBO\n                    level: 6\n                    zone_count: 120\n                    matrix_sum: 1109.0\n                    interzonal_sum: 1102.0\n                    intrazonal_sum: 7.0\n                    Comments:\n                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Rail.csv\n                    MND Raw Data\n                    \n                ]\n                <built-in function mul>\n                [\n                    0.16666666666666666\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}}}