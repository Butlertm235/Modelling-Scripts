{"py/object": "matrix_class_v2.MatrixStack", "_name": "combined_mndsynth", "_vehicle_type": "Rail", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"json://501": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 501, "_targets": {"json://501": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://502": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 502, "_targets": {"json://502": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://504": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 504, "_targets": {"json://504": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://505": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 505, "_targets": {"json://505": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://506": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 506, "_targets": {"json://506": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://509": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 509, "_targets": {"json://509": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://511": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 511, "_targets": {"json://511": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://512": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 512, "_targets": {"json://512": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://513": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 513, "_targets": {"json://513": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://514": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 514, "_targets": {"json://514": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://515": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 515, "_targets": {"json://515": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://516": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 516, "_targets": {"json://516": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://517": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 517, "_targets": {"json://517": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://519": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 519, "_targets": {"json://519": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://520": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 520, "_targets": {"json://520": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://521": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 521, "_targets": {"json://521": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://523": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 523, "_targets": {"json://523": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://524": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 524, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://525": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 525, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://526": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 526, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://527": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 527, "_targets": {"json://527": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://528": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 528, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://531": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 531, "_targets": {"json://531": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://532": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 532, "_targets": {"json://532": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://533": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 533, "_targets": {"json://533": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://534": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 534, "_targets": {"json://534": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://535": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 535, "_targets": {"json://535": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://536": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 536, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://537": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 537, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://538": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 538, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://539": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 539, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://540": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 540, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://541": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 541, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://542": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 542, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://543": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 543, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://544": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 544, "_targets": {"json://544": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://545": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 545, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://546": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 546, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://547": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 547, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://548": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 548, "_targets": {"json://548": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://551": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 551, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://562": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 562, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://566": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 566, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://567": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 567, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://570": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 570, "_targets": {"json://570": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://571": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 571, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://572": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 572, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://573": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 573, "_targets": {"json://573": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://601": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 601, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://602": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 602, "_targets": {"json://602": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://603": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 603, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://604": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 604, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://605": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 605, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://606": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 606, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://607": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 607, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://608": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 608, "_targets": {"json://608": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://609": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 609, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://610": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 610, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5001": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5001, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5002": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5002, "_targets": {"json://5002": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5003": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5003, "_targets": {"json://5003": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5004": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5004, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5005": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5005, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7105265186923027}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2894734813076974}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5006": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5006, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6336305213085214}, "json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.3663694786914786}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5007": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5007, "_targets": {"json://5007": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5008": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5008, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5009": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5009, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.12574033987473257}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8742596601252675}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5010": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5010, "_targets": {"json://5010": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5011": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5011, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5012": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5012, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5013": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5013, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5014": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5014, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5015": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5015, "_targets": {"json://5015": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5016": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5016, "_targets": {"json://5019": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.23915238262142025}, "json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7608476173785798}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5017": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5017, "_targets": {"json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5018": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5018, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5019": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5019, "_targets": {"json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7224258444377175}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5020": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5020, "_targets": {"json://5020": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5021": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5021, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5022": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5022, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5023": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5023, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.16270700178727196}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8372929982127281}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5024": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5024, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5025": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5025, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5924220607039576}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.40757793929604236}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5026": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5026, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5027": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5027, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5028": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5028, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8675205867701657}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13247941322983423}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5029": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5029, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.5147106005829688}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.48528939941703114}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5030": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5030, "_targets": {"json://5007": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.38833292989011636}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.6116670701098836}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5031": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5031, "_targets": {"json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9863284020535221}, "json://5133": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.013671597946477902}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5032": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5032, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5033": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5033, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5034": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5034, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5035": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5035, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5036": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5036, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5037": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5037, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5038": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5038, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5039": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5039, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5040": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5040, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5041": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5041, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5042": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5042, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5043": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5043, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5045": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5045, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5046": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5046, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5047": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5047, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5048": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5048, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5049": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5049, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5050": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5050, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5051": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5051, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5052": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5052, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5053": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5053, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5054": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5054, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5055": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5055, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5056": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5056, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5065": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5065, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5067": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5067, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.06201399661995637}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9379860033800437}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5068": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5068, "_targets": {"json://5068": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5069": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5069, "_targets": {"json://5069": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5070": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5070, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5100": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5100, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5101": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5101, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5102": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5102, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5103": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5103, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5104": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5104, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5105": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5105, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5106": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5106, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5107": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5107, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.29235456942551624}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7076454305744838}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5108": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5108, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5109": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5109, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5110": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5110, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7387638702178395}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.26123612978216043}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5111": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5111, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2515912022033352}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7484087977966648}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5112": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5112, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5115": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5115, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.22736056963670478}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7726394303632952}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5116": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5116, "_targets": {"json://5116": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5117": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5117, "_targets": {"json://5139": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.28054378071849867}, "json://5002": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7194562192815013}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5118": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5118, "_targets": {"json://5118": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5119": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5119, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5120": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5120, "_targets": {"json://5121": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5121": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5121, "_targets": {"json://5121": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5122": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5122, "_targets": {"json://5122": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5124": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5124, "_targets": {"json://5122": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.4437572194572055}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5125": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5125, "_targets": {"json://5124": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.13644820554642537}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8635517944535747}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5126": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5126, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5127": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5127, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5128": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5128, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.028333630736165107}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9716663692638349}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5129": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5129, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.11436485547237808}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.8856351445276219}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5130": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5130, "_targets": {"json://5132": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.29984251486319297}, "json://5003": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.7001574851368071}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5131": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5131, "_targets": {"json://5131": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5132": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5132, "_targets": {"json://5132": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5133": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5133, "_targets": {"json://5133": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5134": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5134, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.32382409830106296}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.676175901698937}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5135": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5135, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.08645655874211541}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9135434412578846}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5136": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5136, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.239089678008408}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5137": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5137, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5138": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5138, "_targets": {"json://5010": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5139": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5139, "_targets": {"json://5068": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5140": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5140, "_targets": {"json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5141": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5141, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.2216693993246311}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.778330600675369}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5142": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5142, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.026609684324048147}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9733903156759518}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://5143": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 5143, "_targets": {"json://5136": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.0716213365076186}, "json://573": {"py/object": "numpy.float64", "dtype": "float64", "value": 0.9283786634923814}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9001": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9001, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9002": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9002, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9003": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9003, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9004": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9004, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9005": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9005, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9006": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9006, "_targets": {"json://5069": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9007": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9007, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9008": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9008, "_targets": {"json://9009": {"py/object": "numpy.float64", "dtype": "float64", "value": 1.0}}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}, "json://9009": {"py/object": "matrix_class_v2.ZoneMapping", "_zone": 9009, "_targets": {"json://9009": 1}, "_target_min_zone_idx": -1, "_target_max_zone_idx": -1}}}, "_zones": {"py/object": "pandas.core.frame.DataFrame", "comp": true, "values": "eJy9W0uP28gRvi+w/0G3vfDQVf2o7muAZBEkyCEPBDkZyoy8FnYsBZIcr/PrU1USu0kNRTbJ1WIAe8bW9Mfqrv7qqwf3h9fdL83nw+uH/x0Pu+aXDy/H4+m1+Xb7e3vabT+cdh+b8+7lcjw1n8/HbfO6P19O+5dL84/Tv7eHzcv+8m2zPbxuLsevh+avX07bt81/929v2592t58+bT+/7S5n/dD+fHzbXnavm9evu7e3/eGn8+1D8tv6iY8n/tddf6HNnv9vc/7P9nTebc67y4U/UrX4yC/eAQ5+8otYeJKPNy+8H8fDh/3hsDu1Pxy/XPiHPx74z8P27fvvTAPGp8YHIG8aCyk42/zeoDGe/63xzZ940R/Omz9/O1yh/7k7XzZ/OZ4+Ht9+3hiA5nen4/b1Tf6rgcZ0vvRJmv3hvH/dtX/9/fRl9/13kEFDYlA0DuNiUKwExRYUjU0CimCebqkt25ucgqbloKb3dT3jIVCXLUX0ur1u+fbWWuozqIuklkZ4OmjIoNao90ZY7r2120vF0mD1yuByS12lpVFASUH5MBkUXWpB5WEmQE1asr2pXJlAAuqMf7qlUCgpeS+oZJe7r61FLZxEpP5rAJ9PhB1SutJv8s93YLDZmSKhEkSipzsTuIxKxipDOL8YtZb1wWfUZPS2elxua7U3ZWKCmNSHgc2fda78/df9y6cZ+0sdTGDMCDTz3mTMak+KGdMbxXR+OUNUW5p5yZBXMhTwp+uHwkuQNKxCeL5UwsxLxke2FQFDeD6q8pKXWwNGxVLE7L9ym6ZuDS1CtRnVsngQ1ECLUWvjDbqMSlF5KfnlqNXe5DOqwSCoAZejVu9wKDtsNMoFk56PShnVg6hgcGE5avW5xhaVtaGi2hifj5oKqp4rJLsctTrNUG5yghr1vrJoKrE1TKOGLmqsRYWM6p14E3iAxai1sdVii+o8KCMm5xajplpU26J6G9Sb+ICfb6vLqCGJN6GhmbbO1hE2Kybr9N4wH8Z5imk+pvJSlDPFoIo0FUUazHSUMwWTajGpxfRoNZ5TwnmYS25qLJayJ4vihzQXdffy8w3V1MKmfKj+mimnjiPNlcG1BOGKZFL3ZXk4V5IuCK2upHIxOkH1cab4XnCwLqdyzL1qa/wN6ksuF5gQnQpwVuLPRy0VppsUNvAbnGshpuCUmGKaSUxLbC3URBpuDPPiYpqotrVTZLLXcgQtP9c+S4wUDjvpnCQbfGt/5SLe8ctlADbnc9ZeK2pgZxtbOLFyi30mJ0wsR/nqkF9e8andYp/JCUmrW9GtqB5Wo5Y6E2evjEoUZto6uzbghZoYhS+O0UjnQywx3U1jugWYOZfjFEOIidNl+3T17XMuB2Sviqnsbh3qfEtD3l0A9SNDMG93l/gRtajWRglyAWOai5pvqunt8Agq01LjERMzIetuJmD+uG2mDGi5pv37D9u3s6wmkcKr/mqQHCBdVysC0jTMSFIWQKxZMAiRMF1qu4UvF3/vcokm8X8WEX7nYDVPfWt0yB3lJMtHvknG2/R+C4YymUdPLHQgx+VNBI4uvKNU6GA6rYDQPcahZOaBFbbFRcvPgImYjubidnZPHA5qdk8+yJuWnICGZNO73WN06ETn8e3zehjsHpGXA0M04I+yGlQ5pBrOywF/g9E779a4d9ArqmSEoleYe0PRodNkBD0PtUN1jwebLOKBL44ng8Tx1EGIhXunY4wZjGx8Cxt+pNHTVfnAm8juLCEVbSxNFFFuU8CxDxz4yw5udb8NqPpBuDBRYnvlWpaKwDQXmgEGBho94huwSgje0EDSebSWPJXSoZ0Gto9ci/1lFBiFh1k6cOoodWgf1zgq2UacxSKrTqQQjX+3mmQ3chrBVy2ot9wIDTN785Jh1ePpJWcz0cjjMWWtWk3CNbCzRL4VIMxnSvOAo2LqEKp8rqdC+BZPUcntgOTuc5DkVCUakVzMBDkSMelR8+Npt71s/rU9febflHiEy+IRxfbORUm9tGCDK+6celbFndPYbUOQQ0lp0GfUjWMu2I4yeZQ7zAchBIWS8DjZvpYs/TRZ+r6e8WzIuGa4dfOv4TwiSQRhvhyi/KvDVThXxFaVea2esQAple4FqsxXOkHMCj+AzHywNEszFf5dOIcHuP1RCBH5knlzfCFtrqIpGTlOw+J736uBvUZ9D/aq8fA9vYR0O7Ya1ws3LeRikAzfUESzWAt1j2w8TEdSM9BJzRNsgPfihbmGOg2Pcd8TIhBZERIwEWBCifWtGdNFGUh3sok1UK4vjjqfRn32gojRWgm/oTCqn/aCe+YD9QKnxzeGm5QyQLQzeKkuku1UF6ejL9xFX//Q++5wISd8RFLBZZq1Ky5bXeqV8CZyiF1eRvU8dVo8lSKnQy2uky2MWqt1TSvUEiW95XhexnH8NDEbP2Xt4B1ProWFKPEA2auXww51IoZhfc6LkPNO1uxyLZfnRRwDqsJQCq25eG27WFbti82tniqjFtUlrW1a3ufFqLWttBRbVH+tHmPotEifhpqyrRi1gUdhua31I3Qmwyo5srF2ubHVs1acwklAcyZE7VWqbsfmPso7YfmK2ALM0bJe0tk4lMRuYD2JXlClk1gbCzqKZm1sMN4Pr1ep6TnbleUsL8fPYFnGD5k7Yzkvy4XABsvTCWOvWi7IckzSvDmWj4RWLke6XJIGtDUuQlq3nCh0jmQy+Y0s5ADXLZfEU9CDVvJBqq5rlgN1Uz4DCQImiuRbtZzeC4OeFZ4lJ359W64TGmcsp9eCxRsIZ3up79w/HXMs/6s1kg5VLZmlPJ+t18Iu+pXqol+ZGx66dS0sRHkTAFzqiKllVezhguAd7k3LRyYqljRDWn7WgWgFD6IMGMnYjzXrlstVdudQ/Dl4mr0ro541fBhR3YoZQ73U+fduNcsKvZIWdQDWWVrp9KhXMrEOlXjGe+LWLQe39IES7y7Td7KdAsaS9EF9z6v2GtNccJ2tlPJdDDJfw9AU5pbvepL6ht2MV+9Axyslb+azJa3ZCKnPzJs7wLzcRH2iBc4Je4J2Om0NMD085bvhep/rIiQ7zT5kZ5NaBxcnvasFDu1OG2k5MK1R8CsMxg70ODDdgCM4HfMJaeUR11oc20IaI1/rI2l2Ia1HM3VZMei85RWYzLWiEddU8B4Xg+6AdeTyGjHdtQ7gVjhX9ei7bcsABCQVHJMI13Rg5YTHq+stMDZSWLZRmrBRhpzaGLeIf2WeUgeCA7D+82ZdeR1kUJIVTwq8PxzQmeHWLefL0I+ocRnpKoc7ezawDz12ukocqfEc50R6chpQXvMitlA6yZdPj8NQ4o+AUKyA8kUcP1JhC7JNYN+VtxOtlnFbND+AFuZuaIsk9MCcHzBd34NMNub9pPQeqb+Bc5CED6Jpgo3XIIc25ZJGxAGkh92wCSQdbmQZEVCyIR2pLFPtqDlpWXiw21cHIxeesyWfQtDKc2JyzZ0j0+8c9dsqIm6DdEMg9lzvEZI4jZEeVdDXcoG8zxVpfv7YQ7ovokOTbppgyiCRIeyjwZDR8g9AKXyLLOvv2z0OW8N3vabrDzqmyPGPYxKnFxKUqFA0C5G+Qe8mM0BmQGpgmCykFsCOQCwlMUEJQWykPOzftNs2Y4jrEZTwA3NdYDkt76oYF4p2FPLoetldK38OjBADCKGiEDMml0rVF+xdt7JnTLJCO3zGoQ5JiEGyseiBZPzBdl754efvI70TCbX2pLZmz7mV0LmhztDd3Jq9a6jTbxkF9m1/MRhN1vlJyrsKC2TRYwV699IjtLisAKUz13trbJkcGy/ZtcDaigwaOKUUw97R2enpvjD0CMwKc1VKX59ni4KUkzkNxzB7pqmX0NV1KkC7INJQ43QDvZq9RnroMKHmDoFk2AtkJ1d0Nx93Pu7tyBOFVspB2hv8dRtMD3y1zBQafZvTS2hdV+3o8/bwe8Gx6HedlWAqXSOkuznLGGyS3kyInjHJW5G/8ntLvUWKfI1jv5fJiJDEVVYtJ15vvb434QKnkyuXk2KIdMxZuDiO7SauW066WkiJnIzkAGkXYXmBKkiz10aN1pzRxJVF3qC1H0hORglRBnLXLScDiV7CBjuqd3ZliZKjatCasSSQlIILek0WLvd/pZs0hQ==", "txt": false, "meta": {"dtypes": {"index": "int64", "mnd_zone": "int64", "x_coord": "int64", "y_coord": "int64", "area_ref": "object", "sector": "int64", "msoa": "object", "district": "object", "Urban city and town": "int64", "Rural village": "int64", "Rural hamlets and isolated dwellings": "int64", "Rural town and fringe": "int64", "Rural village in a sparse setting": "int64", "Rural hamlets and isolated dwellings in a sparse setting": "int64", "Rural town and fringe in a sparse setting": "int64", "urbanrural": "object", "cordon_inner": "object", "cordon_outer": "object", "Internal": "bool"}, "index": "{\"py/object\": \"pandas.core.indexes.numeric.Int64Index\", \"comp\": true, \"values\": \"eJwtk8FtRSEQA1tJATnYsMCnlij9txE8m4ulp7VXMPj9LPn7a2lEKrIiO3KfOFNn6hmJxbE4Fp9IfEORmEd8I74R34hvxDc+T2YsM/tmfDO+Gd+Mb8Y38WVpZWklUUlUEpVEJVFJVBKVxIpvx7cz2BmcLDgZnAzOW7Bz3537bvFZkRXZkRP5RN4JtrNAjagZJfQUVM2qYSX49IPm8OosAAVBgVAwFBAFRYFRJgtNgVOjn4YsWAVXAVaQFWgFWw2ykyygBWmBWrAWsAVtgVvwFsAFcYFc1Z0gC3BBXCAXzFWkFikeQIvUIrW6UGQX2d3tYsNmw2YDD2W1UjloG9qGtqFtaBvahrb/e0q269p97Zp2T7uoEDaEDWGPrjd+2Bq2hq1ha9gatoatYevZfwUnhK1ha9gatoatYWvYGraGrcP20q5Luy7turTr0q5Luy7turTr6f39AzjkrWM=\", \"txt\": false, \"meta\": {\"dtype\": \"int64\", \"name\": \"reference\"}}", "column_level_names": [null], "header": [0]}}, "_source_file": {"py/reduce": [{"py/type": "pathlib.WindowsPath"}, {"py/tuple": ["C:\\", "Users", "UKTMB001", "Documents", "Python Scripts", "MND", "ZoningTemplate_Model_v2.xlsx"]}]}, "_source_sheet": "zones"}, "_time_period": "PM_peak_hr", "_value_type": "Person Trips", "_levels": {"json://1": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 1, "_purpose": "Commuting", "_time_period": "PM_peak_hr", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: PM_peak_hr\npurpose: Commuting\nlevel: 1\nzone_count: 168\nmatrix_sum: 16.111763623440854\ninterzonal_sum: 16.111763623440854\nintrazonal_sum: 0.0\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: PM_peak_hr\n    purpose: Commuting\n    level: 1\n    zone_count: 168\n    matrix_sum: 0.7557736234408561\n    interzonal_sum: 0.7557736234408561\n    intrazonal_sum: 0.0\n    Comments:\n    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: PM_peak_hr\n        purpose: Commuting\n        level: 1\n        zone_count: 168\n        matrix_sum: 1.2327187903927121\n        interzonal_sum: 1.2251712479989318\n        intrazonal_sum: 0.007547542393780413\n        Comments:\n        Created by operation <built-in function mul> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: PM_peak_hr\n            purpose: Commuting\n            level: 1\n            zone_count: 168\n            matrix_sum: 384.99999999999994\n            interzonal_sum: 368.5667186230244\n            intrazonal_sum: 16.43328137697551\n            Comments:\n            Created by operation <built-in function add> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: Commuting\n                level: 1\n                zone_count: 168\n                matrix_sum: 379.0\n                interzonal_sum: 362.5667186230245\n                intrazonal_sum: 16.43328137697551\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: IB_HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 379.0\n                    interzonal_sum: 362.5667186230245\n                    intrazonal_sum: 16.43328137697551\n                    Comments:\n                    Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: IB_HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 379.0\n                        interzonal_sum: 375.56872217607577\n                        intrazonal_sum: 3.4312778239242165\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: IB_HBW\n                            level: 1\n                            zone_count: 168\n                            matrix_sum: 379.0\n                            interzonal_sum: 375.56872217607577\n                            intrazonal_sum: 3.4312778239242165\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: IB_HBW\n                                level: 1\n                                zone_count: 168\n                                matrix_sum: 379.0\n                                interzonal_sum: 375.56872217607577\n                                intrazonal_sum: 3.4312778239242165\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: IB_HBW\n                                    level: 1\n                                    zone_count: 120\n                                    matrix_sum: 379.0\n                                    interzonal_sum: 377.0\n                                    intrazonal_sum: 2.0\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: IB_HBW\n                                        level: 1\n                                        zone_count: 120\n                                        matrix_sum: 379.0\n                                        interzonal_sum: 377.0\n                                        intrazonal_sum: 2.0\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: IB_HBW\n                                            level: 1\n                                            zone_count: 120\n                                            matrix_sum: 379.0\n                                            interzonal_sum: 377.0\n                                            intrazonal_sum: 2.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Rail.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            1.0\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function add>\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: OB_HBW\n                level: 2\n                zone_count: 168\n                matrix_sum: 6.0\n                interzonal_sum: 6.0\n                intrazonal_sum: 0.0\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: OB_HBW\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 6.0\n                    interzonal_sum: 6.0\n                    intrazonal_sum: 0.0\n                    Comments:\n                    Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: OB_HBW\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 6.0\n                        interzonal_sum: 6.0\n                        intrazonal_sum: 0.0\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: OB_HBW\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 6.0\n                            interzonal_sum: 6.0\n                            intrazonal_sum: 0.0\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: OB_HBW\n                                level: 2\n                                zone_count: 168\n                                matrix_sum: 6.0\n                                interzonal_sum: 6.0\n                                intrazonal_sum: 0.0\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: OB_HBW\n                                    level: 2\n                                    zone_count: 120\n                                    matrix_sum: 6.0\n                                    interzonal_sum: 6.0\n                                    intrazonal_sum: 0.0\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: OB_HBW\n                                        level: 2\n                                        zone_count: 120\n                                        matrix_sum: 6.0\n                                        interzonal_sum: 6.0\n                                        intrazonal_sum: 0.0\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: OB_HBW\n                                            level: 2\n                                            zone_count: 120\n                                            matrix_sum: 6.0\n                                            interzonal_sum: 6.0\n                                            intrazonal_sum: 0.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Rail.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            1.0\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        <built-in function mul>\n        [\n            [[ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            ...\n            [False False False ... False False False]\n            [False False False ... False False False]\n            [False False False ... False False False]]\n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: SynthRail\n    value_type: Person Trips\n    time_period: PM_peak_hr\n    purpose: Commuting\n    level: 1\n    zone_count: 168\n    matrix_sum: 15.35599\n    interzonal_sum: 15.35599\n    intrazonal_sum: 0.0\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: PM_peak_hr\n        purpose: Commuting\n        level: 1\n        zone_count: 168\n        matrix_sum: 15.35599\n        interzonal_sum: 15.35599\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: PM_peak_hr\n            purpose: Commuting\n            level: 1\n            zone_count: 168\n            matrix_sum: 162.50396\n            interzonal_sum: 162.50396\n            intrazonal_sum: 0.0\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: Commuting\n                level: 1\n                zone_count: 168\n                matrix_sum: 1245.05217\n                interzonal_sum: 1080.7638499999998\n                intrazonal_sum: 164.28832000000003\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 1245.05217\n                    interzonal_sum: 1080.7638499999998\n                    intrazonal_sum: 164.28832000000003\n                    Comments:\n                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_PM_peak_hr.csv\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: HBW\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 1245.05217\n                    interzonal_sum: 1080.7638499999998\n                    intrazonal_sum: 164.28832000000003\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: PM_peak_hr\npurpose: Commuting\nlevel: 1\nzone_count: 168\nmatrix_sum: 747.3900608369681\ninterzonal_sum: 583.1017408369681\nintrazonal_sum: 164.28832000000003\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: PM_peak_hr\n    purpose: Commuting\n    level: 1\n    zone_count: 168\n    matrix_sum: 747.3900608369681\n    interzonal_sum: 583.1017408369681\n    intrazonal_sum: 164.28832000000003\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: PM_peak_hr\n        purpose: Commuting\n        level: 1\n        zone_count: 168\n        matrix_sum: 343.4901108369682\n        interzonal_sum: 343.4901108369682\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: PM_peak_hr\n            purpose: Commuting\n            level: 1\n            zone_count: 168\n            matrix_sum: 383.7672812096073\n            interzonal_sum: 367.3415473750256\n            intrazonal_sum: 16.42573383458173\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: Commuting\n                level: 1\n                zone_count: 168\n                matrix_sum: 384.99999999999994\n                interzonal_sum: 368.5667186230244\n                intrazonal_sum: 16.43328137697551\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: Commuting\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 379.0\n                    interzonal_sum: 362.5667186230245\n                    intrazonal_sum: 16.43328137697551\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: IB_HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 379.0\n                        interzonal_sum: 362.5667186230245\n                        intrazonal_sum: 16.43328137697551\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: IB_HBW\n                            level: 1\n                            zone_count: 168\n                            matrix_sum: 379.0\n                            interzonal_sum: 375.56872217607577\n                            intrazonal_sum: 3.4312778239242165\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: IB_HBW\n                                level: 1\n                                zone_count: 168\n                                matrix_sum: 379.0\n                                interzonal_sum: 375.56872217607577\n                                intrazonal_sum: 3.4312778239242165\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: IB_HBW\n                                    level: 1\n                                    zone_count: 168\n                                    matrix_sum: 379.0\n                                    interzonal_sum: 375.56872217607577\n                                    intrazonal_sum: 3.4312778239242165\n                                    Comments:\n                                    Created by disaggregate_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: IB_HBW\n                                        level: 1\n                                        zone_count: 120\n                                        matrix_sum: 379.0\n                                        interzonal_sum: 377.0\n                                        intrazonal_sum: 2.0\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: IB_HBW\n                                            level: 1\n                                            zone_count: 120\n                                            matrix_sum: 379.0\n                                            interzonal_sum: 377.0\n                                            intrazonal_sum: 2.0\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: PM_peak_hr\n                                                purpose: IB_HBW\n                                                level: 1\n                                                zone_count: 120\n                                                matrix_sum: 379.0\n                                                interzonal_sum: 377.0\n                                                intrazonal_sum: 2.0\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBW_Rail.csv\n                                                MND Raw Data\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                1.0\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: OB_HBW\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 6.0\n                    interzonal_sum: 6.0\n                    intrazonal_sum: 0.0\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: OB_HBW\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 6.0\n                        interzonal_sum: 6.0\n                        intrazonal_sum: 0.0\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: OB_HBW\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 6.0\n                            interzonal_sum: 6.0\n                            intrazonal_sum: 0.0\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: OB_HBW\n                                level: 2\n                                zone_count: 168\n                                matrix_sum: 6.0\n                                interzonal_sum: 6.0\n                                intrazonal_sum: 0.0\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: OB_HBW\n                                    level: 2\n                                    zone_count: 168\n                                    matrix_sum: 6.0\n                                    interzonal_sum: 6.0\n                                    intrazonal_sum: 0.0\n                                    Comments:\n                                    Created by disaggregate_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: OB_HBW\n                                        level: 2\n                                        zone_count: 120\n                                        matrix_sum: 6.0\n                                        interzonal_sum: 6.0\n                                        intrazonal_sum: 0.0\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: OB_HBW\n                                            level: 2\n                                            zone_count: 120\n                                            matrix_sum: 6.0\n                                            interzonal_sum: 6.0\n                                            intrazonal_sum: 0.0\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: PM_peak_hr\n                                                purpose: OB_HBW\n                                                level: 2\n                                                zone_count: 120\n                                                matrix_sum: 6.0\n                                                interzonal_sum: 6.0\n                                                intrazonal_sum: 0.0\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBW_Rail.csv\n                                                MND Raw Data\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                1.0\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                ...\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: PM_peak_hr\n        purpose: Commuting\n        level: 1\n        zone_count: 168\n        matrix_sum: 403.89995\n        interzonal_sum: 239.61162999999996\n        intrazonal_sum: 164.28832000000003\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: PM_peak_hr\n            purpose: Commuting\n            level: 1\n            zone_count: 168\n            matrix_sum: 403.89995\n            interzonal_sum: 239.61162999999996\n            intrazonal_sum: 164.28832000000003\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: Commuting\n                level: 1\n                zone_count: 168\n                matrix_sum: 1082.54821\n                interzonal_sum: 918.2598899999999\n                intrazonal_sum: 164.28832000000003\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: Commuting\n                    level: 1\n                    zone_count: 168\n                    matrix_sum: 1245.05217\n                    interzonal_sum: 1080.7638499999998\n                    intrazonal_sum: 164.28832000000003\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 1245.05217\n                        interzonal_sum: 1080.7638499999998\n                        intrazonal_sum: 164.28832000000003\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_PM_peak_hr.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: HBW\n                        level: 1\n                        zone_count: 168\n                        matrix_sum: 1245.05217\n                        interzonal_sum: 1080.7638499999998\n                        intrazonal_sum: 164.28832000000003\n                        \n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://2": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 2, "_purpose": "Employers Business", "_time_period": "PM_peak_hr", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: PM_peak_hr\npurpose: Employers Business\nlevel: 2\nzone_count: 168\nmatrix_sum: 23.031862930628748\ninterzonal_sum: 8.919452930628747\nintrazonal_sum: 14.11241\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: PM_peak_hr\n    purpose: Employers Business\n    level: 2\n    zone_count: 168\n    matrix_sum: 0.2196229306287492\n    interzonal_sum: 0.2196229306287492\n    intrazonal_sum: 0.0\n    Comments:\n    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: PM_peak_hr\n        purpose: Employers Business\n        level: 2\n        zone_count: 168\n        matrix_sum: 0.34387824960873503\n        interzonal_sum: 0.34217970100383216\n        intrazonal_sum: 0.001698548604902852\n        Comments:\n        Created by operation <built-in function mul> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: PM_peak_hr\n            purpose: Employers Business\n            level: 2\n            zone_count: 168\n            matrix_sum: 230.59468575904452\n            interzonal_sum: 223.4696750009304\n            intrazonal_sum: 7.1250107581141116\n            Comments:\n            Created by operation <built-in function add> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: Employers Business\n                level: 3\n                zone_count: 168\n                matrix_sum: 120.59468575904451\n                interzonal_sum: 116.9509800006325\n                intrazonal_sum: 3.6437057584120134\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: Employers Business\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 100.94330768069374\n                    interzonal_sum: 97.839871794207\n                    intrazonal_sum: 3.1034358864867424\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: IB_HBEmp\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 100.94330768069374\n                        interzonal_sum: 97.839871794207\n                        intrazonal_sum: 3.1034358864867424\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: IB_HBEmp\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 100.94330768069372\n                            interzonal_sum: 100.65592371980048\n                            intrazonal_sum: 0.287383960893234\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: IB_HBEmp\n                                level: 3\n                                zone_count: 168\n                                matrix_sum: 100.94330768069372\n                                interzonal_sum: 100.65592371980048\n                                intrazonal_sum: 0.287383960893234\n                                Comments:\n                                Created by furness_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 424.00000000000006\n                                    interzonal_sum: 421.3228816821991\n                                    intrazonal_sum: 2.6771183178009266\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 424.00000000000006\n                                        interzonal_sum: 421.3228816821991\n                                        intrazonal_sum: 2.6771183178009266\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 120\n                                            matrix_sum: 424.0\n                                            interzonal_sum: 421.0\n                                            intrazonal_sum: 3.0\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: PM_peak_hr\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 424.0\n                                                interzonal_sum: 421.0\n                                                intrazonal_sum: 3.0\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: PM_peak_hr\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 424.0\n                                                    interzonal_sum: 421.0\n                                                    intrazonal_sum: 3.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    1.0\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                Convergence Information:\n                                1: count: 168, col_pass: 32, row_pass: 61\n                                2: count: 168, col_pass: 22, row_pass: 60\n                                3: count: 168, col_pass: 22, row_pass: 76\n                                4: count: 168, col_pass: 23, row_pass: 78\n                                5: count: 168, col_pass: 39, row_pass: 82\n                                6: count: 168, col_pass: 39, row_pass: 90\n                                7: count: 168, col_pass: 49, row_pass: 110\n                                8: count: 168, col_pass: 160, row_pass: 119\n                                9: count: 168, col_pass: 168, row_pass: 168\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: OB_HBEmp\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 19.651378078350774\n                    interzonal_sum: 19.111108206425502\n                    intrazonal_sum: 0.5402698719252714\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: OB_HBEmp\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 19.651378078350774\n                        interzonal_sum: 19.111108206425502\n                        intrazonal_sum: 0.5402698719252714\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: OB_HBEmp\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 19.651378078350774\n                            interzonal_sum: 19.57580416937806\n                            intrazonal_sum: 0.07557390897271418\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: OB_HBEmp\n                                level: 4\n                                zone_count: 168\n                                matrix_sum: 19.651378078350774\n                                interzonal_sum: 19.57580416937806\n                                intrazonal_sum: 0.07557390897271418\n                                Comments:\n                                Created by furness_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 87.0\n                                    interzonal_sum: 86.22218816515077\n                                    intrazonal_sum: 0.7778118348492377\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 87.0\n                                        interzonal_sum: 86.22218816515077\n                                        intrazonal_sum: 0.7778118348492377\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 120\n                                            matrix_sum: 87.0\n                                            interzonal_sum: 85.0\n                                            intrazonal_sum: 2.0\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: PM_peak_hr\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 87.0\n                                                interzonal_sum: 85.0\n                                                intrazonal_sum: 2.0\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: PM_peak_hr\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 87.0\n                                                    interzonal_sum: 85.0\n                                                    intrazonal_sum: 2.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    1.0\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                Convergence Information:\n                                1: count: 168, col_pass: 86, row_pass: 123\n                                2: count: 168, col_pass: 87, row_pass: 124\n                                3: count: 168, col_pass: 104, row_pass: 110\n                                4: count: 168, col_pass: 102, row_pass: 109\n                                5: count: 168, col_pass: 99, row_pass: 110\n                                6: count: 168, col_pass: 101, row_pass: 111\n                                7: count: 168, col_pass: 102, row_pass: 112\n                                8: count: 168, col_pass: 106, row_pass: 113\n                                9: count: 168, col_pass: 112, row_pass: 148\n                                10: count: 168, col_pass: 134, row_pass: 148\n                                11: count: 168, col_pass: 135, row_pass: 150\n                                12: count: 168, col_pass: 135, row_pass: 150\n                                13: count: 168, col_pass: 135, row_pass: 153\n                                14: count: 168, col_pass: 135, row_pass: 153\n                                15: count: 168, col_pass: 135, row_pass: 153\n                                16: count: 168, col_pass: 166, row_pass: 153\n                                17: count: 168, col_pass: 166, row_pass: 168\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function add>\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: NHBW\n                level: 7\n                zone_count: 168\n                matrix_sum: 110.0\n                interzonal_sum: 106.5186950002979\n                intrazonal_sum: 3.4813049997020977\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: NHBW\n                    level: 7\n                    zone_count: 168\n                    matrix_sum: 110.0\n                    interzonal_sum: 106.5186950002979\n                    intrazonal_sum: 3.4813049997020977\n                    Comments:\n                    Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: NHBW\n                        level: 7\n                        zone_count: 168\n                        matrix_sum: 110.0\n                        interzonal_sum: 109.56223570809782\n                        intrazonal_sum: 0.4377642919021845\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: NHBW\n                            level: 7\n                            zone_count: 168\n                            matrix_sum: 110.0\n                            interzonal_sum: 109.56223570809782\n                            intrazonal_sum: 0.4377642919021845\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: NHBW\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 110.0\n                                interzonal_sum: 109.56223570809782\n                                intrazonal_sum: 0.4377642919021845\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: NHBW\n                                    level: 5\n                                    zone_count: 120\n                                    matrix_sum: 110.0\n                                    interzonal_sum: 108.0\n                                    intrazonal_sum: 2.0\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: NHBW\n                                        level: 5\n                                        zone_count: 120\n                                        matrix_sum: 110.0\n                                        interzonal_sum: 108.0\n                                        intrazonal_sum: 2.0\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: NHBW\n                                            level: 5\n                                            zone_count: 120\n                                            matrix_sum: 110.0\n                                            interzonal_sum: 108.0\n                                            intrazonal_sum: 2.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Rail.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            1.0\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        <built-in function mul>\n        [\n            [[ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            ...\n            [False False False ... False False False]\n            [False False False ... False False False]\n            [False False False ... False False False]]\n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: SynthRail\n    value_type: Person Trips\n    time_period: PM_peak_hr\n    purpose: Employers Business\n    level: 2\n    zone_count: 168\n    matrix_sum: 22.81224\n    interzonal_sum: 8.699829999999999\n    intrazonal_sum: 14.11241\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: PM_peak_hr\n        purpose: Employers Business\n        level: 2\n        zone_count: 168\n        matrix_sum: 22.81224\n        interzonal_sum: 8.699829999999999\n        intrazonal_sum: 14.11241\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: PM_peak_hr\n            purpose: Employers Business\n            level: 2\n            zone_count: 168\n            matrix_sum: 92.96910000000001\n            interzonal_sum: 78.85669000000001\n            intrazonal_sum: 14.11241\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: Employers Business\n                level: 2\n                zone_count: 168\n                matrix_sum: 972.0424399999999\n                interzonal_sum: 871.5722999999999\n                intrazonal_sum: 100.47014\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: Employers Business\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 187.01378\n                    interzonal_sum: 155.70132\n                    intrazonal_sum: 31.312459999999998\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: HBEmp\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 187.01378\n                        interzonal_sum: 155.70132\n                        intrazonal_sum: 31.312459999999998\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_PM_peak_hr.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: HBEmp\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 187.01378\n                        interzonal_sum: 155.70132\n                        intrazonal_sum: 31.312459999999998\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: NHBW\n                    level: 4\n                    zone_count: 168\n                    matrix_sum: 785.0286600000001\n                    interzonal_sum: 715.87098\n                    intrazonal_sum: 69.15768\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: NHBW\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 785.0286600000001\n                        interzonal_sum: 715.87098\n                        intrazonal_sum: 69.15768\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_PM_peak_hr.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: NHBW\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 785.0286600000001\n                        interzonal_sum: 715.87098\n                        intrazonal_sum: 69.15768\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: PM_peak_hr\npurpose: Employers Business\nlevel: 2\nzone_count: 168\nmatrix_sum: 346.4187235577143\ninterzonal_sum: 260.0609935577143\nintrazonal_sum: 86.35773\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: PM_peak_hr\n    purpose: Employers Business\n    level: 2\n    zone_count: 168\n    matrix_sum: 346.4187235577143\n    interzonal_sum: 260.0609935577143\n    intrazonal_sum: 86.35773\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: PM_peak_hr\n        purpose: Employers Business\n        level: 2\n        zone_count: 168\n        matrix_sum: 213.70311355771432\n        interzonal_sum: 213.70311355771432\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: PM_peak_hr\n            purpose: Employers Business\n            level: 2\n            zone_count: 168\n            matrix_sum: 230.2508075094358\n            interzonal_sum: 223.12749529992658\n            intrazonal_sum: 7.1233122095092085\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: Employers Business\n                level: 2\n                zone_count: 168\n                matrix_sum: 230.59468575904452\n                interzonal_sum: 223.4696750009304\n                intrazonal_sum: 7.1250107581141116\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: Employers Business\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 120.59468575904451\n                    interzonal_sum: 116.9509800006325\n                    intrazonal_sum: 3.6437057584120134\n                    Comments:\n                    Created by operation <built-in function add> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: Employers Business\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 100.94330768069374\n                        interzonal_sum: 97.839871794207\n                        intrazonal_sum: 3.1034358864867424\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: IB_HBEmp\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 100.94330768069374\n                            interzonal_sum: 97.839871794207\n                            intrazonal_sum: 3.1034358864867424\n                            Comments:\n                            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: IB_HBEmp\n                                level: 3\n                                zone_count: 168\n                                matrix_sum: 100.94330768069372\n                                interzonal_sum: 100.65592371980048\n                                intrazonal_sum: 0.287383960893234\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: IB_HBEmp\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 100.94330768069372\n                                    interzonal_sum: 100.65592371980048\n                                    intrazonal_sum: 0.287383960893234\n                                    Comments:\n                                    Created by furness_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 424.00000000000006\n                                        interzonal_sum: 421.3228816821991\n                                        intrazonal_sum: 2.6771183178009266\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 424.00000000000006\n                                            interzonal_sum: 421.3228816821991\n                                            intrazonal_sum: 2.6771183178009266\n                                            Comments:\n                                            Created by disaggregate_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: PM_peak_hr\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 424.0\n                                                interzonal_sum: 421.0\n                                                intrazonal_sum: 3.0\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: PM_peak_hr\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 424.0\n                                                    interzonal_sum: 421.0\n                                                    intrazonal_sum: 3.0\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Rail\n                                                        value_type: Person Trips\n                                                        time_period: PM_peak_hr\n                                                        purpose: IB_HBO\n                                                        level: 3\n                                                        zone_count: 120\n                                                        matrix_sum: 424.0\n                                                        interzonal_sum: 421.0\n                                                        intrazonal_sum: 3.0\n                                                        Comments:\n                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                                        MND Raw Data\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    Convergence Information:\n                                    1: count: 168, col_pass: 32, row_pass: 61\n                                    2: count: 168, col_pass: 22, row_pass: 60\n                                    3: count: 168, col_pass: 22, row_pass: 76\n                                    4: count: 168, col_pass: 23, row_pass: 78\n                                    5: count: 168, col_pass: 39, row_pass: 82\n                                    6: count: 168, col_pass: 39, row_pass: 90\n                                    7: count: 168, col_pass: 49, row_pass: 110\n                                    8: count: 168, col_pass: 160, row_pass: 119\n                                    9: count: 168, col_pass: 168, row_pass: 168\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    <built-in function add>\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: OB_HBEmp\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 19.651378078350774\n                        interzonal_sum: 19.111108206425502\n                        intrazonal_sum: 0.5402698719252714\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: OB_HBEmp\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 19.651378078350774\n                            interzonal_sum: 19.111108206425502\n                            intrazonal_sum: 0.5402698719252714\n                            Comments:\n                            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: OB_HBEmp\n                                level: 4\n                                zone_count: 168\n                                matrix_sum: 19.651378078350774\n                                interzonal_sum: 19.57580416937806\n                                intrazonal_sum: 0.07557390897271418\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: OB_HBEmp\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 19.651378078350774\n                                    interzonal_sum: 19.57580416937806\n                                    intrazonal_sum: 0.07557390897271418\n                                    Comments:\n                                    Created by furness_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 87.0\n                                        interzonal_sum: 86.22218816515077\n                                        intrazonal_sum: 0.7778118348492377\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 168\n                                            matrix_sum: 87.0\n                                            interzonal_sum: 86.22218816515077\n                                            intrazonal_sum: 0.7778118348492377\n                                            Comments:\n                                            Created by disaggregate_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: PM_peak_hr\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 87.0\n                                                interzonal_sum: 85.0\n                                                intrazonal_sum: 2.0\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: PM_peak_hr\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 87.0\n                                                    interzonal_sum: 85.0\n                                                    intrazonal_sum: 2.0\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Rail\n                                                        value_type: Person Trips\n                                                        time_period: PM_peak_hr\n                                                        purpose: OB_HBO\n                                                        level: 4\n                                                        zone_count: 120\n                                                        matrix_sum: 87.0\n                                                        interzonal_sum: 85.0\n                                                        intrazonal_sum: 2.0\n                                                        Comments:\n                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                                        MND Raw Data\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    Convergence Information:\n                                    1: count: 168, col_pass: 86, row_pass: 123\n                                    2: count: 168, col_pass: 87, row_pass: 124\n                                    3: count: 168, col_pass: 104, row_pass: 110\n                                    4: count: 168, col_pass: 102, row_pass: 109\n                                    5: count: 168, col_pass: 99, row_pass: 110\n                                    6: count: 168, col_pass: 101, row_pass: 111\n                                    7: count: 168, col_pass: 102, row_pass: 112\n                                    8: count: 168, col_pass: 106, row_pass: 113\n                                    9: count: 168, col_pass: 112, row_pass: 148\n                                    10: count: 168, col_pass: 134, row_pass: 148\n                                    11: count: 168, col_pass: 135, row_pass: 150\n                                    12: count: 168, col_pass: 135, row_pass: 150\n                                    13: count: 168, col_pass: 135, row_pass: 153\n                                    14: count: 168, col_pass: 135, row_pass: 153\n                                    15: count: 168, col_pass: 135, row_pass: 153\n                                    16: count: 168, col_pass: 166, row_pass: 153\n                                    17: count: 168, col_pass: 166, row_pass: 168\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: NHBW\n                    level: 7\n                    zone_count: 168\n                    matrix_sum: 110.0\n                    interzonal_sum: 106.5186950002979\n                    intrazonal_sum: 3.4813049997020977\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: NHBW\n                        level: 7\n                        zone_count: 168\n                        matrix_sum: 110.0\n                        interzonal_sum: 106.5186950002979\n                        intrazonal_sum: 3.4813049997020977\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: NHBW\n                            level: 7\n                            zone_count: 168\n                            matrix_sum: 110.0\n                            interzonal_sum: 109.56223570809782\n                            intrazonal_sum: 0.4377642919021845\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: NHBW\n                                level: 7\n                                zone_count: 168\n                                matrix_sum: 110.0\n                                interzonal_sum: 109.56223570809782\n                                intrazonal_sum: 0.4377642919021845\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: NHBW\n                                    level: 5\n                                    zone_count: 168\n                                    matrix_sum: 110.0\n                                    interzonal_sum: 109.56223570809782\n                                    intrazonal_sum: 0.4377642919021845\n                                    Comments:\n                                    Created by disaggregate_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: NHBW\n                                        level: 5\n                                        zone_count: 120\n                                        matrix_sum: 110.0\n                                        interzonal_sum: 108.0\n                                        intrazonal_sum: 2.0\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: NHBW\n                                            level: 5\n                                            zone_count: 120\n                                            matrix_sum: 110.0\n                                            interzonal_sum: 108.0\n                                            intrazonal_sum: 2.0\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: PM_peak_hr\n                                                purpose: NHBW\n                                                level: 5\n                                                zone_count: 120\n                                                matrix_sum: 110.0\n                                                interzonal_sum: 108.0\n                                                intrazonal_sum: 2.0\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBW_Rail.csv\n                                                MND Raw Data\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                1.0\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                ...\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: PM_peak_hr\n        purpose: Employers Business\n        level: 2\n        zone_count: 168\n        matrix_sum: 132.71561\n        interzonal_sum: 46.357879999999994\n        intrazonal_sum: 86.35773\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: PM_peak_hr\n            purpose: Employers Business\n            level: 2\n            zone_count: 168\n            matrix_sum: 132.71561\n            interzonal_sum: 46.357879999999994\n            intrazonal_sum: 86.35773\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: Employers Business\n                level: 2\n                zone_count: 168\n                matrix_sum: 879.0733399999999\n                interzonal_sum: 792.71561\n                intrazonal_sum: 86.35773\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: Employers Business\n                    level: 2\n                    zone_count: 168\n                    matrix_sum: 972.0424399999999\n                    interzonal_sum: 871.5722999999999\n                    intrazonal_sum: 100.47014\n                    Comments:\n                    Created by operation <built-in function add> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: SynthRail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: Employers Business\n                        level: 2\n                        zone_count: 168\n                        matrix_sum: 187.01378\n                        interzonal_sum: 155.70132\n                        intrazonal_sum: 31.312459999999998\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: HBEmp\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 187.01378\n                            interzonal_sum: 155.70132\n                            intrazonal_sum: 31.312459999999998\n                            Comments:\n                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_PM_peak_hr.csv\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: HBEmp\n                            level: 2\n                            zone_count: 168\n                            matrix_sum: 187.01378\n                            interzonal_sum: 155.70132\n                            intrazonal_sum: 31.312459999999998\n                            \n                        ]\n                        \n                    ]\n                    <built-in function add>\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: NHBW\n                        level: 4\n                        zone_count: 168\n                        matrix_sum: 785.0286600000001\n                        interzonal_sum: 715.87098\n                        intrazonal_sum: 69.15768\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: NHBW\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 785.0286600000001\n                            interzonal_sum: 715.87098\n                            intrazonal_sum: 69.15768\n                            Comments:\n                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_PM_peak_hr.csv\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: NHBW\n                            level: 4\n                            zone_count: 168\n                            matrix_sum: 785.0286600000001\n                            interzonal_sum: 715.87098\n                            intrazonal_sum: 69.15768\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}, "json://3": {"py/object": "matrix_class_v2.Matrix", "_zones": {"py/object": "matrix_class_v2.Zones", "_name": "2019_NWL_Model_zones", "_disaggregation_maps": {"rail_redist": {"py/id": 3}}, "_zones": {"py/id": 488}, "_source_file": {"py/id": 490}, "_source_sheet": "zones"}, "_matrix": {"py/object": "numpy.ndarray", "values": "", "shape": [168, 168], "dtype": "float64", "byteorder": "<"}, "_level": 3, "_purpose": "Other", "_time_period": "PM_peak_hr", "_vehicle_type": "Rail", "_value_type": "Person Trips", "_comments": "Created by operation <built-in function add> (reverse: False) on\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: PM_peak_hr\npurpose: Other\nlevel: 3\nzone_count: 168\nmatrix_sum: 19.142613314774\ninterzonal_sum: 9.252353314773998\nintrazonal_sum: 9.890260000000001\nComments:\nCreated by operation <built-in function add> (reverse: False) on\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: PM_peak_hr\n    purpose: Other\n    level: 3\n    zone_count: 168\n    matrix_sum: 0.168973314774001\n    interzonal_sum: 0.168973314774001\n    intrazonal_sum: 0.0\n    Comments:\n    Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: PM_peak_hr\n        purpose: Other\n        level: 3\n        zone_count: 168\n        matrix_sum: 0.668591282724022\n        interzonal_sum: 0.6619579950455077\n        intrazonal_sum: 0.006633287678514362\n        Comments:\n        Created by operation <built-in function mul> (reverse: False) on\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: PM_peak_hr\n            purpose: Other\n            level: 3\n            zone_count: 168\n            matrix_sum: 582.3547307334552\n            interzonal_sum: 574.6248854970614\n            intrazonal_sum: 7.729845236393819\n            Comments:\n            Created by operation <built-in function add> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: Other\n                level: 5\n                zone_count: 168\n                matrix_sum: 390.3547307334552\n                interzonal_sum: 383.85227106544426\n                intrazonal_sum: 6.502459668010914\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: Other\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 323.0245909485739\n                    interzonal_sum: 320.36911224175265\n                    intrazonal_sum: 2.6554787068212633\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: IB_HBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 323.0245909485739\n                        interzonal_sum: 320.36911224175265\n                        intrazonal_sum: 2.6554787068212633\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: IB_HBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 323.0245909485739\n                            interzonal_sum: 320.89961107223587\n                            intrazonal_sum: 2.124979876338017\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: IB_HBO\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 323.0245909485739\n                                interzonal_sum: 320.89961107223587\n                                intrazonal_sum: 2.124979876338017\n                                Comments:\n                                Created by furness_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: IB_HBO\n                                    level: 3\n                                    zone_count: 168\n                                    matrix_sum: 424.00000000000006\n                                    interzonal_sum: 421.3228816821991\n                                    intrazonal_sum: 2.6771183178009266\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 424.00000000000006\n                                        interzonal_sum: 421.3228816821991\n                                        intrazonal_sum: 2.6771183178009266\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 120\n                                            matrix_sum: 424.0\n                                            interzonal_sum: 421.0\n                                            intrazonal_sum: 3.0\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: PM_peak_hr\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 424.0\n                                                interzonal_sum: 421.0\n                                                intrazonal_sum: 3.0\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: PM_peak_hr\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 424.0\n                                                    interzonal_sum: 421.0\n                                                    intrazonal_sum: 3.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    1.0\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                Convergence Information:\n                                1: count: 168, col_pass: 34, row_pass: 64\n                                2: count: 168, col_pass: 25, row_pass: 65\n                                3: count: 168, col_pass: 46, row_pass: 66\n                                4: count: 168, col_pass: 73, row_pass: 108\n                                5: count: 168, col_pass: 158, row_pass: 115\n                                6: count: 168, col_pass: 158, row_pass: 119\n                                7: count: 168, col_pass: 168, row_pass: 168\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: OB_HBO\n                    level: 6\n                    zone_count: 168\n                    matrix_sum: 67.33013978488124\n                    interzonal_sum: 63.48315882369159\n                    intrazonal_sum: 3.846980961189651\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: OB_HBO\n                        level: 6\n                        zone_count: 168\n                        matrix_sum: 67.33013978488124\n                        interzonal_sum: 63.48315882369159\n                        intrazonal_sum: 3.846980961189651\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: OB_HBO\n                            level: 6\n                            zone_count: 168\n                            matrix_sum: 67.33013978488125\n                            interzonal_sum: 66.6316110196654\n                            intrazonal_sum: 0.698528765215848\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: OB_HBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 67.33013978488125\n                                interzonal_sum: 66.6316110196654\n                                intrazonal_sum: 0.698528765215848\n                                Comments:\n                                Created by furness_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: OB_HBO\n                                    level: 4\n                                    zone_count: 168\n                                    matrix_sum: 87.0\n                                    interzonal_sum: 86.22218816515077\n                                    intrazonal_sum: 0.7778118348492377\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 87.0\n                                        interzonal_sum: 86.22218816515077\n                                        intrazonal_sum: 0.7778118348492377\n                                        Comments:\n                                        Created by disaggregate_matrix operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 120\n                                            matrix_sum: 87.0\n                                            interzonal_sum: 85.0\n                                            intrazonal_sum: 2.0\n                                            Comments:\n                                            Created by copy operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: PM_peak_hr\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 87.0\n                                                interzonal_sum: 85.0\n                                                intrazonal_sum: 2.0\n                                                Comments:\n                                                Created by operation <built-in function mul> (reverse: False) on\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: PM_peak_hr\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 87.0\n                                                    interzonal_sum: 85.0\n                                                    intrazonal_sum: 2.0\n                                                    Comments:\n                                                    Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                                    MND Raw Data\n                                                    \n                                                ]\n                                                <built-in function mul>\n                                                [\n                                                    1.0\n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                Convergence Information:\n                                1: count: 168, col_pass: 86, row_pass: 119\n                                2: count: 168, col_pass: 135, row_pass: 123\n                                3: count: 168, col_pass: 159, row_pass: 144\n                                4: count: 168, col_pass: 167, row_pass: 166\n                                5: count: 168, col_pass: 168, row_pass: 168\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function add>\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: NHBO\n                level: 8\n                zone_count: 168\n                matrix_sum: 192.0\n                interzonal_sum: 190.7726144316171\n                intrazonal_sum: 1.2273855683829047\n                Comments:\n                Created by copy operation on the following matrix:\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: NHBO\n                    level: 8\n                    zone_count: 168\n                    matrix_sum: 192.0\n                    interzonal_sum: 190.7726144316171\n                    intrazonal_sum: 1.2273855683829047\n                    Comments:\n                    Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: NHBO\n                        level: 8\n                        zone_count: 168\n                        matrix_sum: 192.0\n                        interzonal_sum: 191.22237532348862\n                        intrazonal_sum: 0.7776246765113847\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: NHBO\n                            level: 8\n                            zone_count: 168\n                            matrix_sum: 192.0\n                            interzonal_sum: 191.22237532348862\n                            intrazonal_sum: 0.7776246765113847\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: NHBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 192.0\n                                interzonal_sum: 191.22237532348862\n                                intrazonal_sum: 0.7776246765113847\n                                Comments:\n                                Created by disaggregate_matrix operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: NHBO\n                                    level: 6\n                                    zone_count: 120\n                                    matrix_sum: 192.0\n                                    interzonal_sum: 190.0\n                                    intrazonal_sum: 2.0\n                                    Comments:\n                                    Created by copy operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: NHBO\n                                        level: 6\n                                        zone_count: 120\n                                        matrix_sum: 192.0\n                                        interzonal_sum: 190.0\n                                        intrazonal_sum: 2.0\n                                        Comments:\n                                        Created by operation <built-in function mul> (reverse: False) on\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: NHBO\n                                            level: 6\n                                            zone_count: 120\n                                            matrix_sum: 192.0\n                                            interzonal_sum: 190.0\n                                            intrazonal_sum: 2.0\n                                            Comments:\n                                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Rail.csv\n                                            MND Raw Data\n                                            \n                                        ]\n                                        <built-in function mul>\n                                        [\n                                            1.0\n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            \n        ]\n        <built-in function mul>\n        [\n            [[ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            [ True  True  True ... False False False]\n            ...\n            [False False False ... False False False]\n            [False False False ... False False False]\n            [False False False ... False False False]]\n        ]\n        \n    ]\n    \n]\n<built-in function add>\n[\n    Matrix Object\n    vehicle_type: SynthRail\n    value_type: Person Trips\n    time_period: PM_peak_hr\n    purpose: Other\n    level: 3\n    zone_count: 168\n    matrix_sum: 18.973639999999996\n    interzonal_sum: 9.083379999999995\n    intrazonal_sum: 9.890260000000001\n    Comments:\n    Created by copy operation on the following matrix:\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: PM_peak_hr\n        purpose: Other\n        level: 3\n        zone_count: 168\n        matrix_sum: 18.973639999999996\n        interzonal_sum: 9.083379999999995\n        intrazonal_sum: 9.890260000000001\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: PM_peak_hr\n            purpose: Other\n            level: 3\n            zone_count: 168\n            matrix_sum: 141.41969999999998\n            interzonal_sum: 131.52943999999997\n            intrazonal_sum: 9.890260000000001\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: Other\n                level: 3\n                zone_count: 168\n                matrix_sum: 1570.0573200000001\n                interzonal_sum: 1431.74196\n                intrazonal_sum: 138.31536\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: Other\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 785.0286600000001\n                    interzonal_sum: 715.87098\n                    intrazonal_sum: 69.15768\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 785.0286600000001\n                        interzonal_sum: 715.87098\n                        intrazonal_sum: 69.15768\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_PM_peak_hr.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: HBO\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 785.0286600000001\n                        interzonal_sum: 715.87098\n                        intrazonal_sum: 69.15768\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: NHBO\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 785.0286600000001\n                    interzonal_sum: 715.87098\n                    intrazonal_sum: 69.15768\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: NHBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 785.0286600000001\n                        interzonal_sum: 715.87098\n                        intrazonal_sum: 69.15768\n                        Comments:\n                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_PM_peak_hr.csv\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: NHBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 785.0286600000001\n                        interzonal_sum: 715.87098\n                        intrazonal_sum: 69.15768\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                [ True  True  True ... False False False]\n                ...\n                [False False False ... False False False]\n                [False False False ... False False False]\n                [False False False ... False False False]]\n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n<built-in function add>\n[\nMatrix Object\nvehicle_type: Rail\nvalue_type: Person Trips\ntime_period: PM_peak_hr\npurpose: Other\nlevel: 3\nzone_count: 168\nmatrix_sum: 752.8517779472858\ninterzonal_sum: 624.4266779472857\nintrazonal_sum: 128.42510000000001\nComments:\nCreated by copy operation on the following matrix:\n[\n    Matrix Object\n    vehicle_type: Rail\n    value_type: Person Trips\n    time_period: PM_peak_hr\n    purpose: Other\n    level: 3\n    zone_count: 168\n    matrix_sum: 752.8517779472858\n    interzonal_sum: 624.4266779472857\n    intrazonal_sum: 128.42510000000001\n    Comments:\n    Created by operation <built-in function add> (reverse: False) on\n    [\n        Matrix Object\n        vehicle_type: Rail\n        value_type: Person Trips\n        time_period: PM_peak_hr\n        purpose: Other\n        level: 3\n        zone_count: 168\n        matrix_sum: 559.1565779472858\n        interzonal_sum: 559.1565779472858\n        intrazonal_sum: 0.0\n        Comments:\n        Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: Rail\n            value_type: Person Trips\n            time_period: PM_peak_hr\n            purpose: Other\n            level: 3\n            zone_count: 168\n            matrix_sum: 581.6861394507312\n            interzonal_sum: 573.9629275020159\n            intrazonal_sum: 7.723211948715305\n            Comments:\n            Created by operation <built-in function mul> (reverse: False) on\n            [\n                Matrix Object\n                vehicle_type: Rail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: Other\n                level: 3\n                zone_count: 168\n                matrix_sum: 582.3547307334552\n                interzonal_sum: 574.6248854970614\n                intrazonal_sum: 7.729845236393819\n                Comments:\n                Created by operation <built-in function add> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: Other\n                    level: 5\n                    zone_count: 168\n                    matrix_sum: 390.3547307334552\n                    interzonal_sum: 383.85227106544426\n                    intrazonal_sum: 6.502459668010914\n                    Comments:\n                    Created by operation <built-in function add> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: Other\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 323.0245909485739\n                        interzonal_sum: 320.36911224175265\n                        intrazonal_sum: 2.6554787068212633\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: IB_HBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 323.0245909485739\n                            interzonal_sum: 320.36911224175265\n                            intrazonal_sum: 2.6554787068212633\n                            Comments:\n                            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: IB_HBO\n                                level: 5\n                                zone_count: 168\n                                matrix_sum: 323.0245909485739\n                                interzonal_sum: 320.89961107223587\n                                intrazonal_sum: 2.124979876338017\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: IB_HBO\n                                    level: 5\n                                    zone_count: 168\n                                    matrix_sum: 323.0245909485739\n                                    interzonal_sum: 320.89961107223587\n                                    intrazonal_sum: 2.124979876338017\n                                    Comments:\n                                    Created by furness_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: IB_HBO\n                                        level: 3\n                                        zone_count: 168\n                                        matrix_sum: 424.00000000000006\n                                        interzonal_sum: 421.3228816821991\n                                        intrazonal_sum: 2.6771183178009266\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: IB_HBO\n                                            level: 3\n                                            zone_count: 168\n                                            matrix_sum: 424.00000000000006\n                                            interzonal_sum: 421.3228816821991\n                                            intrazonal_sum: 2.6771183178009266\n                                            Comments:\n                                            Created by disaggregate_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: PM_peak_hr\n                                                purpose: IB_HBO\n                                                level: 3\n                                                zone_count: 120\n                                                matrix_sum: 424.0\n                                                interzonal_sum: 421.0\n                                                intrazonal_sum: 3.0\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: PM_peak_hr\n                                                    purpose: IB_HBO\n                                                    level: 3\n                                                    zone_count: 120\n                                                    matrix_sum: 424.0\n                                                    interzonal_sum: 421.0\n                                                    intrazonal_sum: 3.0\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Rail\n                                                        value_type: Person Trips\n                                                        time_period: PM_peak_hr\n                                                        purpose: IB_HBO\n                                                        level: 3\n                                                        zone_count: 120\n                                                        matrix_sum: 424.0\n                                                        interzonal_sum: 421.0\n                                                        intrazonal_sum: 3.0\n                                                        Comments:\n                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_IB_HBO_Rail.csv\n                                                        MND Raw Data\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    Convergence Information:\n                                    1: count: 168, col_pass: 34, row_pass: 64\n                                    2: count: 168, col_pass: 25, row_pass: 65\n                                    3: count: 168, col_pass: 46, row_pass: 66\n                                    4: count: 168, col_pass: 73, row_pass: 108\n                                    5: count: 168, col_pass: 158, row_pass: 115\n                                    6: count: 168, col_pass: 158, row_pass: 119\n                                    7: count: 168, col_pass: 168, row_pass: 168\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    <built-in function add>\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: OB_HBO\n                        level: 6\n                        zone_count: 168\n                        matrix_sum: 67.33013978488124\n                        interzonal_sum: 63.48315882369159\n                        intrazonal_sum: 3.846980961189651\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: OB_HBO\n                            level: 6\n                            zone_count: 168\n                            matrix_sum: 67.33013978488124\n                            interzonal_sum: 63.48315882369159\n                            intrazonal_sum: 3.846980961189651\n                            Comments:\n                            Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: OB_HBO\n                                level: 6\n                                zone_count: 168\n                                matrix_sum: 67.33013978488125\n                                interzonal_sum: 66.6316110196654\n                                intrazonal_sum: 0.698528765215848\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: OB_HBO\n                                    level: 6\n                                    zone_count: 168\n                                    matrix_sum: 67.33013978488125\n                                    interzonal_sum: 66.6316110196654\n                                    intrazonal_sum: 0.698528765215848\n                                    Comments:\n                                    Created by furness_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: OB_HBO\n                                        level: 4\n                                        zone_count: 168\n                                        matrix_sum: 87.0\n                                        interzonal_sum: 86.22218816515077\n                                        intrazonal_sum: 0.7778118348492377\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: OB_HBO\n                                            level: 4\n                                            zone_count: 168\n                                            matrix_sum: 87.0\n                                            interzonal_sum: 86.22218816515077\n                                            intrazonal_sum: 0.7778118348492377\n                                            Comments:\n                                            Created by disaggregate_matrix operation on the following matrix:\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: PM_peak_hr\n                                                purpose: OB_HBO\n                                                level: 4\n                                                zone_count: 120\n                                                matrix_sum: 87.0\n                                                interzonal_sum: 85.0\n                                                intrazonal_sum: 2.0\n                                                Comments:\n                                                Created by copy operation on the following matrix:\n                                                [\n                                                    Matrix Object\n                                                    vehicle_type: Rail\n                                                    value_type: Person Trips\n                                                    time_period: PM_peak_hr\n                                                    purpose: OB_HBO\n                                                    level: 4\n                                                    zone_count: 120\n                                                    matrix_sum: 87.0\n                                                    interzonal_sum: 85.0\n                                                    intrazonal_sum: 2.0\n                                                    Comments:\n                                                    Created by operation <built-in function mul> (reverse: False) on\n                                                    [\n                                                        Matrix Object\n                                                        vehicle_type: Rail\n                                                        value_type: Person Trips\n                                                        time_period: PM_peak_hr\n                                                        purpose: OB_HBO\n                                                        level: 4\n                                                        zone_count: 120\n                                                        matrix_sum: 87.0\n                                                        interzonal_sum: 85.0\n                                                        intrazonal_sum: 2.0\n                                                        Comments:\n                                                        Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_OB_HBO_Rail.csv\n                                                        MND Raw Data\n                                                        \n                                                    ]\n                                                    <built-in function mul>\n                                                    [\n                                                        1.0\n                                                    ]\n                                                    \n                                                ]\n                                                \n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    Convergence Information:\n                                    1: count: 168, col_pass: 86, row_pass: 119\n                                    2: count: 168, col_pass: 135, row_pass: 123\n                                    3: count: 168, col_pass: 159, row_pass: 144\n                                    4: count: 168, col_pass: 167, row_pass: 166\n                                    5: count: 168, col_pass: 168, row_pass: 168\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function add>\n                [\n                    Matrix Object\n                    vehicle_type: Rail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: NHBO\n                    level: 8\n                    zone_count: 168\n                    matrix_sum: 192.0\n                    interzonal_sum: 190.7726144316171\n                    intrazonal_sum: 1.2273855683829047\n                    Comments:\n                    Created by copy operation on the following matrix:\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: NHBO\n                        level: 8\n                        zone_count: 168\n                        matrix_sum: 192.0\n                        interzonal_sum: 190.7726144316171\n                        intrazonal_sum: 1.2273855683829047\n                        Comments:\n                        Created by redistribute_matrix (redistributed matrix) operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: NHBO\n                            level: 8\n                            zone_count: 168\n                            matrix_sum: 192.0\n                            interzonal_sum: 191.22237532348862\n                            intrazonal_sum: 0.7776246765113847\n                            Comments:\n                            Created by copy operation on the following matrix:\n                            [\n                                Matrix Object\n                                vehicle_type: Rail\n                                value_type: Person Trips\n                                time_period: PM_peak_hr\n                                purpose: NHBO\n                                level: 8\n                                zone_count: 168\n                                matrix_sum: 192.0\n                                interzonal_sum: 191.22237532348862\n                                intrazonal_sum: 0.7776246765113847\n                                Comments:\n                                Created by copy operation on the following matrix:\n                                [\n                                    Matrix Object\n                                    vehicle_type: Rail\n                                    value_type: Person Trips\n                                    time_period: PM_peak_hr\n                                    purpose: NHBO\n                                    level: 6\n                                    zone_count: 168\n                                    matrix_sum: 192.0\n                                    interzonal_sum: 191.22237532348862\n                                    intrazonal_sum: 0.7776246765113847\n                                    Comments:\n                                    Created by disaggregate_matrix operation on the following matrix:\n                                    [\n                                        Matrix Object\n                                        vehicle_type: Rail\n                                        value_type: Person Trips\n                                        time_period: PM_peak_hr\n                                        purpose: NHBO\n                                        level: 6\n                                        zone_count: 120\n                                        matrix_sum: 192.0\n                                        interzonal_sum: 190.0\n                                        intrazonal_sum: 2.0\n                                        Comments:\n                                        Created by copy operation on the following matrix:\n                                        [\n                                            Matrix Object\n                                            vehicle_type: Rail\n                                            value_type: Person Trips\n                                            time_period: PM_peak_hr\n                                            purpose: NHBO\n                                            level: 6\n                                            zone_count: 120\n                                            matrix_sum: 192.0\n                                            interzonal_sum: 190.0\n                                            intrazonal_sum: 2.0\n                                            Comments:\n                                            Created by operation <built-in function mul> (reverse: False) on\n                                            [\n                                                Matrix Object\n                                                vehicle_type: Rail\n                                                value_type: Person Trips\n                                                time_period: PM_peak_hr\n                                                purpose: NHBO\n                                                level: 6\n                                                zone_count: 120\n                                                matrix_sum: 192.0\n                                                interzonal_sum: 190.0\n                                                intrazonal_sum: 2.0\n                                                Comments:\n                                                Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\20200220 - Deliverable 1 Matrices\\D1_Weekday_NHBO_Rail.csv\n                                                MND Raw Data\n                                                \n                                            ]\n                                            <built-in function mul>\n                                            [\n                                                1.0\n                                            ]\n                                            \n                                        ]\n                                        \n                                    ]\n                                    \n                                ]\n                                \n                            ]\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                \n            ]\n            <built-in function mul>\n            [\n                [[False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                [False False False ...  True  True  True]\n                ...\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]\n                [ True  True  True ...  True  True  True]]\n            ]\n            \n        ]\n        \n    ]\n    <built-in function add>\n    [\n        Matrix Object\n        vehicle_type: SynthRail\n        value_type: Person Trips\n        time_period: PM_peak_hr\n        purpose: Other\n        level: 3\n        zone_count: 168\n        matrix_sum: 193.69520000000003\n        interzonal_sum: 65.27010000000001\n        intrazonal_sum: 128.42510000000001\n        Comments:\n        Created by copy operation on the following matrix:\n        [\n            Matrix Object\n            vehicle_type: SynthRail\n            value_type: Person Trips\n            time_period: PM_peak_hr\n            purpose: Other\n            level: 3\n            zone_count: 168\n            matrix_sum: 193.69520000000003\n            interzonal_sum: 65.27010000000001\n            intrazonal_sum: 128.42510000000001\n            Comments:\n            Created by operate_by_property (<built-in function mul>) operation on the following matrix:\n            [\n                Matrix Object\n                vehicle_type: SynthRail\n                value_type: Person Trips\n                time_period: PM_peak_hr\n                purpose: Other\n                level: 3\n                zone_count: 168\n                matrix_sum: 1428.63762\n                interzonal_sum: 1300.21252\n                intrazonal_sum: 128.42510000000001\n                Comments:\n                Created by operation <built-in function mul> (reverse: False) on\n                [\n                    Matrix Object\n                    vehicle_type: SynthRail\n                    value_type: Person Trips\n                    time_period: PM_peak_hr\n                    purpose: Other\n                    level: 3\n                    zone_count: 168\n                    matrix_sum: 1570.0573200000001\n                    interzonal_sum: 1431.74196\n                    intrazonal_sum: 138.31536\n                    Comments:\n                    Created by operation <built-in function add> (reverse: False) on\n                    [\n                        Matrix Object\n                        vehicle_type: SynthRail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: Other\n                        level: 3\n                        zone_count: 168\n                        matrix_sum: 785.0286600000001\n                        interzonal_sum: 715.87098\n                        intrazonal_sum: 69.15768\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 785.0286600000001\n                            interzonal_sum: 715.87098\n                            intrazonal_sum: 69.15768\n                            Comments:\n                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_PM_peak_hr.csv\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: HBO\n                            level: 3\n                            zone_count: 168\n                            matrix_sum: 785.0286600000001\n                            interzonal_sum: 715.87098\n                            intrazonal_sum: 69.15768\n                            \n                        ]\n                        \n                    ]\n                    <built-in function add>\n                    [\n                        Matrix Object\n                        vehicle_type: Rail\n                        value_type: Person Trips\n                        time_period: PM_peak_hr\n                        purpose: NHBO\n                        level: 5\n                        zone_count: 168\n                        matrix_sum: 785.0286600000001\n                        interzonal_sum: 715.87098\n                        intrazonal_sum: 69.15768\n                        Comments:\n                        Created by copy operation on the following matrix:\n                        [\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: NHBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 785.0286600000001\n                            interzonal_sum: 715.87098\n                            intrazonal_sum: 69.15768\n                            Comments:\n                            Imported matrix from C:\\Users\\UKTMB001\\Documents\\Python Scripts\\MND\\Test\\synth_rail_PM_peak_hr.csv\n                            Matrix Object\n                            vehicle_type: Rail\n                            value_type: Person Trips\n                            time_period: PM_peak_hr\n                            purpose: NHBO\n                            level: 5\n                            zone_count: 168\n                            matrix_sum: 785.0286600000001\n                            interzonal_sum: 715.87098\n                            intrazonal_sum: 69.15768\n                            \n                        ]\n                        \n                    ]\n                    \n                ]\n                <built-in function mul>\n                [\n                    [[False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    [False False False ...  True  True  True]\n                    ...\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]\n                    [ True  True  True ...  True  True  True]]\n                ]\n                \n            ]\n            \n        ]\n        \n    ]\n    \n]\n\n]\n"}}}